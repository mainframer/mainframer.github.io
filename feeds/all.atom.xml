<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Modern Mainframer</title><link href="http://mainframer.github.io/" rel="alternate"></link><link href="http://mainframer.github.io/feeds/all.atom.xml" rel="self"></link><id>http://mainframer.github.io/</id><updated>2014-11-12T00:00:00+08:00</updated><entry><title>Python中range和xrange区别</title><link href="http://mainframer.github.io/articles/Python%E4%B8%ADrange%E5%92%8Cxrange%E5%8C%BA%E5%88%AB.html" rel="alternate"></link><updated>2014-11-12T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2014-11-12:articles/Python中range和xrange区别.html</id><summary type="html">&lt;p&gt;所有Python的学习者都会遇到这个问题，range和xrange都可以是列表生成器，它们有什么区别？&lt;/p&gt;
&lt;h4&gt;range&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;函数说明：range([start,] stop[, step])，根据start与stop指定的范围以及step设定的步长，生成一个序列。range一上来就直接开辟一大块内存，返回一个完整list对象。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;xrange&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;函数说明：用法与range完全相同，所不同的是生成的不是一个list对象，而是一个生成器，在每次调用时返回其中的一个值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以显而易见，除非你真的是想一次性返回整个列表，否则，在循环中，xrange的性能要大大优于range，特别是列表很大或者内存吃紧的时候，所以，循环中请尽量用xrange.&lt;/p&gt;</summary><category term="Python"></category><category term="xrange"></category></entry><entry><title>解决Python往文件中插入多行字符串时的一个小问题</title><link href="http://mainframer.github.io/articles/%E8%A7%A3%E5%86%B3Python%E5%BE%80%E6%96%87%E4%BB%B6%E4%B8%AD%E6%8F%92%E5%85%A5%E5%A4%9A%E8%A1%8C%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%97%B6%E7%9A%84%E4%B8%80%E4%B8%AA%E5%B0%8F%E9%97%AE%E9%A2%98.html" rel="alternate"></link><updated>2014-11-11T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2014-11-11:articles/解决Python往文件中插入多行字符串时的一个小问题.html</id><summary type="html">&lt;p&gt;用Apache搭了一个最简单的Http服务器，每一次自动化脚本跑完之后要往http服务器的首页insert一条记录。&lt;br /&gt;
截图：&lt;br /&gt;
&lt;img alt="" src="./../images/ee-auto-report.png" /&gt;
往Html源文件插入一行的代码如下所示：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;modify_index_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;apache_dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;log_path&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    Function:Update the index.html to reflect the run result to the overall report&lt;/span&gt;
&lt;span class="sd"&gt;    @apache_dir: Apache http server folder:&amp;quot;C:\\Program Files (x86)\\Apache Software Foundation\\Apache2.2\\htdocs\\&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    @log_path: the path to the log generated in this run&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Updating &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;apache_dir&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;index.html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;apache_dir&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;index.html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;lines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;report_date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;localtime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;
    &lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_report_run_status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;report_generated_path&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;   
    &lt;span class="n"&gt;report_link&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;http_host_address&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;today_date&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;get_latest_result_folder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;report_generated_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; \
        &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;testresult.html&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;report_title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;today_date&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;-report&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;log_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;log_path&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;log_link&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;http_host_address&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;today_date&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;get_latest_result_folder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;report_generated_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; \
    &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/log/&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;log_name&lt;/span&gt;
    &lt;span class="n"&gt;insert_content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&amp;quot;        &amp;lt;tr&amp;gt;&lt;/span&gt;
&lt;span class="s"&gt;            &amp;lt;td style=&amp;quot;width: 183px; text-align: center;&amp;quot;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;%(suite)s&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
&lt;span class="s"&gt;            &amp;lt;td style=&amp;quot;width: 195px;text-align: center;&amp;quot;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;%(date)s&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
&lt;span class="s"&gt;            &amp;lt;td style=&amp;quot;width: 131px;text-align: center;color: red;&amp;quot;&amp;gt;&amp;lt;strong&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;%(stat)s&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;/strong&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
&lt;span class="s"&gt;            &amp;lt;td style=&amp;quot;width: 165px;text-align: center;&amp;quot;&amp;gt;&amp;lt;a id=&amp;quot;report_link&amp;quot; href=&lt;/span&gt;&lt;span class="si"&gt;%(rep_link)s&lt;/span&gt;&lt;span class="s"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;%(rep_title)s&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
&lt;span class="s"&gt;            &amp;lt;td style=&amp;quot;width: 117px; text-align: center;&amp;quot;&amp;gt;&amp;lt;a id=&amp;quot;log_link&amp;quot; href=&lt;/span&gt;&lt;span class="si"&gt;%(log_li)s&lt;/span&gt;&lt;span class="s"&gt;&amp;gt;log&amp;lt;/td&amp;gt;&lt;/span&gt;
&lt;span class="s"&gt;        &amp;lt;/tr&amp;gt;&lt;/span&gt;
&lt;span class="s"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;suite&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;test_suite_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;report_date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;stat&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;rep_link&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;report_link&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;rep_title&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; \
            &lt;span class="n"&gt;report_title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;log_li&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;log_link&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;insert_content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;new_html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;apache_dir&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;index.html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;new_html&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;new_html&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;运行多次之后观察发现，上面的这个insert每次都会在HTML源文件的末尾额外插入几个空格，导致HTML源文件中最后一行越来月长，解决的办法是在多行字符串后面添加"\n"并且不要回车。      &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="n"&gt;insert_content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&amp;quot;        &amp;lt;tr&amp;gt;&lt;/span&gt;
&lt;span class="s"&gt;            &amp;lt;td style=&amp;quot;width: 183px; text-align: center;&amp;quot;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;%(suite)s&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
&lt;span class="s"&gt;            &amp;lt;td style=&amp;quot;width: 195px;text-align: center;&amp;quot;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;%(date)s&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
&lt;span class="s"&gt;            &amp;lt;td style=&amp;quot;width: 131px;text-align: center;color: red;&amp;quot;&amp;gt;&amp;lt;strong&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;%(stat)s&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;/strong&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
&lt;span class="s"&gt;            &amp;lt;td style=&amp;quot;width: 165px;text-align: center;&amp;quot;&amp;gt;&amp;lt;a id=&amp;quot;report_link&amp;quot; href=&lt;/span&gt;&lt;span class="si"&gt;%(rep_link)s&lt;/span&gt;&lt;span class="s"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;%(rep_title)s&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
&lt;span class="s"&gt;            &amp;lt;td style=&amp;quot;width: 117px; text-align: center;&amp;quot;&amp;gt;&amp;lt;a id=&amp;quot;log_link&amp;quot; href=&lt;/span&gt;&lt;span class="si"&gt;%(log_li)s&lt;/span&gt;&lt;span class="s"&gt;&amp;gt;log&amp;lt;/td&amp;gt;&lt;/span&gt;
&lt;span class="s"&gt;        &amp;lt;/tr&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Python"></category><category term="多行字符串"></category></entry><entry><title>ConfigParser模块解析配置文件</title><link href="http://mainframer.github.io/articles/ConfigParser%E6%A8%A1%E5%9D%97%E8%A7%A3%E6%9E%90%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.html" rel="alternate"></link><updated>2014-11-09T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2014-11-09:articles/ConfigParser模块解析配置文件.html</id><summary type="html">&lt;ol&gt;
&lt;li&gt;解析配置文件很常见，Python官方的库ConfigParser就自带了这功能。&lt;/li&gt;
&lt;li&gt;配置文件由多个section构成，每个section下面有多个配置项，配置项的格式为：key=value&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;假设有一个配置文件为config.conf，格式如下，有两个section，我们来利用ConfigParser模块对其做解析：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[db]&lt;/span&gt;
&lt;span class="na"&gt;db_host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;localhost&lt;/span&gt;
&lt;span class="na"&gt;db_port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;3306&lt;/span&gt;
&lt;span class="na"&gt;db_user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;root&lt;/span&gt;
&lt;span class="na"&gt;db_pass&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;toor&lt;/span&gt;
&lt;span class="k"&gt;[concurrent]&lt;/span&gt;
&lt;span class="na"&gt;thread&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;10&lt;/span&gt;
&lt;span class="na"&gt;processor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;20&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;解析的Python代码如下，比较简单，10分钟就能学完。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ConfigParser&lt;/span&gt;

&lt;span class="n"&gt;conf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ConfigParser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConfigParser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/Users/Heros/config.conf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;all_sections&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sections&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;                       &lt;span class="c"&gt;# 返回[&amp;#39;db&amp;#39;, &amp;#39;concurrent&amp;#39;]&lt;/span&gt;
&lt;span class="n"&gt;db_options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;db&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                      &lt;span class="c"&gt;# 返回[&amp;#39;db_host&amp;#39;, &amp;#39;db_port&amp;#39;, &amp;#39;db_user&amp;#39;, &amp;#39;db_pass&amp;#39;]&lt;/span&gt;
&lt;span class="n"&gt;db_values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;db&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                         &lt;span class="c"&gt;# 返回[(&amp;#39;db_host&amp;#39;, &amp;#39;127.0.0.1&amp;#39;), (&amp;#39;db_port&amp;#39;, &amp;#39;3306&amp;#39;), (&amp;#39;db_user&amp;#39;, &amp;#39;root&amp;#39;), (&amp;#39;db_pass&amp;#39;, &amp;#39;password&amp;#39;)]&lt;/span&gt;
&lt;span class="n"&gt;db_host&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;db&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;db_host&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                  &lt;span class="c"&gt;# 返回127.0.0.1&lt;/span&gt;
&lt;span class="n"&gt;db_port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;db&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;db_port&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;               &lt;span class="c"&gt;# 返回3306&lt;/span&gt;

&lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;db&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;db_pass&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;passw0rd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                &lt;span class="c"&gt;# 修改值&lt;/span&gt;
&lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/Users/Heros/config.conf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;    &lt;span class="c"&gt;# 将修改值写回去&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="ConfigParser"></category></entry><entry><title>Logging模块日志相关</title><link href="http://mainframer.github.io/articles/Logging%E6%A8%A1%E5%9D%97%E6%97%A5%E5%BF%97%E7%9B%B8%E5%85%B3.html" rel="alternate"></link><updated>2014-11-08T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2014-11-08:articles/Logging模块日志相关.html</id><summary type="html">&lt;p&gt;就像Java中有log4j一样，Python也有自己的日志模块Logging。Logging模块提供不同的日志级别
&lt;code&gt;pass&lt;/code&gt;&lt;/p&gt;</summary><category term="Logging"></category></entry><entry><title>Shutil模块文件操作</title><link href="http://mainframer.github.io/articles/Shutil%E6%A8%A1%E5%9D%97%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C.html" rel="alternate"></link><updated>2014-11-08T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2014-11-08:articles/Shutil模块文件操作.html</id><summary type="html">&lt;p&gt;Python文件操作有os.path，用了一段时间发现Shutil强大许多。
&lt;code&gt;pass&lt;/code&gt;&lt;/p&gt;</summary><category term="Shutil"></category></entry><entry><title>Python做自动化项目的总结</title><link href="http://mainframer.github.io/articles/Python%E5%81%9A%E8%87%AA%E5%8A%A8%E5%8C%96%E9%A1%B9%E7%9B%AE%E7%9A%84%E6%80%BB%E7%BB%93.html" rel="alternate"></link><updated>2014-11-05T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2014-11-05:articles/Python做自动化项目的总结.html</id><summary type="html">&lt;p&gt;最近项目上有自动化要求，我选择了用Python，对自己的代码能力提高很有帮助。&lt;br /&gt;
- 第一：学东西最快最有效的方法是“用起来”。  &lt;br /&gt;
- 第二：通过将实际问题细分力度，用Python逐一解决，这样学到的知识掌握的深。  &lt;br /&gt;
- 第三：不要忘了归纳总结，网上信息泛滥，有个地方能记录你的学习进度和学习心得，对IT从业人员是必要的技能。    &lt;/p&gt;
&lt;p&gt;心灵鸡汤说完了，这里我记录一下这次项目中用到的Python知识点和重点。&lt;/p&gt;
&lt;h6&gt;Python如何中途退出一个函数？&lt;/h6&gt;
&lt;p&gt;&lt;code&gt;sys.exit(0)&lt;/code&gt;   &lt;/p&gt;
&lt;h6&gt;Python如何判断文件(夹)存在?&lt;/h6&gt;
&lt;p&gt;&lt;code&gt;os.path.exists(root_dir)&lt;/code&gt;  &lt;/p&gt;
&lt;h6&gt;Python如何改变目录?&lt;/h6&gt;
&lt;p&gt;&lt;code&gt;os.chdir(new_path)&lt;/code&gt;&lt;/p&gt;
&lt;h6&gt;Python如何延时？&lt;/h6&gt;
&lt;p&gt;&lt;code&gt;time.sleep(30)&lt;/code&gt;&lt;/p&gt;
&lt;h6&gt;Python如何执行系统命令？&lt;/h6&gt;
&lt;p&gt;&lt;code&gt;os.system('mycommand.bat')&lt;/code&gt;&lt;/p&gt;
&lt;h6&gt;Python如何判断文件扩展名？&lt;/h6&gt;
&lt;p&gt;&lt;code&gt;file.endswith(".html")&lt;/code&gt;&lt;/p&gt;
&lt;h6&gt;Python如何删除一个文件夹?&lt;/h6&gt;
&lt;p&gt;&lt;code&gt;shutil.rmtree(file_path, True)&lt;/code&gt;&lt;/p&gt;
&lt;h6&gt;Python如何得到当前目录？&lt;/h6&gt;
&lt;p&gt;&lt;code&gt;print os.getcwd()&lt;/code&gt;&lt;/p&gt;
&lt;h5&gt;Python如何清空一个文件夹？&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;clean_dir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;root_dir&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    Function: Clean up an directory&lt;/span&gt;
&lt;span class="sd"&gt;    @root_dir: the directory you want to clean up.&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;root_dir&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;directory not exists, please check&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;file_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;listdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;root_dir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;file_list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;file_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;root_dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isfile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_path&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_path&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;shutil&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rmtree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;clean_dir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/Users/Heros/sample1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;Python如何得到一个文件夹下最新的那个文件夹？&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_latest_result_folder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;root_path&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    Function:Used to get the most recent generated folder name&lt;/span&gt;
&lt;span class="sd"&gt;    @root_path: where the reports stored.&lt;/span&gt;
&lt;span class="sd"&gt;    @return: return the most latest folder name&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;base_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;root_path&lt;/span&gt;
    &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;listdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;base_dir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;   &lt;span class="c"&gt;# if folder is not empty&lt;/span&gt;
        &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getmtime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;base_dir&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;base_dir&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;root folder is empty,please check.&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Python"></category><category term="自动化"></category></entry><entry><title>requests+BeautifulSoup爬取双色球历史数据</title><link href="http://mainframer.github.io/articles/requests+BeautifulSoup%E7%88%AC%E5%8F%96%E5%8F%8C%E8%89%B2%E7%90%83%E5%8E%86%E5%8F%B2%E6%95%B0%E6%8D%AE.html" rel="alternate"></link><updated>2014-11-01T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2014-11-01:articles/requests+BeautifulSoup爬取双色球历史数据.html</id><summary type="html">&lt;p&gt;练手入门级爬虫，利用requests+BeautifulSoup(美丽汤&amp;gt;_&amp;lt;)来爬取http://v2ex.com 网站上面的所有帖子，包括帖子标题，作者，时间，主要是正则表达式的学习：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#练习02：2014-11-01&lt;/span&gt;
&lt;span class="c"&gt;#http://baidu.lecai.com/lottery/draw/list/50&lt;/span&gt;
&lt;span class="c"&gt;#需求是获取http://baidu.lecai.com/lottery/draw/list/50 彩票网站上面开设双色球以来每一期的开奖日期，开奖期号，开奖号码，当期销量&lt;/span&gt;
&lt;span class="c"&gt;#通过观察，发现该彩票网站上面包含2003～2014的数据，其url规律是：http://baidu.lecai.com/lottery/draw/list/50?d=2003-01-01&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;双色球2003-2014历史数据.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;w+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2003&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;req_html_doc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://baidu.lecai.com/lottery/draw/list/50?d=&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;-01-01&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;
        &lt;span class="n"&gt;my_soup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;req_html_doc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;my_soup&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;tr&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;each&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;reg_lottery_date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r&amp;#39;&amp;lt;td class=&amp;quot;td1&amp;quot;&amp;gt;(.*)&amp;lt;/td&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c"&gt;# &amp;lt;td class=&amp;quot;td1&amp;quot;&amp;gt;2013-12-31&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class="n"&gt;lottery_date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;reg_lottery_date&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;each&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="n"&gt;reg_lottery_qihao&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r&amp;#39;&amp;lt;a href=&amp;quot;(.*)&amp;quot;&amp;gt;(.*)&amp;lt;/a&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="c"&gt;#&amp;lt;a href=&amp;quot;/lottery/draw/view/50?phase=2013154&amp;quot;&amp;gt;2013154&amp;lt;/a&amp;gt;&lt;/span&gt;
            &lt;span class="n"&gt;lottery_qihao&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;reg_lottery_qihao&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;each&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="n"&gt;reg_lottery_haoma&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r&amp;#39;&amp;lt;span class=&amp;quot;ball_[12]&amp;quot;&amp;gt;(.*)&amp;lt;/span&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c"&gt;# &amp;lt;span class=&amp;quot;ball_1&amp;quot;&amp;gt;07&amp;lt;/span&amp;gt; 6个ball_1红球，1个ball_2篮球&lt;/span&gt;
            &lt;span class="n"&gt;lottery_haoma&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;reg_lottery_haoma&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;each&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="n"&gt;reg_lottery_amount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r&amp;#39;&amp;lt;td class=&amp;quot;td4&amp;quot;&amp;gt;(.*)&amp;lt;/td&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c"&gt;#&amp;lt;td class=&amp;quot;td4&amp;quot;&amp;gt;67,728,980&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class="n"&gt;lottery_amount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;reg_lottery_amount&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;each&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lottery_qihao&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;out_line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lottery_date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;lottery_qihao&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lottery_haoma&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lottery_amount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;
                &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;out_line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;结果文件保存在 &lt;a href="./../files/双色球2003-2014历史数据.txt"&gt;双色球2003-2014历史数据.txt&lt;/a&gt;&lt;/p&gt;</summary><category term="requests"></category><category term="BeautifulSoup"></category></entry><entry><title>Pelican使用经验</title><link href="http://mainframer.github.io/articles/Pelican%E4%BD%BF%E7%94%A8%E7%BB%8F%E9%AA%8C.html" rel="alternate"></link><updated>2014-10-27T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2014-10-27:articles/Pelican使用经验.html</id><summary type="html">&lt;p&gt;Pelican是一套开源的使用Python编写的博客静态生成, 可以添加文章和和创建页面, 可以使用MarkDown reStructuredText 
和 AsiiDoc 的格式来抒写, 同时使用 Disqus评论系统, 支持 RSS和Atom输出, 插件, 主题, 代码高亮等功能, 采用Jajin2模板引擎, 
可以很容易的更改模板。对于Python爱好者，Pelican无疑是很好的选择，有一些使用过程中的经验，记录下来：&lt;/p&gt;
&lt;h5&gt;Pelican的Github项目地址：&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;https://github.com/getpelican/pelican&lt;/code&gt;&lt;/p&gt;
&lt;h5&gt;Pelican帮助&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;pelican --help&lt;/code&gt;&lt;/p&gt;
&lt;h5&gt;本地预览，预览地址为：&lt;code&gt;http://localhost:8000/&lt;/code&gt;&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;make publish
make serve
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;更换主题&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git clone https://github.com/getpelican/pelican-themes.git
cd pelican-themes
pelican-themes -i bootstrap2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在&lt;code&gt;pelicanconf.py&lt;/code&gt;中添加T&lt;code&gt;HEME = 'bootstrap2'&lt;/code&gt;即可，然后重新&lt;code&gt;make publish&lt;/code&gt;即可&lt;/p&gt;</summary><category term="Pelican"></category><category term="Markdown"></category><category term="GitHub Pages"></category></entry><entry><title>requests+BeautifulSoup爬取V2EX.COM网站所有帖子</title><link href="http://mainframer.github.io/articles/requests+BeautifulSoup%E7%88%AC%E5%8F%96V2EX.COM%E7%BD%91%E7%AB%99%E6%89%80%E6%9C%89%E5%B8%96%E5%AD%90.html" rel="alternate"></link><updated>2014-10-26T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2014-10-26:articles/requests+BeautifulSoup爬取V2EX.COM网站所有帖子.html</id><summary type="html">&lt;p&gt;练手入门级爬虫，利用requests+BeautifulSoup(美丽汤&amp;gt;_&amp;lt;)来爬取http://v2ex.com 网站上面的所有帖子，包括帖子标题，作者，时间，主要是正则表达式的学习：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#练习01：2014-10-26&lt;/span&gt;
&lt;span class="c"&gt;#http://v2ex.com/t/\d+&lt;/span&gt;
&lt;span class="c"&gt;#需求是获取v2ex网站上面所有的帖子标题，作者，时间&lt;/span&gt;
&lt;span class="c"&gt;#通过观察，发现v2ex网站上面的帖子的url规律是：http://v2ex.com/t/ + 数字 【截至到写这个程序，v2ex一共有141542个帖子】&lt;/span&gt;
&lt;span class="s"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="s"&gt;if __name__ == &amp;quot;__main__&amp;quot;:&lt;/span&gt;
&lt;span class="s"&gt;    for x in range(1, 5710):   #一共有5710页&lt;/span&gt;
&lt;span class="s"&gt;        req_html_doc = requests.get(&amp;quot;http://v2ex.com/recent?p=&amp;quot; + str(x)).text&lt;/span&gt;
&lt;span class="s"&gt;        my_soup = BeautifulSoup(req_html_doc)&lt;/span&gt;
&lt;span class="s"&gt;        #print my_soup.title, my_soup.title.name, my_soup.title.string # 依次返回&amp;lt;title&amp;gt;V2EX&amp;lt;/title&amp;gt;， title， V2EX&lt;/span&gt;
&lt;span class="s"&gt;        result = my_soup.findAll(&amp;#39;div&amp;#39;, {&amp;#39;class&amp;#39;: &amp;quot;cell item&amp;quot;})  # result是BeautifulSoup.ResultSet类型&lt;/span&gt;
&lt;span class="s"&gt;        for each in result:  # 每一个each都是BeautifulSoup.Tag类型&lt;/span&gt;
&lt;span class="s"&gt;            each_table_string = str(each)&lt;/span&gt;
&lt;span class="s"&gt;            #从table中匹配出title,有些title有换行符，必须用re.DOTALL使得.也匹配换行符&lt;/span&gt;
&lt;span class="s"&gt;            reg_title = re.compile(r&amp;#39;&amp;lt;span class=&amp;quot;item_title&amp;quot;&amp;gt;&amp;lt;a href=&amp;quot;(.*)&amp;quot;&amp;gt;(.*)&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;&amp;#39;, re.DOTALL)&lt;/span&gt;
&lt;span class="s"&gt;            tie_zi_title = reg_title.findall(each_table_string)[0][1]&lt;/span&gt;
&lt;span class="s"&gt;            reg_author = re.compile(r&amp;#39;align=&amp;quot;center&amp;quot;&amp;gt;&amp;lt;a href=&amp;quot;/member/(.*)&amp;quot;&amp;gt;&amp;lt;img src=&amp;#39;)&lt;/span&gt;
&lt;span class="s"&gt;            tie_zi_author = reg_author.findall(each_table_string)[0]&lt;/span&gt;
&lt;span class="s"&gt;            #有人回复时是 &amp;lt;/strong&amp;gt; &amp;amp;nbsp;•&amp;amp;nbsp; 38 &lt;/span&gt;&lt;span class="se"&gt;\xe5\x88\x86\xe9\x92\x9f\xe5\x89\x8d&lt;/span&gt;&lt;span class="s"&gt; &amp;amp;nbsp;•&amp;amp;nbsp;;，&lt;/span&gt;
&lt;span class="s"&gt;            #没人回复时是&amp;lt;/strong&amp;gt; &amp;amp;nbsp;•&amp;amp;nbsp; 38 &lt;/span&gt;&lt;span class="se"&gt;\xe5\x88\x86\xe9\x92\x9f\xe5\x89\x8d&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;/span&amp;gt; 返回后再正则提取&lt;/span&gt;
&lt;span class="s"&gt;            reg_date = re.compile(r&amp;#39;&amp;lt;/a&amp;gt;&amp;lt;/strong&amp;gt; &amp;amp;nbsp;&lt;/span&gt;&lt;span class="se"&gt;\xe2\x80\xa2&lt;/span&gt;&lt;span class="s"&gt;&amp;amp;nbsp;(.*)&amp;#39;)&lt;/span&gt;
&lt;span class="s"&gt;            raw_tie_zi_date = reg_date.findall(each_table_string)[0]&lt;/span&gt;
&lt;span class="s"&gt;            raw_tie_zi_date = raw_tie_zi_date.rstrip(&amp;#39;&amp;lt;/span&amp;gt;&amp;#39;)&lt;/span&gt;
&lt;span class="s"&gt;            print tie_zi_title, tie_zi_author, re.split(&amp;quot;&amp;amp;nbsp;&lt;/span&gt;&lt;span class="se"&gt;\xe2\x80\xa2&lt;/span&gt;&lt;span class="s"&gt;&amp;amp;nbsp;&amp;quot;, raw_tie_zi_date)[0]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;后期的结果保存没做处理，可以视情况保存到文本，CSV, 数据库中。&lt;/p&gt;</summary><category term="requests"></category><category term="BeautifulSoup"></category></entry><entry><title>使用Pelican + Markdown + GitHub Pages写博客</title><link href="http://mainframer.github.io/articles/%E4%BD%BF%E7%94%A8Pelican%20+%20Markdown%20+%20GitHub%20Pages%E5%86%99%E5%8D%9A%E5%AE%A2.html" rel="alternate"></link><updated>2014-10-25T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2014-10-25:articles/使用Pelican + Markdown + GitHub Pages写博客.html</id><summary type="html">&lt;p&gt;Pelican是Python写的静态网页生成器，GitHub Pages是Github提供的免费空间，支持自定义域名，支持Markdown语法。&lt;/p&gt;
&lt;h5&gt;安装Pelican&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;sudo easy_install pelican markdown&lt;/code&gt;&lt;/p&gt;
&lt;h5&gt;创建目录&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;
&lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="n"&gt;pelican&lt;/span&gt;
&lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;quickstart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;配置Pelican&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Welcome to pelican-quickstart v3.4.0.

This script will help you create a new Pelican-based website.
Please answer the following questions so this script can generate the files
needed by Pelican.

&amp;gt; Where do you want to create your new web site? [.]
&amp;gt; What will be the title of this web site? Mordern mainframer
&amp;gt; Who will be the author of this web site? mainframer
&amp;gt; What will be the default language of this web site? [en] zh
&amp;gt; Do you want to specify a URL prefix? e.g., http://example.com   (Y/n)
&amp;gt; What is your URL prefix? (see above example; no trailing slash) http://mainframer.github.io
&amp;gt; Do you want to enable article pagination? (Y/n)
&amp;gt; How many articles per page do you want? [10]
&amp;gt; Do you want to generate a Fabfile/Makefile to automate generation and publishing? (Y/n)
&amp;gt; Do you want an auto-reload &amp;amp; simpleHTTP script to assist with theme and site development? (Y/n)
&amp;gt; Do you want to upload your website using FTP? (y/N)
&amp;gt; Do you want to upload your website using SSH? (y/N)
&amp;gt; Do you want to upload your website using Dropbox? (y/N)
&amp;gt; Do you want to upload your website using S3? (y/N)
&amp;gt; Do you want to upload your website using Rackspace Cloud Files? (y/N)
&amp;gt; Do you want to upload your website using GitHub Pages? (y/N) Y
&amp;gt; Is this your personal page (username.github.io)? (y/N) Y
Done. Your new project is available at /Users/Heros/pelican
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;下载风格包pelican-themes与插件包pelican-plugins&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git clone git://github.com/getpelican/pelican-themes.git  
git clone git://github.com/getpelican/pelican-plugins.git  
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;配置pelicanconf.py&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c"&gt;# -*- coding: utf-8 -*- #&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unicode_literals&lt;/span&gt;

&lt;span class="n"&gt;AUTHOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;mainframer&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;AUTHOR_EMAIL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;54xiaowoniu@sina.cn&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;Modern Mainframer&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://mainframer.github.io&amp;#39;&lt;/span&gt;

&lt;span class="c"&gt;# Disqus&lt;/span&gt;
&lt;span class="n"&gt;DISQUS_SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;quot;mainframer&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# Content path&lt;/span&gt;
&lt;span class="n"&gt;PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;content&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;PAGE_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;pages&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;ARTICLE_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;articles&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;STATIC_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;images&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;files&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;EXTRA_PATH_METADATA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;files/robots.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;path&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;robots.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;images/favicon.ico&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;path&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;favicon.ico&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;TIMEZONE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Asia/Shanghai&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_METADATA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="n"&gt;DEFAULT_LANG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;zh&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_DATE_FORMAT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;TAGLINE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Heros come and go but legends are forever .&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;ARTICLE_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;articles/{slug}.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ARTICLE_SAVE_AS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;articles/{slug}.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;PAGE_LANG_SAVE_AS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;

&lt;span class="c"&gt;# Blogroll&lt;/span&gt;
&lt;span class="n"&gt;LINKS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;IBM知识中心&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://www-01.ibm.com/support/knowledgecenter&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Social widget&lt;/span&gt;
&lt;span class="n"&gt;SOCIAL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;mainframer@Github&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;https://github.com/mainframer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;mainframer@Linkedin&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;https://www.linkedin.com/in/mainframer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Feed&lt;/span&gt;
&lt;span class="n"&gt;FEED_DOMAIN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SITEURL&lt;/span&gt;
&lt;span class="n"&gt;FEED_ALL_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;feeds/all.atom.xml&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;feeds/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;.atom.xml&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;TRANSLATION_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;

&lt;span class="c"&gt;# Sitemap&lt;/span&gt;
&lt;span class="n"&gt;SITEMAP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;format&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;xml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;priorities&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;articles&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;pages&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;indexes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;changefreqs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;indexes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;daily&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;articles&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;daily&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;pages&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;weekly&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;# Theme&lt;/span&gt;
&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;pelican-themes/zurb-F5-basic&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_PAGINATION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;

&lt;span class="n"&gt;MD_EXTENSIONS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;codehilite(css_class=highlight)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;extra&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="s"&gt;&amp;#39;fenced_code&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;tables&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;sane_lists&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="c"&gt;# Plugin&lt;/span&gt;
&lt;span class="n"&gt;PLUGIN_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;pelican-plugins&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;sitemap&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;gravatar&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;


&lt;span class="n"&gt;DEFAULT_PAGINATION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;

&lt;span class="c"&gt;# Uncomment following line if you want document-relative URLs when developing&lt;/span&gt;
&lt;span class="n"&gt;RELATIVE_URLS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;配置 publishconf.py&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c"&gt;# -*- coding: utf-8 -*- #&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unicode_literals&lt;/span&gt;

&lt;span class="c"&gt;# This file is only used if you use `make publish` or&lt;/span&gt;
&lt;span class="c"&gt;# explicitly specify it as your config file.&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;curdir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pelicanconf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;

&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://mainframer.github.io&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;RELATIVE_URLS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;

&lt;span class="n"&gt;FEED_ALL_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;feeds/all.atom.xml&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;feeds/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;.atom.xml&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;DELETE_OUTPUT_DIRECTORY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;DISQUS_SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;quot;mainframer&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# Following items are often useful when publishing&lt;/span&gt;

&lt;span class="c"&gt;#DISQUS_SITENAME = &amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="c"&gt;#GOOGLE_ANALYTICS = &amp;quot;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;撰写一篇文章&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd content
mkdir articles files images pages
vim articles/使用Pelican + Markdown + GitHub Pages写博客.md
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Author: mainframer&lt;br /&gt;
Slug: 使用Pelican + Markdown + GitHub Pages写博客&lt;br /&gt;
Title: 使用Pelican + Markdown + GitHub Pages写博客&lt;br /&gt;
Tags: Pelican, Markdown,GitHub Pages&lt;br /&gt;
Date: 2014-10-25&lt;br /&gt;
Category: Others  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5&gt;生成robots.txt与favicon.ico&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;vim files/robots.txt&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;User-agent: *&lt;br /&gt;
Sitemap: http://mainframer.github.io/sitemap.xml&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5&gt;配置Disqus&lt;/h5&gt;
&lt;p&gt;在Disqus上注册一个用户并生成一个站点mainframer.disqus.com；&lt;br /&gt;
设置mainframer.disqus.com站点使其允许域名mainframer.github.io；&lt;br /&gt;
设置以上配置文件为DISQUS_SITENAME = u"mainframer"，mainframer为站点ID&lt;/p&gt;
&lt;h5&gt;创建GitHub Pages&lt;/h5&gt;
&lt;p&gt;直接创建一个新的repo，但是其名称必须与ID相同，并加上github.io或github.com后缀。
就我而言，就必须创建一个repo名为mainframer.github.io&lt;/p&gt;
&lt;h5&gt;创建好GitHub Pages之后，生成Blog静态HTML文件&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd ~/pelican
make html
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;pelican /Users/Heros/pelican/content -o /Users/Heros/pelican/output -s /Users/Heros/pelican/pelicanconf.py
WARNING: AUTHOR_SAVE_AS is set to False
Done: Processed 1 article(s), 0 draft(s) and 0 page(s) in 0.18 seconds.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5&gt;进入output目录，将生成好的静态HTML文件上传到GitHub Pages站点mainframer.github.io&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd output
git init
git remote add origin https://github.com/mainframer/mainframer.github.io.git
git add -A
git commit -m &amp;quot;Update Blog&amp;quot;
git push -u origin master
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;等待1分钟，访问网站&lt;a href="mainframer.github.io.git"&gt;mainframer.github.io&lt;/a&gt;就能看到效果。&lt;/h5&gt;</summary><category term="Pelican"></category><category term="Markdown"></category><category term="GitHub Pages"></category></entry><entry><title>博客迁徙到GitHub Pages</title><link href="http://mainframer.github.io/articles/%E5%8D%9A%E5%AE%A2%E8%BF%81%E5%BE%99%E5%88%B0GitHub%20Pages.html" rel="alternate"></link><updated>2014-10-24T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2014-10-24:articles/博客迁徙到GitHub Pages.html</id><summary type="html">&lt;p&gt;将博客从Heroku迁徙到GitHub Pages，还是喜欢Markdown，网上搜了一下，发现有一个基于Python的静态网页生成器Pelican，很强大的样子，我原先的博客是基于octopress的，估计格式稍微修改一下就可直接上Pelican了。鉴于本人之前的博客有不少，一篇一篇修改不现实，直接用Python修改吧：&lt;/p&gt;
&lt;h6&gt;2014.10.24将博客从heroku的octopress迁徙到github pages:这段代码实现将目录下面所有的.markdown结尾的文件都替换为.md结尾&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;dirpath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/Users/Heros/dev/git/pelican/content/articles/&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;listdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dirpath&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;oldfpath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dirpath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;oldfpath&lt;/span&gt;
    &lt;span class="n"&gt;newfpath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dirpath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;.markdown&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;.md&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;newfpath&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;oldfpath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;newfpath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;2014.10.24将博客从heroku的octopress迁徙到github pages:这段代码实现了将目录下所有文件里面第2行后面插入一行，内容为“Author: mainframer”&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;dirpath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/Users/Heros/dev/git/pelican/content/articles/&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;listdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dirpath&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;fpath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dirpath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;
    &lt;span class="n"&gt;fp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fpath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;lines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;fp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="c"&gt;#print type(lines) lines现在是list了&lt;/span&gt;
    &lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Author: mainframer&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fpath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;fp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;2014.10.24将博客从heroku的octopress迁徙到github pages:这段代码实现了将目录下所有文件里面所有内容为'---'的行都删除掉&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;dirpath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/Users/Heros/dev/git/pelican/content/articles/&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;listdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dirpath&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;fpath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dirpath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;
    &lt;span class="n"&gt;fp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fpath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;lines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;fp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;---&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="c"&gt;#print type(lines) lines现在是list了&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fpath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;fp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;2014.10.24将博客从heroku的octopress迁徙到github pages:这段代码实现了将目录下所有文件里面所有内容为'date:'都替换成'Date:'&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;dirpath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/Users/Heros/dev/git/pelican/content/articles/&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;listdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dirpath&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;fpath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dirpath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;
    &lt;span class="n"&gt;fp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fpath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;lines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;fp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;date:&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;date:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Date:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="c"&gt;#print type(lines) lines现在是list了&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fpath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;fp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Pelican"></category><category term="GitHub Pages"></category></entry><entry><title>Mac下显示隐藏文件</title><link href="http://mainframer.github.io/articles/Mac%E4%B8%8B%E6%98%BE%E7%A4%BA%E9%9A%90%E8%97%8F%E6%96%87%E4%BB%B6.html" rel="alternate"></link><updated>2013-08-08T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2013-08-08:articles/Mac下显示隐藏文件.html</id><summary type="html">&lt;p&gt;Mac下默认是不显示隐藏文件的，有时候我们又想看一下隐藏文件内容，比如你用命令&lt;code&gt;git init&lt;/code&gt;新初始化了一个git的存储库，这时候就会生成一个&lt;code&gt;.git&lt;/code&gt;的隐藏文件夹，如果你想看&lt;code&gt;.git&lt;/code&gt;文件夹的内容，一般的做法可以去终端下面用命令:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ls -a&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;假如你想让你的整个Mac系统在finder下都显示隐藏文件，那么可以在终端下执行全局命令：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;defaults write com.apple.finder AppleShowAllFiles -bool true 开启  
或者  
defaults write com.apple.finder AppleShowAllFiles -bool false 关闭
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Shutil"></category></entry><entry><title>IBM PCOMM初始设置最佳实践</title><link href="http://mainframer.github.io/articles/IBM%20PCOMM%E5%88%9D%E5%A7%8B%E8%AE%BE%E7%BD%AE%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5.html" rel="alternate"></link><updated>2013-07-23T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2013-07-23:articles/IBM PCOMM初始设置最佳实践.html</id><summary type="html">&lt;p&gt;做z/OS或者AS/400工作的应该对IBM的&lt;code&gt;Personal Communications&lt;/code&gt;(简称PCOMM)终端仿真软件不陌生。&lt;br /&gt;
PCOMM是一个与IBM主机和AS/400进行通讯的软件，分别利用的通讯协议是TN3270和TN5250。本文介绍一下那些新建一个连接之后必须做的事情，俗称最佳实践。  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;show cross-rule&lt;/li&gt;
&lt;li&gt;show Quick Connect Bar&lt;/li&gt;
&lt;li&gt;Preferences -&amp;gt; Keyboard -&amp;gt;User-Defined
 &lt;code&gt;C:\Users\IBM_ADMIN\AppData\Roaming\IBM\Personal Communications\chensb.kmp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Preferences -&amp;gt;Edit-&amp;gt;Trim-&amp;gt;Windows Style&lt;/li&gt;
&lt;li&gt;Command line on top  &lt;/li&gt;
&lt;/ul&gt;</summary><category term="Pcomm"></category></entry><entry><title>关于MAC下用SSH翻墙的小结(转)</title><link href="http://mainframer.github.io/articles/%E5%85%B3%E4%BA%8EMAC%E4%B8%8B%E7%94%A8SSH%E7%BF%BB%E5%A2%99%E7%9A%84%E5%B0%8F%E7%BB%93(%E8%BD%AC).html" rel="alternate"></link><updated>2013-06-12T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2013-06-12:articles/关于MAC下用SSH翻墙的小结(转).html</id><summary type="html">&lt;p&gt;近来换工作了，先前在原公司上班，用的是美国的网络，可以轻松地翻越GFW，现在没有这个福利了。查一些资料到 www.google.com，slideshare.net, 4shared.com这些以前很经常逛的网站现在突然间不能用了还真不习惯。懒得去折腾了，在网上搜了一篇别人写的Mac下面怎么用SSH翻墙的文章，转载到这里，花10分钟配置了下方法二，确实可以用的，很不错。  &lt;/p&gt;
&lt;h3&gt;以下内容转自：&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://www.k-nows.net/2012/03/28/mac-safari-ssh-cross-gfw/"&gt;http://www.k-nows.net/2012/03/28/mac-safari-ssh-cross-gfw/&lt;/a&gt;&lt;br /&gt;
回国这几天都是在用Mac＋Safari上学校的ssh翻墙，简单，粗暴，高效。  &lt;/p&gt;
&lt;h4&gt;方法一，终端加网络配置&lt;/h4&gt;
&lt;p&gt;这个真的是又简单又粗暴。。。分两步：&lt;br /&gt;
首先，打开你的终端，输入：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ssh -D port user@hostname&lt;/p&gt;
&lt;p&gt;其中port是你的端口号，挑一个你自己的机器上能用的，这个命令就是将访问forward到了你指定的端口上。&lt;br /&gt;
然后，打开“系统偏好设置”－&amp;gt;“网络”-&amp;gt;”高级”-&amp;gt;”代理”－&amp;gt;点选”SOCKS 代理”-&amp;gt;旁边的”SOCKS 代理服务器”里填127.0.0.1，端口填你刚才写的那个，点个好点个应用，搞定。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5&gt;注意，&lt;/h5&gt;
&lt;p&gt;终端的ssh连接不能关闭。&lt;br /&gt;
注意你的ssh的服务器的访问限制，尤其是像我这样的用学校的ssh服务器的，如果去访问了一些不该访问的，就该有学校的警告mail来了&lt;br /&gt;
这个方法简单粗暴但是也太粗糙，所有的访问都会通过ssh服务器来进行，所以即使我看个sina新闻也要绕到遥远的nagoya去，而且pipe还可能崩坏。&lt;br /&gt;
推荐人群：如果只是为了时不时地上个推上个fb的话，只要你的ssh也允许，可以尝试。   &lt;/p&gt;
&lt;h4&gt;方法二，iSSH加.pac文件&lt;/h4&gt;
&lt;p&gt;这个方法相对稳定，但是我所在的这个网络环境实在是太坑爹了&amp;gt;&amp;lt;。。。 &lt;br /&gt;
首先，你需要下载一个app叫iSSH，如果你找不到，我会在稍后放出下载。&lt;a href="./../files/iSSH.zip"&gt;--&amp;gt;__--&amp;gt;点击下载iSSH.zip&lt;/a&gt; &lt;br /&gt;
app很好设置，输入服务器地址，然后用户名密码都是你在ssh服务器上的，接着下面会有一个2选一的东东，选择SOCKS Proxy(-D)，端口选择7070（稍后解释）。 
其次，你需要准备一个.pac文件，如果你会写就请忽略这段，如果你不会，那就看下面一段代码： &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;function&lt;/span&gt; &lt;span class="no"&gt;FindProxyForURL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;host&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;shExpMatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*ip38*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;shExpMatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*1-apple.com.tw*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="err"&gt;…&lt;/span&gt;
     &lt;span class="err"&gt;…&lt;/span&gt;
     &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;shExpMatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*facebook.com*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;shExpMatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*facebook cdn*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="err"&gt;…&lt;/span&gt;
              &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;shExpMatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*twitter.com*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;shExpMatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*twitter.com/amoiist*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;shExpMatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*twitter.com/BeiJing1989*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;shExpMatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*twitter.com/billzhong*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;shExpMatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*twitter.com/nowhere1975*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;shExpMatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*twitter.com/shizhao*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;shExpMatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*twitter.com/VOTChinese*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;shExpMatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*twitter.com/wenyunchao*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;shExpMatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*twitter.com/wumao*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;shExpMatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*twitter.com/zengjinyan*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;shExpMatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*twitter.com/zuola*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;shExpMatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*https://twitter.com/*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;shExpMatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*https://www.twitter.com/*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;shExpMatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://apiwiki.twitter.com/*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;shExpMatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://dev.twitter.com/*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;shExpMatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://status.twitter.com/*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="err"&gt;…&lt;/span&gt;
     &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;shExpMatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*youtube.com*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;shExpMatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*hk.youtube.com*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;shExpMatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*tw.youtube.com*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;shExpMatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*youtube.com/get_video*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;shExpMatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*Youtube CDN*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="err"&gt;…&lt;/span&gt;
     &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;SOCKS 127.0.0.1:7070&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="k"&gt;else&lt;/span&gt; 
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;DIRECT&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这段就是.pac文件的内容，基本上，添加了这些就可以上推上fb看U2B了。 &lt;a href="./../files/gfwlist.pac"&gt;--&amp;gt;__--&amp;gt;点击下载gfwlist.pac&lt;/a&gt;&lt;br /&gt;
接着，打开“系统偏好设置”－&amp;gt;“网络”-&amp;gt;”高级”-&amp;gt;”代理”－&amp;gt;点选“自动代理配置”-&amp;gt;“选取文件”-&amp;gt;找你刚刚搞到的那个.pac文件，然后点个好点个应用。 
最后，回到iSSH那个app上，可以点Connect了，然后打开Safari去爽去吧。  &lt;/p&gt;
&lt;h5&gt;注意，&lt;/h5&gt;
&lt;p&gt;上面的iSSH的SOCKS Proxy -D的端口和.  pac的文件末尾所写的那个端口必须一致，而之所以选择7070,是因为我最开始拿到这个文件的时候它写的就是7070＝＝&lt;br /&gt;
这个方法相对上一个方法更稳定，因为它只有在访问那些需要翻墙的url的时候才会通过ssh服务器，所以限制更少，pipe也不容易崩坏，&lt;br /&gt;
推荐人群：如果你的ssh服务器对国内的网址很不友好的话，用这个会好点。&lt;br /&gt;
以上，&lt;br /&gt;
2012－3－28&lt;br /&gt;
于爵仕官邸某7楼床上  &lt;/p&gt;</summary><category term="Mac翻墙"></category><category term="ssh翻墙"></category></entry><entry><title>heroku push timeout错误</title><link href="http://mainframer.github.io/articles/heroku%20push%20timeout%E9%94%99%E8%AF%AF.html" rel="alternate"></link><updated>2013-05-08T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2013-05-08:articles/heroku push timeout错误.html</id><summary type="html">&lt;p&gt;博客托管在&lt;code&gt;heroku&lt;/code&gt;云平台上，这两天突然没法更新了。在执行&lt;code&gt;git push heroku&lt;/code&gt;命令的时候总是提示time out 错误：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;push&lt;/span&gt; &lt;span class="n"&gt;heroku&lt;/span&gt;
&lt;span class="c1"&gt;#ssh: connect to host heroku.com port 22: Operation timed out&lt;/span&gt;
&lt;span class="c1"&gt;#fatal: The remote end hung up unexpectedly&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;折腾了我两天没搞定，&lt;code&gt;stackoverflow&lt;/code&gt;上面给的解决方法也不怎么靠谱，让我反反复复重新设置了好几遍&lt;code&gt;ssh key&lt;/code&gt;，浪费了不少时间。刚刚在&lt;code&gt;ruby-china.org&lt;/code&gt;上找到了解决办法。原来又是因为神奇的GFW，难怪stackoverflow上面的答案没搞定我的问题，那些外国人根本就不明白咱们这的特殊国情，但也怪不得他们。   &lt;br /&gt;
这里是ruby-china上的原帖：&lt;a href="http://ruby-china.org/topics/10813"&gt;http://ruby-china.org/topics/10813&lt;/a&gt;   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;部署&lt;/span&gt; &lt;span class="err"&gt;•&lt;/span&gt; &lt;span class="n"&gt;freemem&lt;/span&gt; &lt;span class="err"&gt;•&lt;/span&gt; &lt;span class="err"&gt;于&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="err"&gt;小时前发布&lt;/span&gt; &lt;span class="err"&gt;•&lt;/span&gt; &lt;span class="err"&gt;最后由&lt;/span&gt; &lt;span class="n"&gt;zj0713001&lt;/span&gt; &lt;span class="err"&gt;于&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="err"&gt;小时前回复&lt;/span&gt; &lt;span class="err"&gt;•&lt;/span&gt; &lt;span class="mi"&gt;138&lt;/span&gt;&lt;span class="err"&gt;次阅读&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;push&lt;/span&gt; &lt;span class="n"&gt;heroku&lt;/span&gt; &lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="err"&gt;出现&lt;/span&gt;&lt;span class="no"&gt;Operation&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;Connecting&lt;/span&gt; &lt;span class="n"&gt;timed&lt;/span&gt; &lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="err"&gt;错误。&lt;/span&gt;

&lt;span class="err"&gt;用“&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="vi"&gt;@heroku&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="err"&gt;”检查后发现原因在于&lt;/span&gt;&lt;span class="n"&gt;fuck&lt;/span&gt; &lt;span class="no"&gt;GFW&lt;/span&gt;&lt;span class="o"&gt;!!!&lt;/span&gt;&lt;span class="err"&gt;以下节点全部不可用&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="mi"&gt;174&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;129&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;118&lt;/span&gt;
&lt;span class="mi"&gt;174&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;129&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;
&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;233&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;102&lt;/span&gt;
&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;85&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;154&lt;/span&gt;
&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;85&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;132&lt;/span&gt;
&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;215&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;67&lt;/span&gt;
&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;85&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;156&lt;/span&gt;
&lt;span class="mi"&gt;184&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;73&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;165&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;65&lt;/span&gt;
&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;215&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;104&lt;/span&gt;
&lt;span class="mi"&gt;107&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;106&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;77&lt;/span&gt;
&lt;span class="mi"&gt;107&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;105&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;
&lt;span class="mi"&gt;107&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;234&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;

&lt;span class="err"&gt;仅有以下节点可用：&lt;/span&gt;
&lt;span class="mi"&gt;107&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;95&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;

&lt;span class="err"&gt;故手动配置&lt;/span&gt;&lt;span class="n"&gt;vi&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="sr"&gt;/.ssh/&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;
&lt;span class="no"&gt;Host&lt;/span&gt; &lt;span class="n"&gt;heroku&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;
&lt;span class="no"&gt;User&lt;/span&gt; &lt;span class="n"&gt;freemember007&lt;/span&gt;
&lt;span class="no"&gt;Hostname&lt;/span&gt; &lt;span class="mi"&gt;107&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;95&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="c1"&gt;#关键设置，替代proxy.heroku.com，直接走IP。&lt;/span&gt;
&lt;span class="no"&gt;PreferredAuthentications&lt;/span&gt; &lt;span class="n"&gt;publickey&lt;/span&gt;
&lt;span class="no"&gt;IdentityFile&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="sr"&gt;/.ssh/i&lt;/span&gt;&lt;span class="n"&gt;d_rsa&lt;/span&gt;
&lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;

&lt;span class="err"&gt;这下好了。而且速度飞快！&lt;/span&gt;&lt;span class="n"&gt;fuck&lt;/span&gt; &lt;span class="no"&gt;GFW&lt;/span&gt;&lt;span class="o"&gt;!!!&lt;/span&gt;

&lt;span class="err"&gt;网络：浙江电信&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;感谢这位叫做“freemem”的网友。&lt;/p&gt;</summary><category term="Heroku"></category></entry><entry><title>用INTRDR在job中submit第二个job</title><link href="http://mainframer.github.io/articles/%E7%94%A8INTRDR%E5%9C%A8job%E4%B8%ADsubmit%E7%AC%AC%E4%BA%8C%E4%B8%AAjob.html" rel="alternate"></link><updated>2013-04-22T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2013-04-22:articles/用INTRDR在job中submit第二个job.html</id><summary type="html">&lt;p&gt;今天学到的，如何在当前&lt;code&gt;job&lt;/code&gt;当中&lt;code&gt;trigger&lt;/code&gt;另外一个&lt;code&gt;job&lt;/code&gt;？答案就是利用&lt;code&gt;Internal Reader&lt;/code&gt; 
例如：  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;*******************************************************************&lt;/span&gt;    
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="no"&gt;Submit&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="no"&gt;DUMMY&lt;/span&gt; &lt;span class="n"&gt;job&lt;/span&gt; &lt;span class="no"&gt;MYJOB2&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;current&lt;/span&gt; &lt;span class="n"&gt;job&lt;/span&gt; &lt;span class="n"&gt;card&lt;/span&gt; 
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="no"&gt;Submit&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="no"&gt;Internal&lt;/span&gt; &lt;span class="no"&gt;Reader&lt;/span&gt;                                    
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;*******************************************************************&lt;/span&gt;
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;STEP04&lt;/span&gt;    &lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IEBGENER&lt;/span&gt;                  
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSUT1&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CNTL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;MYJOB2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;           
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSUT2&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;INTRDR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                            
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSPRINT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                     
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSIN&lt;/span&gt;    &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DUMMY&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这种技术经常被用来发送&lt;code&gt;notification email&lt;/code&gt;，比如： &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;****************************************************************&lt;/span&gt;      
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;   &lt;span class="no"&gt;THIS&lt;/span&gt; &lt;span class="no"&gt;STEP&lt;/span&gt; &lt;span class="no"&gt;WILL&lt;/span&gt; &lt;span class="no"&gt;SEND&lt;/span&gt; &lt;span class="no"&gt;AN&lt;/span&gt; &lt;span class="no"&gt;EMAIL&lt;/span&gt; &lt;span class="no"&gt;TO&lt;/span&gt; &lt;span class="no"&gt;THE&lt;/span&gt; &lt;span class="no"&gt;CLIENT&lt;/span&gt; &lt;span class="no"&gt;GROUP&lt;/span&gt;                    
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;   &lt;span class="no"&gt;INDICATING&lt;/span&gt; &lt;span class="no"&gt;THAT&lt;/span&gt; &lt;span class="no"&gt;THE&lt;/span&gt; &lt;span class="no"&gt;DESIRED&lt;/span&gt; &lt;span class="no"&gt;FILE&lt;/span&gt; &lt;span class="no"&gt;WAS&lt;/span&gt; &lt;span class="no"&gt;NOT&lt;/span&gt; &lt;span class="no"&gt;RECEIVED&lt;/span&gt;                     
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;****************************************************************&lt;/span&gt;      
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;STEP08&lt;/span&gt;   &lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IEBGENER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;COND&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;NE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;STEP02&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                                                                                     
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSIN&lt;/span&gt;    &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DUMMY&lt;/span&gt;                                                    
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSPRINT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                                 
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSUT1&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CNTL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;STEMAIL&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;                       
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSUT2&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;INTRDR&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;                                       
&lt;span class="sr"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;DCB&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;RECFM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;FB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;LRECL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;BLKSIZE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DSORG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;PS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;上面例子中邮件的内容如下：&lt;code&gt;IBMUSER.TEST.CNTL(STEMAIL)&lt;/code&gt;
```ruby//IBMUSERT JOB 0000000TEST,  &lt;br /&gt;
//   CLASS=3,MSGCLASS=I,REGION=4096K,                               &lt;br /&gt;
//&lt;em&gt;
//STEP04   EXEC PGM=IEBGENER                      &lt;br /&gt;
//SYSUT2   DD  SYSOUT=A,DEST=(&lt;some name&gt;,SMTP)     &lt;br /&gt;
//SYSPRINT DD SYSOUT=&lt;/em&gt;                            &lt;br /&gt;
//SYSIN    DD DUMMY                               &lt;br /&gt;
//SYSUT1   DD  *                                  &lt;br /&gt;
HELO &lt;some name&gt;                            &lt;br /&gt;
MAIL FROM:&lt;a href="&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#73;&amp;#66;&amp;#77;&amp;#85;&amp;#83;&amp;#69;&amp;#82;&amp;#49;&amp;#64;&amp;#120;&amp;#120;&amp;#120;&amp;#46;&amp;#99;&amp;#111;&amp;#109;"&gt;&amp;#73;&amp;#66;&amp;#77;&amp;#85;&amp;#83;&amp;#69;&amp;#82;&amp;#49;&amp;#64;&amp;#120;&amp;#120;&amp;#120;&amp;#46;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;             &lt;br /&gt;
RCPT TO:&lt;a href="&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#73;&amp;#66;&amp;#77;&amp;#85;&amp;#83;&amp;#69;&amp;#82;&amp;#50;&amp;#64;&amp;#120;&amp;#120;&amp;#120;&amp;#46;&amp;#99;&amp;#111;&amp;#109;"&gt;&amp;#73;&amp;#66;&amp;#77;&amp;#85;&amp;#83;&amp;#69;&amp;#82;&amp;#50;&amp;#64;&amp;#120;&amp;#120;&amp;#120;&amp;#46;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;                &lt;br /&gt;
DATA                                              &lt;br /&gt;
FROM:&lt;a href="&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#73;&amp;#66;&amp;#77;&amp;#85;&amp;#83;&amp;#69;&amp;#82;&amp;#49;&amp;#64;&amp;#120;&amp;#120;&amp;#120;&amp;#46;&amp;#99;&amp;#111;&amp;#109;"&gt;&amp;#73;&amp;#66;&amp;#77;&amp;#85;&amp;#83;&amp;#69;&amp;#82;&amp;#49;&amp;#64;&amp;#120;&amp;#120;&amp;#120;&amp;#46;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;                 &lt;br /&gt;
TO:&lt;a href="&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#73;&amp;#66;&amp;#77;&amp;#85;&amp;#83;&amp;#69;&amp;#82;&amp;#50;&amp;#64;&amp;#120;&amp;#120;&amp;#120;&amp;#46;&amp;#99;&amp;#111;&amp;#109;"&gt;&amp;#73;&amp;#66;&amp;#77;&amp;#85;&amp;#83;&amp;#69;&amp;#82;&amp;#50;&amp;#64;&amp;#120;&amp;#120;&amp;#120;&amp;#46;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;                     &lt;br /&gt;
SUBJECT: FILE WAS NOT RECEIVED                          &lt;/p&gt;
&lt;p&gt;START OF MESSAGE...                                 &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt; DO NOT  RESPOND TO THIS MESSAGE &lt;/em&gt;&lt;/strong&gt;                          &lt;br /&gt;
     File was not recieved. Please send again.
//* &lt;br /&gt;
```&lt;/p&gt;</summary><category term="INTRDR"></category><category term="trigger job"></category></entry><entry><title>Mainframer版本的程序猿吐槽</title><link href="http://mainframer.github.io/articles/Mainframer%E7%89%88%E6%9C%AC%E7%9A%84%E7%A8%8B%E5%BA%8F%E7%8C%BF%E5%90%90%E6%A7%BD.html" rel="alternate"></link><updated>2013-04-15T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2013-04-15:articles/Mainframer版本的程序猿吐槽.html</id><summary type="html">&lt;p&gt;下面这段JCL挺有意思的，之前见过其它版本的，今天在一个国外网站看到的&lt;code&gt;mainframe&lt;/code&gt;版本的，记下，纯属娱乐。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;MYWALLET&lt;/span&gt; &lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SPOUSE&lt;/span&gt;
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSIN&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;MYWALLET&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ALL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSOUT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DUMMY&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;</summary><category term="z/OS"></category></entry><entry><title>ISPF中使用Ctrl+Z来执行UNDO命令</title><link href="http://mainframer.github.io/articles/ISPF%E4%B8%AD%E4%BD%BF%E7%94%A8Ctrl+Z%E6%9D%A5%E6%89%A7%E8%A1%8CUNDO%E5%91%BD%E4%BB%A4.html" rel="alternate"></link><updated>2013-04-08T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2013-04-08:articles/ISPF中使用Ctrl+Z来执行UNDO命令.html</id><summary type="html">&lt;p&gt;今天研究的成果，教你们如何在大机上用Windows下用惯了的&lt;em&gt;Ctrl+Z&lt;/em&gt;来执行&lt;code&gt;UNDO&lt;/code&gt;命令。&lt;br /&gt;
首先，&lt;em&gt;ISPF&lt;/em&gt;里面&lt;code&gt;UNDO&lt;/code&gt;命令默认是没有开启的。我们需要自己写一个&lt;code&gt;Edit Initial Macro&lt;/code&gt;来默认开启。方法如下：&lt;/p&gt;
&lt;h5&gt;step1:在&lt;code&gt;usrid.REXX.EXEC&lt;/code&gt;下面新建一个宏&lt;code&gt;EDITMAC&lt;/code&gt;，内容如下,保存退出。&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;/*****************************REXX***********************************/&lt;/span&gt;
&lt;span class="sr"&gt;/* This macro load automaticly when you open a dataset for edit.    */&lt;/span&gt;      
 &lt;span class="no"&gt;Address&lt;/span&gt;  &lt;span class="n"&gt;ispexec&lt;/span&gt;                                                     
 &lt;span class="s2"&gt;&amp;quot;ISREDIT MACRO&amp;quot;&lt;/span&gt;                                                      
 &lt;span class="s2"&gt;&amp;quot;ISREDIT RECOVERY ON&amp;quot;&lt;/span&gt;                                                                                                  
&lt;span class="nb"&gt;exit&lt;/span&gt;                                                                  
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;step2: 随便&lt;em&gt;Edit&lt;/em&gt;一个&lt;em&gt;dataset&lt;/em&gt;,在&lt;em&gt;command&lt;/em&gt;栏上面执行命令&lt;code&gt;EDITSET&lt;/code&gt;打开&lt;code&gt;Edit and View Settings&lt;/code&gt;面板，&lt;/h5&gt;
&lt;p&gt;在User session initial macro那里填上step1的宏EDITMAC，按PF3保存退出。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;                         &lt;span class="no"&gt;Edit&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="no"&gt;View&lt;/span&gt; &lt;span class="no"&gt;Settings&lt;/span&gt;                          
&lt;span class="no"&gt;Command&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt;                                                              
                                                               &lt;span class="ss"&gt;More&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;     &lt;span class="o"&gt;+&lt;/span&gt;
&lt;span class="no"&gt;Settings&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;current&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="no"&gt;Edit&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="no"&gt;View&lt;/span&gt; &lt;span class="ss"&gt;sessions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;                   

  &lt;span class="no"&gt;User&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt; &lt;span class="n"&gt;initial&lt;/span&gt; &lt;span class="n"&gt;macro&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="no"&gt;EDITMAC&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;step3:在&lt;em&gt;command&lt;/em&gt;栏上执行&lt;code&gt;KEYS&lt;/code&gt;命令调出&lt;em&gt;ISPF&lt;/em&gt;键位设置面板，随便找一个&lt;em&gt;PF13&lt;/em&gt;至&lt;em&gt;PF24&lt;/em&gt;当中你认为最不常用的键，将它和&lt;code&gt;UNDO&lt;/code&gt;命令绑定。这里我选择&lt;code&gt;PF18&lt;/code&gt;.&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="no"&gt;Key&lt;/span&gt;       &lt;span class="no"&gt;Definition&lt;/span&gt;                                 &lt;span class="no"&gt;Format&lt;/span&gt;  &lt;span class="no"&gt;Label&lt;/span&gt;
 &lt;span class="no"&gt;F16&lt;/span&gt;  &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;  &lt;span class="no"&gt;RETURN&lt;/span&gt;                                     &lt;span class="no"&gt;SHORT&lt;/span&gt;   &lt;span class="no"&gt;Return&lt;/span&gt;  
 &lt;span class="no"&gt;F17&lt;/span&gt;  &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;  &lt;span class="no"&gt;RFIND&lt;/span&gt;                                      &lt;span class="no"&gt;SHORT&lt;/span&gt;   &lt;span class="no"&gt;Rfind&lt;/span&gt;   
 &lt;span class="no"&gt;F18&lt;/span&gt;  &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;  &lt;span class="no"&gt;UNDO&lt;/span&gt;                                       &lt;span class="no"&gt;SHORT&lt;/span&gt;   &lt;span class="no"&gt;Undo&lt;/span&gt;      
 &lt;span class="sb"&gt;```&lt;/span&gt;

&lt;span class="sb"&gt;#####step4: 在你使用的`&lt;/span&gt;&lt;span class="no"&gt;TN3270&lt;/span&gt;&lt;span class="sb"&gt;`终端的键盘设置里面，将`&lt;/span&gt;&lt;span class="no"&gt;PF18&lt;/span&gt;&lt;span class="sb"&gt;`映射成*Cntl+Z*。最常见的*TN3270*终端是*PCOMM*。&lt;/span&gt;
&lt;span class="sb"&gt;这样一来，`&lt;/span&gt;&lt;span class="no"&gt;UNDO&lt;/span&gt;&lt;span class="sb"&gt;`就被默认打开，并且你可以用*Cntl+Z*来做最近一步的撤销动作，就像在windows下面一样。这里要注意，对于还没按下确定键的情况，如果要撤销的快捷键是`&lt;/span&gt;&lt;span class="no"&gt;Shift&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="no"&gt;PageUp&lt;/span&gt;&lt;span class="sb"&gt;`.关于`&lt;/span&gt;&lt;span class="no"&gt;UNDO&lt;/span&gt;&lt;span class="sb"&gt;`和`&lt;/span&gt;&lt;span class="no"&gt;Shift&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="no"&gt;PageUp&lt;/span&gt;&lt;span class="sb"&gt;`的区别，看我早些时候的文章:《ISPF中Shift+PageUp和UNDO的区别》  &lt;/span&gt;
&lt;span class="sb"&gt;最后，还有一点，除了`&lt;/span&gt;&lt;span class="no"&gt;RECOVERY&lt;/span&gt; &lt;span class="no"&gt;ON&lt;/span&gt;&lt;span class="sb"&gt;`之外，显然其它的*Edit*命令也可以一并添加到`&lt;/span&gt;&lt;span class="no"&gt;EDITMAC&lt;/span&gt;&lt;span class="sb"&gt;`这个宏里面去，只要你希望它执行。比如：&lt;/span&gt;
&lt;span class="sb"&gt;```&lt;/span&gt;&lt;span class="n"&gt;ruby&lt;/span&gt;
&lt;span class="sr"&gt;/*****************************REXX***********************************/&lt;/span&gt;
&lt;span class="sr"&gt;/* This macro load automaticly when you open a dataset for edit.    */&lt;/span&gt;      
 &lt;span class="no"&gt;Address&lt;/span&gt;  &lt;span class="n"&gt;ispexec&lt;/span&gt;                                                     
 &lt;span class="s2"&gt;&amp;quot;ISREDIT MACRO&amp;quot;&lt;/span&gt;                                                      
 &lt;span class="s2"&gt;&amp;quot;ISREDIT RECOVERY ON&amp;quot;&lt;/span&gt;                                                                                                  
 &lt;span class="s2"&gt;&amp;quot;ISREDIT RES&amp;quot;&lt;/span&gt;
 &lt;span class="s2"&gt;&amp;quot;ISREDIT HI AUTO&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;exit&lt;/span&gt;                                                                  
&lt;/pre&gt;&lt;/div&gt;</summary><category term="ISPF"></category><category term="UNDO"></category></entry><entry><title>每天定时从Mainframe下载gdg文件再上传到ftp</title><link href="http://mainframer.github.io/articles/%E6%AF%8F%E5%A4%A9%E5%AE%9A%E6%97%B6%E4%BB%8EMainframe%E4%B8%8B%E8%BD%BDgdg%E6%96%87%E4%BB%B6%E5%86%8D%E4%B8%8A%E4%BC%A0%E5%88%B0ftp.html" rel="alternate"></link><updated>2013-04-01T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2013-04-01:articles/每天定时从Mainframe下载gdg文件再上传到ftp.html</id><summary type="html">&lt;p&gt;今天要完成一个任务：  &lt;/p&gt;
&lt;h4&gt;任务描述&lt;/h4&gt;
&lt;h6&gt;Step1:从大机(mainframe)上下载指定的gdg最新的2个generation到本地C:\gdg目录下。&lt;/h6&gt;
&lt;h6&gt;Step2:将这些下载下来的gdg文件发送到指定的ftp服务器的&lt;code&gt;/topath/users-4/&lt;/code&gt;目录下面，每天新建一个目录&lt;code&gt;yyyymmdd&lt;/code&gt;用来存放当天的gdg文件。&lt;/h6&gt;
&lt;h6&gt;Step3:不用OPC等大机上面的scheduling工具，用windows的“计划任务”功能即可。&lt;/h6&gt;
&lt;p&gt;这里是实现以上任务的批处理脚本&lt;code&gt;ftpscript.bat&lt;/code&gt;。放在&lt;code&gt;C:\ftpscript&lt;/code&gt;.bat，之后在windows计划任务里面添加每天定时运行即可。   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="vi"&gt;@echo&lt;/span&gt; &lt;span class="n"&gt;off&lt;/span&gt;
&lt;span class="n"&gt;rem&lt;/span&gt; &lt;span class="err"&gt;指定&lt;/span&gt;&lt;span class="n"&gt;mainframe&lt;/span&gt;&lt;span class="err"&gt;的&lt;/span&gt;&lt;span class="no"&gt;IP&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;mfIP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;xxx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xxx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xxx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xxx&lt;/span&gt;
&lt;span class="n"&gt;rem&lt;/span&gt; &lt;span class="err"&gt;指定&lt;/span&gt;&lt;span class="n"&gt;mainframe&lt;/span&gt;&lt;span class="err"&gt;用户名&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;mfUser&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;
&lt;span class="n"&gt;rem&lt;/span&gt; &lt;span class="err"&gt;指定&lt;/span&gt;&lt;span class="n"&gt;mainframe&lt;/span&gt;&lt;span class="err"&gt;密码&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;mfPass&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;MFPASSWD&lt;/span&gt;
&lt;span class="n"&gt;rem&lt;/span&gt; &lt;span class="err"&gt;指定从&lt;/span&gt;&lt;span class="no"&gt;FTP&lt;/span&gt;&lt;span class="err"&gt;下载下来的&lt;/span&gt;&lt;span class="n"&gt;gdg&lt;/span&gt;&lt;span class="err"&gt;存放到本地目录&lt;/span&gt;&lt;span class="ss"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:\&lt;/span&gt;&lt;span class="n"&gt;gdg&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="no"&gt;LocalFolder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:\&lt;/span&gt;&lt;span class="n"&gt;gdg&lt;/span&gt;
&lt;span class="n"&gt;rem&lt;/span&gt; &lt;span class="err"&gt;指定将下载下来的文件发送到哪一个目标&lt;/span&gt;&lt;span class="n"&gt;ftp&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="err"&gt;上面去&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;toftpServer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;xxx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xxx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xxx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xxx&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;toftpuser&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;FTPUSER&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;toftppass&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;TOFTPPASS&lt;/span&gt;
&lt;span class="n"&gt;rem&lt;/span&gt; &lt;span class="err"&gt;事先清空本地目录&lt;/span&gt;&lt;span class="ss"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:\&lt;/span&gt;&lt;span class="n"&gt;gdg&lt;/span&gt;&lt;span class="err"&gt;，然后从大机上面下载最新的&lt;/span&gt;&lt;span class="n"&gt;gdg&lt;/span&gt;&lt;span class="err"&gt;放到这里&lt;/span&gt;
&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="no"&gt;LocalFolder&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;
&lt;span class="n"&gt;del&lt;/span&gt; &lt;span class="sr"&gt;/s /&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="sr"&gt;/f *.* &lt;/span&gt;

&lt;span class="sr"&gt;rem 拼装ftp命令到C:\TempFTP.txt里面，最后用ftp.exe -n -s:&amp;quot;%ftpFile%&amp;quot; 执行里面的命令&lt;/span&gt;
&lt;span class="sr"&gt;set ftpFile=%temp%\TempFTP.txt&lt;/span&gt;
&lt;span class="sr"&gt;  &amp;gt;&amp;quot;%ftpFile%&amp;quot; (&lt;/span&gt;
&lt;span class="sr"&gt;rem 第一步：从大机上面下载文件放到C:\gdg目录 (前面已做清空) &lt;/span&gt;
&lt;span class="sr"&gt;    echo open %mfIP%&lt;/span&gt;
&lt;span class="sr"&gt;    echo user %mfUser%&lt;/span&gt;
&lt;span class="sr"&gt;    echo %mfPass%    &lt;/span&gt;
&lt;span class="sr"&gt;    echo lcd &amp;quot;%LocalFolder%&amp;quot;&lt;/span&gt;
&lt;span class="sr"&gt;    echo ascii&lt;/span&gt;
&lt;span class="sr"&gt;    echo disconnect&lt;/span&gt;
&lt;span class="sr"&gt;rem echo site RECFM=VB LRECL=2548 BLKSIZE=27998&lt;/span&gt;
&lt;span class="sr"&gt;    echo get &amp;quot;&amp;#39;IBMUSER.TESTGDG.ASPA.EXTRACT(0)&amp;#39;&amp;quot;    &lt;/span&gt;
&lt;span class="sr"&gt;    echo get &amp;quot;&amp;#39;IBMUSER.TESTGDG.ASPA.EXTRACT(-1)&amp;#39;&amp;quot;   &lt;/span&gt;
&lt;span class="sr"&gt;rem 第二步：在目标ftp上新建一个yyyymmdd目录，将C:\gdg目录下所有的文件传到该目录下&lt;/span&gt;
&lt;span class="sr"&gt;    echo open %toftpServer%&lt;/span&gt;
&lt;span class="sr"&gt;    echo user %toftpuser%&lt;/span&gt;
&lt;span class="sr"&gt;    echo %toftppass%&lt;/span&gt;
&lt;span class="sr"&gt;    echo cd /&lt;/span&gt;&lt;span class="n"&gt;topath&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="n"&gt;rem&lt;/span&gt; &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;
    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="ss"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="sx"&gt;%%Date:~4,2%&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="ss"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;
    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="ss"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="sx"&gt;%%Date:~4,2%&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="ss"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;
    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="n"&gt;put&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;#39;IBMUSER.TESTGDG.ASPA.EXTRACT(0)&amp;#39;&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;IBMUSER.TESTGDG.ASPA.EXTRACT(0)&amp;quot;&lt;/span&gt;  
    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="n"&gt;put&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;#39;IBMUSER.TESTGDG.ASPA.EXTRACT(-1)&amp;#39;&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;IBMUSER.TESTGDG.ASPA.EXTRACT(-1)&amp;quot;&lt;/span&gt;                                               
    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="n"&gt;pwd&lt;/span&gt;
    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="n"&gt;ls&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;
    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="n"&gt;bye&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt;  
&lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="ss"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:\&lt;/span&gt;&lt;span class="n"&gt;windows&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="n"&gt;system32&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="n"&gt;ftp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exe&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="ss"&gt;s&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;%ftpFile%&amp;quot;&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;</summary><category term="mainframe"></category><category term="ftp"></category></entry><entry><title>BAT批处理现学现用</title><link href="http://mainframer.github.io/articles/BAT%E6%89%B9%E5%A4%84%E7%90%86%E7%8E%B0%E5%AD%A6%E7%8E%B0%E7%94%A8.html" rel="alternate"></link><updated>2013-03-29T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2013-03-29:articles/BAT批处理现学现用.html</id><summary type="html">&lt;p&gt;上篇说的是本人在实现报表自动化过程中用到的VBS知识，这篇我打算用来总结在此过程中用到的批处理知识。&lt;/p&gt;
&lt;h4&gt;批处理里面如何实现延时？&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;rem&lt;/span&gt; &lt;span class="err"&gt;巧妙地利用&lt;/span&gt;&lt;span class="n"&gt;windows&lt;/span&gt;&lt;span class="err"&gt;自带的&lt;/span&gt;&lt;span class="n"&gt;ping&lt;/span&gt;&lt;span class="err"&gt;命令来达到延时的目的&lt;/span&gt;
&lt;span class="n"&gt;ping&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exe&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mf"&gt;127.1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;nul&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;批处理的用户输入校验模块  [这里是校验日期，格式:yyyymm]&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="nl"&gt;off&lt;/span&gt;
&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;input_module&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="n"&gt;Please&lt;/span&gt; &lt;span class="n"&gt;enter&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="nl"&gt;here&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="n"&gt;yyyymm&lt;/span&gt;&lt;span class="o"&gt;=^&amp;lt;&lt;/span&gt;&lt;span class="nl"&gt;format&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;yyyymm&lt;/span&gt;&lt;span class="o"&gt;^&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;example&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;201301&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;yyyymm&lt;/span&gt;&lt;span class="o"&gt;%|&lt;/span&gt;&lt;span class="n"&gt;findstr&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;nul&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;errorlevel&lt;/span&gt;&lt;span class="o"&gt;%==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;goto&lt;/span&gt; &lt;span class="n"&gt;input_module&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;INFO&lt;/span&gt;&lt;span class="o"&gt;*^&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; 
&lt;span class="n"&gt;ping&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exe&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mf"&gt;127.1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;nul&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;对以上用户输入做操作:字符串截取、字符串拼接的用法：&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;yyyymm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="nl"&gt;yyyymm&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="nl"&gt;yyyymm&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mo"&gt;01&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;month_display&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;JAN&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="nl"&gt;yyyymm&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;批处理中用户名、密码输入模块&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;rem&lt;/span&gt;  &lt;span class="err"&gt;用户输入&lt;/span&gt;&lt;span class="n"&gt;ftpUserID&lt;/span&gt;&lt;span class="err"&gt;及&lt;/span&gt;&lt;span class="n"&gt;ftpPass&lt;/span&gt;&lt;span class="err"&gt;模块&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;INFO&lt;/span&gt;&lt;span class="o"&gt;*^&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Please&lt;/span&gt; &lt;span class="n"&gt;enter&lt;/span&gt; &lt;span class="n"&gt;ID&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;Password&lt;/span&gt;
&lt;span class="n"&gt;ping&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exe&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mf"&gt;127.1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;nul&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="n"&gt;ftpUser&lt;/span&gt;&lt;span class="o"&gt;=^&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;INFO&lt;/span&gt;&lt;span class="o"&gt;*^&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Enter&lt;/span&gt; &lt;span class="n"&gt;TSO&lt;/span&gt; &lt;span class="nl"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;批处理中著名的实现隐藏用户输入密码的方法&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;rem&lt;/span&gt;  &lt;span class="err"&gt;批处理里面很著名的隐藏输入不显示的方法&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;By&lt;/span&gt;&lt;span class="err"&gt;德国人&lt;/span&gt;&lt;span class="n"&gt;HerbertKleebauer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="n"&gt;hP1X500P&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;PZBBBfh&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="err"&gt;##&lt;/span&gt;&lt;span class="n"&gt;fXf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="err"&gt;@`$&lt;/span&gt;&lt;span class="n"&gt;fPf&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="n"&gt;f3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;f1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;u5x&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;in&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="n"&gt;ftpPass&lt;/span&gt;&lt;span class="o"&gt;=^&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;INFO&lt;/span&gt;&lt;span class="o"&gt;*^&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Enter&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="nl"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;nul&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;tokens=*&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%%&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;in&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;ftpPass&lt;/span&gt;&lt;span class="o"&gt;=%%&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;
&lt;span class="n"&gt;del&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;批处理中实现执行批量ftp命令的方法&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;rem&lt;/span&gt; &lt;span class="err"&gt;设置远程&lt;/span&gt;&lt;span class="n"&gt;ftp&lt;/span&gt;&lt;span class="err"&gt;的&lt;/span&gt;&lt;span class="n"&gt;ip&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;ftpIP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;xxx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xxx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xxx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xxx&lt;/span&gt; 
&lt;span class="n"&gt;rem&lt;/span&gt; &lt;span class="err"&gt;设置本地目录为当前脚本所在目录，用&lt;/span&gt;&lt;span class="o"&gt;%~&lt;/span&gt;&lt;span class="n"&gt;dp0&lt;/span&gt;&lt;span class="err"&gt;表示&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;LocalFolder&lt;/span&gt;&lt;span class="o"&gt;=%~&lt;/span&gt;&lt;span class="n"&gt;dp0&lt;/span&gt;
&lt;span class="n"&gt;rem&lt;/span&gt; &lt;span class="err"&gt;指定临时&lt;/span&gt;&lt;span class="n"&gt;ftp&lt;/span&gt;&lt;span class="err"&gt;指令文件，将&lt;/span&gt;&lt;span class="n"&gt;job&lt;/span&gt;&lt;span class="err"&gt;送往&lt;/span&gt;&lt;span class="n"&gt;mainframe&lt;/span&gt; &lt;span class="err"&gt;的&lt;/span&gt;&lt;span class="n"&gt;JES2&lt;/span&gt;&lt;span class="err"&gt;队列运行，并且提前删除以下两个&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="err"&gt;。&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;ftpFile&lt;/span&gt;&lt;span class="o"&gt;=%&lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;TempFTP&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;
  &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%ftpFile%&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="n"&gt;open&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;ftpIP&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;
    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;ftpUser&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;
    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;ftpPass&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;    
    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="n"&gt;lcd&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;%LocalFolder%&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="n"&gt;ascii&lt;/span&gt;
    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt; &lt;span class="n"&gt;site&lt;/span&gt; &lt;span class="n"&gt;filetype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;jes&lt;/span&gt;
    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="n"&gt;put&lt;/span&gt; &lt;span class="n"&gt;my_jes2_job&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;    
    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="n"&gt;disconnect&lt;/span&gt;
    &lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="n"&gt;bye&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;rem&lt;/span&gt;  &lt;span class="err"&gt;调用&lt;/span&gt;&lt;span class="n"&gt;ftp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exe&lt;/span&gt;&lt;span class="err"&gt;执行上述&lt;/span&gt;&lt;span class="n"&gt;ftp&lt;/span&gt;&lt;span class="err"&gt;命令，来完成将&lt;/span&gt;&lt;span class="n"&gt;my_jes2_job&lt;/span&gt;&lt;span class="err"&gt;送入到&lt;/span&gt;&lt;span class="n"&gt;mainframe&lt;/span&gt;&lt;span class="err"&gt;执行的操作&lt;/span&gt;
&lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="nl"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;windows&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;system32&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;ftp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exe&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nl"&gt;s&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%ftpFile%&amp;quot;&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;批处理中判断文件是否为空的方法，以及goto分支的用法&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;delims=&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%%&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;dir&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="n"&gt;my_test_source&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;%%~&lt;/span&gt;&lt;span class="n"&gt;zi&lt;/span&gt; &lt;span class="n"&gt;equ&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;   
  &lt;span class="k"&gt;goto&lt;/span&gt; &lt;span class="n"&gt;empty_source&lt;/span&gt;      &lt;span class="n"&gt;rem&lt;/span&gt; &lt;span class="k"&gt;goto&lt;/span&gt; &lt;span class="n"&gt;process&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="k"&gt;goto&lt;/span&gt; &lt;span class="n"&gt;not_empty_source&lt;/span&gt;  &lt;span class="n"&gt;rem&lt;/span&gt; &lt;span class="k"&gt;goto&lt;/span&gt; &lt;span class="n"&gt;process&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;empty_source&lt;/span&gt; 
   &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="n"&gt;something&lt;/span&gt; &lt;span class="nl"&gt;here&lt;/span&gt;
 &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;not_empty_source&lt;/span&gt;
   &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="n"&gt;something&lt;/span&gt; &lt;span class="n"&gt;here&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;批处理中调用msgbox显示消息框的方法&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;rem&lt;/span&gt; &lt;span class="err"&gt;利用&lt;/span&gt;&lt;span class="n"&gt;mshta&lt;/span&gt;&lt;span class="err"&gt;，消息框里面换行用&lt;/span&gt;&lt;span class="o"&gt;^&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;chr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;
&lt;span class="n"&gt;mshta&lt;/span&gt; &lt;span class="nl"&gt;vbscript&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;msgbox&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Empty !&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;^&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;chr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;^&amp;amp;^&lt;/span&gt;&lt;span class="n"&gt;chr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;^&amp;amp;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Please Check!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Error&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;批处理中拷贝文件的方法&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;copy&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;nul&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;批处理中执行vbs脚本的方法&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;rem&lt;/span&gt; &lt;span class="n"&gt;ftpUser&lt;/span&gt;&lt;span class="err"&gt;和&lt;/span&gt;&lt;span class="n"&gt;yyyymm&lt;/span&gt;&lt;span class="err"&gt;是传递给&lt;/span&gt;&lt;span class="n"&gt;vbs&lt;/span&gt;&lt;span class="err"&gt;的参数&lt;/span&gt;
&lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="n"&gt;wscript&lt;/span&gt; &lt;span class="n"&gt;process_not_empty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vbs&lt;/span&gt;  &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;ftpUser&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;  &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;yyyymm&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="BAT批处理"></category></entry><entry><title>VB Script现学现用</title><link href="http://mainframer.github.io/articles/VB%20Script%E7%8E%B0%E5%AD%A6%E7%8E%B0%E7%94%A8.html" rel="alternate"></link><updated>2013-03-27T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2013-03-27:articles/VB Script现学现用.html</id><summary type="html">&lt;p&gt;这几天需要实现一个报表自动化的功能，用到批处理BAT和VBS的知识，属于现学现用。各种谷歌百度。都说好记性不如烂笔头，我打算花一篇的篇幅来记录用到的VB Script知识，另外用一篇的篇幅来记录用到的BAT批处理知识。希望可以积少成多。  &lt;br /&gt;
(&lt;em&gt;注意&lt;/em&gt;：VBS跟VBA不是一个概念，VBA只有在开启Excel的时候才能运行。)  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;dim&lt;/span&gt; &lt;span class="n"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yyyymm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;to_dte_&lt;/span&gt;       &lt;span class="err"&gt;&amp;#39;定义变量&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;user_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;wscript&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arguments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="err"&gt;&amp;#39;接收批处理传过来的第一个参数&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;CAP_user_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Ucase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;       &lt;span class="err"&gt;&amp;#39;转换成大写&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Select&lt;/span&gt; &lt;span class="n"&gt;Case&lt;/span&gt; &lt;span class="n"&gt;Mid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;yyyymm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;        &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;Select&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Case&lt;/span&gt;&lt;span class="err"&gt;的用法&lt;/span&gt; &lt;span class="err"&gt;和&lt;/span&gt; &lt;span class="err"&gt;字符串截取的方法&lt;/span&gt;                                         
&lt;span class="n"&gt;Case&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;01&amp;quot;&lt;/span&gt;   
    &lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="n"&gt;something&lt;/span&gt; &lt;span class="n"&gt;here&lt;/span&gt;  
&lt;span class="n"&gt;Case&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;02&amp;quot;&lt;/span&gt;                          &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;If&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Then&lt;/span&gt;&lt;span class="err"&gt;的用法，闰年的判断方法，&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Mod&lt;/span&gt;&lt;span class="err"&gt;的用法&lt;/span&gt;
  &lt;span class="n"&gt;If&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Mid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;yyyymm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;Mod&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;And&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Mid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;yyyymm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;Mod&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;Or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Mid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;yyyymm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;Mod&lt;/span&gt; &lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;Then&lt;/span&gt;
   &lt;span class="n"&gt;to_dte&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;yyyymm&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;29&amp;quot;&lt;/span&gt;           &lt;span class="err"&gt;&amp;#39;字符串拼接的用法&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt;
   &lt;span class="n"&gt;to_dte&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;yyyymm&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;28&amp;quot;&lt;/span&gt;                 
  &lt;span class="n"&gt;End&lt;/span&gt; &lt;span class="n"&gt;If&lt;/span&gt;
&lt;span class="n"&gt;Case&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;03&amp;quot;&lt;/span&gt; 
  &lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="n"&gt;something&lt;/span&gt; &lt;span class="n"&gt;here&lt;/span&gt;
&lt;span class="n"&gt;Case&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;04&amp;quot;&lt;/span&gt; 
&lt;span class="n"&gt;End&lt;/span&gt; &lt;span class="n"&gt;Select&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;Weekday&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;to_dte&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;7&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;Then&lt;/span&gt;        &lt;span class="err"&gt;&amp;#39;判断任意一天是星期几的用法&lt;/span&gt;                             
  &lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="n"&gt;something&lt;/span&gt; &lt;span class="n"&gt;here&lt;/span&gt;
  &lt;span class="n"&gt;End&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;VBS替换text.txt文本中所有"AAAA"字符串为“BBBB"的方法&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Set&lt;/span&gt; &lt;span class="n"&gt;fso&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Wscript&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CreateObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Scripting.FileSystemObject&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;fso&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;opentextfile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readall&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;AAAA&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;BBBB&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;
&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;fso&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;opentextfile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;newtext.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;VBS中提示框的用法&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;MsgBox&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Error&amp;quot;&lt;/span&gt;    &lt;span class="err"&gt;或者&lt;/span&gt;
&lt;span class="n"&gt;WScript&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Echo&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h6&gt;VBS下取得当前运行脚本所在的当前目录的办法&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;ws&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;createobject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;wscript.shell&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;WScript&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Echo&lt;/span&gt; &lt;span class="n"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;currentdirectory&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;VBS中判断文件是否存在以及VBS移动、删除文件的用法&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Set&lt;/span&gt; &lt;span class="n"&gt;objFSO&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Wscript&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CreateObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Scripting.FileSystemObject&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Const&lt;/span&gt; &lt;span class="n"&gt;OverwriteExisting&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;my_file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;currentdirectory&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;\my_file.txt&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;my_file_fullpath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;currentdirectory&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\my_file.txt&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;If&lt;/span&gt; &lt;span class="n"&gt;objFSO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FileExists&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;Then&lt;/span&gt;               &lt;span class="err"&gt;&amp;#39;判断文件存在&lt;/span&gt; 
  &lt;span class="n"&gt;If&lt;/span&gt; &lt;span class="n"&gt;objFSO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FileExists&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_file_fullpath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;Then&lt;/span&gt;   
    &lt;span class="n"&gt;objFSO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DeleteFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_file_fullpath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;           &lt;span class="err"&gt;&amp;#39;删除文件&lt;/span&gt;
   &lt;span class="n"&gt;End&lt;/span&gt; &lt;span class="n"&gt;If&lt;/span&gt; 
  &lt;span class="n"&gt;objFSO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MoveFile&lt;/span&gt; &lt;span class="n"&gt;my_file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;my_file_fullpath&lt;/span&gt;       &lt;span class="err"&gt;&amp;#39;移动文件&lt;/span&gt;
&lt;span class="n"&gt;End&lt;/span&gt; &lt;span class="n"&gt;If&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h4&gt;下面是VBS操作excel的笔记&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Set&lt;/span&gt; &lt;span class="n"&gt;objExcel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CreateObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Excel.Application&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="err"&gt;&amp;#39;创建&lt;/span&gt; &lt;span class="n"&gt;excel&lt;/span&gt; &lt;span class="err"&gt;对象&lt;/span&gt;                               
&lt;span class="n"&gt;If&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Number&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;Then&lt;/span&gt;
    &lt;span class="n"&gt;Wscript&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Echo&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Excel application not found.&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;Wscript&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Quit&lt;/span&gt;
&lt;span class="n"&gt;End&lt;/span&gt; &lt;span class="n"&gt;If&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;objExcel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Visible&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;True&lt;/span&gt;                            &lt;span class="err"&gt;&amp;#39;设置&lt;/span&gt;&lt;span class="n"&gt;excel&lt;/span&gt;&lt;span class="err"&gt;可见&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Set&lt;/span&gt; &lt;span class="n"&gt;objBook&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;objExcel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Workbooks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;             &lt;span class="err"&gt;&amp;#39;添加&lt;/span&gt;&lt;span class="n"&gt;excel&lt;/span&gt; &lt;span class="err"&gt;工作簿&lt;/span&gt;
&lt;span class="n"&gt;Set&lt;/span&gt; &lt;span class="n"&gt;objSheet1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;objBook&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sheets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Sheet1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;objSheet1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;NEW_SHEET1&amp;quot;&lt;/span&gt;                        &lt;span class="err"&gt;&amp;#39;重命名&lt;/span&gt;&lt;span class="n"&gt;sheet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;字符串拼接&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt;用&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;&amp;amp;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;objSheet2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;NEW_SHEET2&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;objSheet3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;NEW_SHEET3&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;objSheet3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Activate&lt;/span&gt;                                 &lt;span class="err"&gt;&amp;#39;设置&lt;/span&gt;&lt;span class="n"&gt;Sheet3&lt;/span&gt;&lt;span class="err"&gt;为当前编辑的活动&lt;/span&gt;&lt;span class="n"&gt;sheet&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;objExcel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;A3:E20&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Select&lt;/span&gt;                    &lt;span class="err"&gt;&amp;#39;将&lt;/span&gt;&lt;span class="nl"&gt;A3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;E20&lt;/span&gt;&lt;span class="err"&gt;之间的数字类型当成文本类型显示&lt;/span&gt;
&lt;span class="n"&gt;objExcel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Selection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NumberFormat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;@&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;objExcel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;A1:E2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Interior&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RGB&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;220&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;230&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;241&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="err"&gt;&amp;#39;设置区域内单元格底色&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RGB&lt;/span&gt;&lt;span class="err"&gt;值&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;With&lt;/span&gt; &lt;span class="n"&gt;objExcel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ActiveWindow&lt;/span&gt;                         &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Freeze&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;固定首行和首列&lt;/span&gt;            
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SplitColumn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SplitRow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;End&lt;/span&gt; &lt;span class="n"&gt;With&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;objExcel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;A3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Select&lt;/span&gt;                        &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Freeze&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;固定前面两行&lt;/span&gt;
&lt;span class="n"&gt;objExcel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ActiveWindow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FreezePanes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;True&lt;/span&gt;       
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;objExcel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;A1:B1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Select&lt;/span&gt;                     &lt;span class="err"&gt;&amp;#39;单元格&lt;/span&gt;&lt;span class="nl"&gt;A1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;B1&lt;/span&gt;&lt;span class="err"&gt;合并&lt;/span&gt;
&lt;span class="n"&gt;objExcel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Selection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MergeCells&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;True&lt;/span&gt;            
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;objExcel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;A1:B1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Select&lt;/span&gt;                     &lt;span class="err"&gt;&amp;#39;字体加粗&lt;/span&gt;
&lt;span class="n"&gt;objExcel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Selection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Font&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Bold&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;True&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;objExcel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Cells&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;NEW_VALUE&amp;quot;&lt;/span&gt;           &lt;span class="err"&gt;&amp;#39;单元格赋值&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;objExcel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Columns&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;A:A&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;ColumnWidth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;13.57&lt;/span&gt;        &lt;span class="err"&gt;&amp;#39;设置整列宽&lt;/span&gt;  
&lt;span class="n"&gt;objExcel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Columns&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;B:B&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;ColumnWidth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;15.71&lt;/span&gt;      
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;objExcel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Columns&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;G:G&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Select&lt;/span&gt;                     &lt;span class="err"&gt;&amp;#39;设置&lt;/span&gt;&lt;span class="n"&gt;G&lt;/span&gt;&lt;span class="err"&gt;列显示值的精度&lt;/span&gt;
&lt;span class="n"&gt;objExcel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Selection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NumberFormat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;0.000000000&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;objExcel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Rows&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1:1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Select&lt;/span&gt;                        &lt;span class="err"&gt;&amp;#39;首行显示筛选条件&lt;/span&gt;              
&lt;span class="n"&gt;objExcel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Selection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AutoFilter&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;objExcel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ActiveWindow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ScrollColumn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;             &lt;span class="err"&gt;&amp;#39;让鼠标回到最左边&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;VBS实现对Excel的列自动填充&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Const&lt;/span&gt; &lt;span class="n"&gt;xlFillDefault&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;                        
&lt;span class="n"&gt;objExcel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;H2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;Select&lt;/span&gt;
&lt;span class="n"&gt;objExcel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ActiveCell&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FormulaR1C1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;
&lt;span class="s"&gt;&amp;quot;=VLOOKUP(RC[-1],Dict!R3C4:R227C5,2,FALSE)&amp;quot;&lt;/span&gt;        &lt;span class="err"&gt;&amp;#39;这里以&lt;/span&gt;&lt;span class="n"&gt;VLOOKUP&lt;/span&gt;&lt;span class="err"&gt;公式举例，可以是任意公式&lt;/span&gt;
&lt;span class="n"&gt;objExcel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;H2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;AutoFill&lt;/span&gt; &lt;span class="n"&gt;objExcel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;H2:H&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;itotalline&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;xlFillDefault&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;VBS实现从外部text文件导入数据到当前sheet&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Dim&lt;/span&gt; &lt;span class="n"&gt;objFSO&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;objFile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;aline&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;irow&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;icol&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;source_text&lt;/span&gt;    
&lt;span class="n"&gt;Set&lt;/span&gt; &lt;span class="n"&gt;objFSO&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CreateObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Scripting.FileSystemObject&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;source_text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Source_feed_file.txt&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;Set&lt;/span&gt; &lt;span class="n"&gt;objFile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;objFSO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OpenTextFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;source_text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ForReading&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;irow&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;While&lt;/span&gt; &lt;span class="n"&gt;Not&lt;/span&gt; &lt;span class="n"&gt;objFile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AtEndOfStream&lt;/span&gt;
        &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;objFile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ReadLine&lt;/span&gt; 
        &lt;span class="n"&gt;icol&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;     
        &lt;span class="n"&gt;aline&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                         &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="err"&gt;文件是以”&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;分隔的 &lt;/span&gt;
        &lt;span class="n"&gt;Do&lt;/span&gt; &lt;span class="n"&gt;Until&lt;/span&gt; &lt;span class="n"&gt;icol&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Ubound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;aline&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;     
          &lt;span class="n"&gt;objSheet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Cells&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;irow&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;icol&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;aline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;icol&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;      
          &lt;span class="n"&gt;icol&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;icol&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;         
         &lt;span class="n"&gt;Loop&lt;/span&gt;  
  &lt;span class="n"&gt;irow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;irow&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;Wend&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;保存excel到当前目录，关闭并退出excel&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;objBook&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SaveAs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;currentdirectory&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;\NEW_EXCEL.xlsx&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="n"&gt;objBook&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Close&lt;/span&gt;
&lt;span class="n"&gt;objExcel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Quit&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="VB Script"></category></entry><entry><title>mainframe平台报表自动化方案实现</title><link href="http://mainframer.github.io/articles/mainframe%E5%B9%B3%E5%8F%B0%E6%8A%A5%E8%A1%A8%E8%87%AA%E5%8A%A8%E5%8C%96%E6%96%B9%E6%A1%88%E5%AE%9E%E7%8E%B0.html" rel="alternate"></link><updated>2013-03-25T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2013-03-25:articles/mainframe平台报表自动化方案实现.html</id><summary type="html">&lt;h4&gt;这几天，客户提了一个需求如下：&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;&amp;lt;1&amp;gt;&lt;/em&gt;每个月初需要在本地(Windows XP)看上一个月的一个报表。&lt;br /&gt;
&lt;em&gt;&amp;lt;2&amp;gt;&lt;/em&gt;如果可以随时查看之前任意月份的报表，那更好。&lt;br /&gt;
&lt;em&gt;&amp;lt;3&amp;gt;&lt;/em&gt;报表数据来源于Mainframe上的表A和表B,需要join操作。 &lt;br /&gt;
&lt;em&gt;&amp;lt;4&amp;gt;&lt;/em&gt;报表结果以excel呈现，有必要的一些格式化和公式以及美化等excel常规操作。    &lt;/p&gt;
&lt;h4&gt;经研究，实现方案如下：&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;&amp;lt;1&amp;gt;&lt;/em&gt;用bat批处理与mainframe交互，交互方式为ftp。包括将本地job送到JES2运行，包括将表A和表B的数据从mainframe上下载到本地。&lt;br /&gt;
&lt;em&gt;&amp;lt;2&amp;gt;&lt;/em&gt;用vbs处理后期的excel，包括数据导入，单元格格式，公式操作，excel美化，用户提示等等常规的office操作。 &lt;br /&gt;
&lt;em&gt;&amp;lt;3&amp;gt;&lt;/em&gt;用bat批处理来调用vbs，这样bat批处理就把mainframe和vbs串在了一起。  &lt;/p&gt;
&lt;h4&gt;方案优势：&lt;/h4&gt;
&lt;p&gt;选择这个方案是从用户易用性考虑，客户不需要安装任何软件。批处理和vbs以及excel在xp下面都是自带的。用户只需双击，然后输入查看的报表月份即可。&lt;/p&gt;
&lt;h4&gt;方案设计图&lt;/h4&gt;
&lt;p&gt;我用word简单地画了一个方案图：
&lt;img alt="report automation on mainframe" src="./../images/mainframe-report-automation.png" /&gt;  &lt;br /&gt;
代码就不放上来了。&lt;/p&gt;</summary><category term="mainframe自动化"></category></entry><entry><title>JCL中执行如何SQL</title><link href="http://mainframer.github.io/articles/JCL%E4%B8%AD%E6%89%A7%E8%A1%8C%E5%A6%82%E4%BD%95SQL.html" rel="alternate"></link><updated>2013-03-24T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2013-03-24:articles/JCL中执行如何SQL.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;平常我们用第三方软件来对DB2操作，比如eclipse,比如DBedit,又或者是mainframe上面的软件，如&lt;code&gt;Filemanager&lt;/code&gt;,&lt;code&gt;SPUFI&lt;/code&gt;等。
那怎么在JCL里面运行SQL呢？答案是利用&lt;code&gt;IKJEFT01&lt;/code&gt;。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;***************************************************************&lt;/span&gt;               
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="ss"&gt;UNLOAD&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;   &lt;span class="n"&gt;unload&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="no"&gt;IKJEFT01&lt;/span&gt; &lt;span class="n"&gt;via&lt;/span&gt; &lt;span class="n"&gt;dynamic&lt;/span&gt; &lt;span class="no"&gt;SQL&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="no"&gt;JCL&lt;/span&gt;  &lt;span class="o"&gt;*&lt;/span&gt;               
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;***************************************************************&lt;/span&gt;               
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;UNLOAD&lt;/span&gt;  &lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IKJEFT01&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DYNAMNBR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;                                        
&lt;span class="o"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;INCLUDE&lt;/span&gt; &lt;span class="no"&gt;MEMBER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;XXXXSRUN&lt;/span&gt;                                          
&lt;span class="sr"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;INCLUDE&lt;/span&gt; &lt;span class="no"&gt;MEMBER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;XXXXLOAD&lt;/span&gt;                                          
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSTSPRT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                                          
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSUDUMP&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                                          
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSPRINT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                                          
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSREC00&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SQL&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OUTPUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                              
&lt;span class="sr"&gt;//&lt;/span&gt;            &lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;NEW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;PASS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DELETE&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;UNIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SYSDA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                                                                                         
&lt;span class="sr"&gt;//&lt;/span&gt;            &lt;span class="no"&gt;SPACE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;CYL&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;RLSE&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;                                         
&lt;span class="sr"&gt;//&lt;/span&gt;            &lt;span class="no"&gt;DCB&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;RECFM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;FB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;BLKSIZE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DSORG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;PS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                                                    
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSIN&lt;/span&gt;    &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="o"&gt;*&lt;/span&gt;                                                                
&lt;span class="no"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="no"&gt;FROM&lt;/span&gt; &lt;span class="no"&gt;ABCD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MYTABLE&lt;/span&gt; &lt;span class="no"&gt;WHERE&lt;/span&gt; &lt;span class="no"&gt;NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;XIAOMING&amp;#39;&lt;/span&gt;                                                                     
&lt;span class="sr"&gt;/*                                                                              &lt;/span&gt;
&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;SYSTSIN&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="o"&gt;*&lt;/span&gt;                                                                
 &lt;span class="no"&gt;DSN&lt;/span&gt; &lt;span class="no"&gt;SYSTEM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;XXXX&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                                                               
 &lt;span class="no"&gt;RUN&lt;/span&gt; &lt;span class="no"&gt;PROG&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;DSNTIAUL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="no"&gt;PLAN&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;DSNTIAUL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;PARM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;SQL&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                                 
&lt;span class="sr"&gt;/*                                                                              &lt;/span&gt;
&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;SYSPUNCH&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                                             
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;         
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;PS: 这里&lt;code&gt;'XXXX'&lt;/code&gt;是指代&lt;code&gt;DB2 subsystem&lt;/code&gt; 
插一句，利用这种JCL的方法的好处是可以在接下去的Step里接着对SQL结果处理，利于自动化。&lt;/p&gt;</summary><category term="IKJEFT01"></category><category term="SQL"></category></entry><entry><title>SYNCSORT将PD格式转换成CSF(FS)格式</title><link href="http://mainframer.github.io/articles/SYNCSORT%E5%B0%86PD%E6%A0%BC%E5%BC%8F%E8%BD%AC%E6%8D%A2%E6%88%90CSF(FS)%E6%A0%BC%E5%BC%8F.html" rel="alternate"></link><updated>2013-03-20T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2013-03-20:articles/SYNCSORT将PD格式转换成CSF(FS)格式.html</id><summary type="html">&lt;p&gt;客户要求看实时报表，可是从数据库导出来的数据却包含如下所示的显示不怎么友好的数据，这时可以用SORT来转换成客户想要的格式。&lt;br /&gt;
转换之前的文件用&lt;code&gt;HEX ON&lt;/code&gt;命令显示如下。可以看出后面三个字段都是PD类型的，并且都占据8位长度。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;VIEW&lt;/span&gt;       &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DFSORT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PDTOCSF&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SORTIN&lt;/span&gt;                   &lt;span class="no"&gt;Columns&lt;/span&gt; &lt;span class="mo"&gt;00001&lt;/span&gt; &lt;span class="mo"&gt;00045&lt;/span&gt; 
&lt;span class="no"&gt;Command&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;HEX&lt;/span&gt; &lt;span class="no"&gt;ON&lt;/span&gt;                                            &lt;span class="no"&gt;Scroll&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;CSR&lt;/span&gt;  
&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;COLS&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;----+----&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;----+----&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;----+----&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;----+----&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;----+&lt;/span&gt;                           
&lt;span class="o"&gt;******&lt;/span&gt; &lt;span class="o"&gt;*****************************&lt;/span&gt; &lt;span class="no"&gt;Top&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="no"&gt;Data&lt;/span&gt; &lt;span class="o"&gt;******************************&lt;/span&gt;
&lt;span class="mo"&gt;000001&lt;/span&gt; &lt;span class="no"&gt;AAAA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20130102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;MD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;     &lt;span class="err"&gt;à&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="err"&gt;é&lt;/span&gt;     &lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; 
       &lt;span class="no"&gt;CCCC6FFFFFFFF6F6DC600001670600512110600705380&lt;/span&gt;
       &lt;span class="mi"&gt;1111&lt;/span&gt;&lt;span class="no"&gt;B20130102B1B44B0000440CB0013100CB0003049C&lt;/span&gt;
&lt;span class="o"&gt;----------------------------------------------------&lt;/span&gt;
&lt;span class="mo"&gt;000002&lt;/span&gt; &lt;span class="no"&gt;BBBB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20130102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;MD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="err"&gt;è&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;&lt;span class="err"&gt;í&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="err"&gt;à&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sc"&gt;?-&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;  
       &lt;span class="no"&gt;CCCC6FFFFFFFF6F6DC600000000600745440604670800&lt;/span&gt;
       &lt;span class="mi"&gt;2222&lt;/span&gt;&lt;span class="no"&gt;B20130102B2B44B0000000CB0147524CB0303743C&lt;/span&gt;
&lt;span class="o"&gt;----------------------------------------------------&lt;/span&gt;
&lt;span class="mo"&gt;000003&lt;/span&gt; &lt;span class="no"&gt;CCCC&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20130102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;MD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;      &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;b?&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;b?&lt;/span&gt; 
       &lt;span class="no"&gt;CCCC6FFFFFFFF6F6DC600031150600516860600516860&lt;/span&gt;
       &lt;span class="mi"&gt;3333&lt;/span&gt;&lt;span class="no"&gt;B20130102B3B44B0011270CB0008026CB0008026C&lt;/span&gt;
&lt;span class="o"&gt;----------------------------------------------------&lt;/span&gt;
&lt;span class="mo"&gt;000004&lt;/span&gt; &lt;span class="no"&gt;DDDD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20130102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;MD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="err"&gt;é&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;&lt;span class="n"&gt;ae?&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="n"&gt;de&lt;/span&gt;  &lt;span class="p"&gt;,&lt;/span&gt;      &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; 
       &lt;span class="no"&gt;CCCC6FFFFFFFF6F6DC600544870600008840600000250&lt;/span&gt;
       &lt;span class="mi"&gt;4444&lt;/span&gt;&lt;span class="no"&gt;B20130102B4B44B0016250DB0000450CB0000700D&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;转换要求：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;每条record的前面19位格式不变。后面三个PD字段中第一个PD字段保留6位小数，第二、三个PD字段保留3位小数；     &lt;/li&gt;
&lt;li&gt;如果是负数，则保留符号'-'，若是正数，省略'+'；     &lt;/li&gt;
&lt;li&gt;如果值是0，也要准确显示；         &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;转换之后的文件如下，可以看出，转换结果完全满足客户对报表的需求。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="no"&gt;VIEW&lt;/span&gt;       &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DFSORT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PDTOCSF&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SORTOUT&lt;/span&gt;                  &lt;span class="no"&gt;Columns&lt;/span&gt; &lt;span class="mo"&gt;00001&lt;/span&gt; &lt;span class="mo"&gt;00072&lt;/span&gt; 
 &lt;span class="no"&gt;Command&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt;                                                  &lt;span class="no"&gt;Scroll&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;CSR&lt;/span&gt;  
 &lt;span class="o"&gt;******&lt;/span&gt; &lt;span class="o"&gt;*****************************&lt;/span&gt; &lt;span class="no"&gt;Top&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="no"&gt;Data&lt;/span&gt; &lt;span class="o"&gt;******************************&lt;/span&gt;
 &lt;span class="mo"&gt;000001&lt;/span&gt; &lt;span class="no"&gt;AAAA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20130102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;MD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;           &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;464700&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;       &lt;span class="mi"&gt;51132110&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;       &lt;span class="mi"&gt;70035034&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;890&lt;/span&gt;
 &lt;span class="mo"&gt;000002&lt;/span&gt; &lt;span class="no"&gt;BBBB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20130102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;MD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;           &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mo"&gt;000000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;      &lt;span class="mi"&gt;174475542&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;440&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;     &lt;span class="mi"&gt;4360730784&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mo"&gt;030&lt;/span&gt;
 &lt;span class="mo"&gt;000003&lt;/span&gt; &lt;span class="no"&gt;CCCC&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20130102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;MD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="mi"&gt;1311&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;217500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;       &lt;span class="mi"&gt;50186082&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;660&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;       &lt;span class="mi"&gt;50186082&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;660&lt;/span&gt;
 &lt;span class="mo"&gt;000004&lt;/span&gt; &lt;span class="no"&gt;DDDD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20130102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;MD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;      &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;51464&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;285700&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;           &lt;span class="mi"&gt;8485&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;           &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;720&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;要实现上面的数据转换，下面是我用到的&lt;em&gt;SORT&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;IBMUSERS&lt;/span&gt; &lt;span class="no"&gt;JOB&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;00000000&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;CLASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;NOTIFY&lt;/span&gt;&lt;span class="o"&gt;=&amp;amp;&lt;/span&gt;&lt;span class="no"&gt;SYSUID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;       
&lt;span class="sr"&gt;//&lt;/span&gt;     &lt;span class="no"&gt;MSGCLASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;TIME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;NOLIMIT&lt;/span&gt;                                       
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORT&lt;/span&gt;  &lt;span class="no"&gt;EXEC&lt;/span&gt;  &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SYNCSORT&lt;/span&gt;                                             
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTIN&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DFSORT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PDTOCSF&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SORTIN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;                
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTOUT&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DFSORT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PDTOCSF&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SORTOUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                   
&lt;span class="sr"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;NEW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;CATLG&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DELETE&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;                              
&lt;span class="sr"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;UNIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SYSDA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                           
&lt;span class="sr"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;SPACE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;CYL&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;RLSE&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;                               
&lt;span class="sr"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;DCB&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;RECFM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;FB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;BLKSIZE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                              
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSOUT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                                              
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSIN&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;                                                        
  &lt;span class="no"&gt;SORT&lt;/span&gt; &lt;span class="no"&gt;FIELDS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;COPY&lt;/span&gt;                                                   
  &lt;span class="no"&gt;INREC&lt;/span&gt; &lt;span class="no"&gt;BUILD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;PD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;EDIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SIIIIIIIIIIT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IIIIII&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;SIGNS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="p"&gt;,,),&lt;/span&gt; 
   &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;PD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;EDIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SIIIIIIIIIIIIIT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;III&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;SIGNS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="p"&gt;,,),&lt;/span&gt;             
   &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;38&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;PD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;EDIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SIIIIIIIIIIIIIT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;III&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;SIGNS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="p"&gt;,,))&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这里面有3点要说明：   &lt;br /&gt;
&lt;strong&gt;第1&lt;/strong&gt;，在SORTOUT里面，&lt;code&gt;DCB=(RECFM=FB,BLKSIZE=0)&lt;/code&gt;不必加LRECL参数，SORT会自动帮你算出来。 &lt;br /&gt;
&lt;strong&gt;第2&lt;/strong&gt;，SIGNS=(,-,,)的解释:  &lt;code&gt;blank for lp, '-' for ln, blank for tp, blank for tn&lt;/code&gt;.   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;leading&lt;/span&gt; &lt;span class="n"&gt;positive&lt;/span&gt;  &lt;span class="n"&gt;sign&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;leading&lt;/span&gt; &lt;span class="n"&gt;negative&lt;/span&gt;  &lt;span class="n"&gt;sign&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ln&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;trailing&lt;/span&gt; &lt;span class="n"&gt;positive&lt;/span&gt; &lt;span class="n"&gt;sign&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="n"&gt;trailing&lt;/span&gt; &lt;span class="n"&gt;negative&lt;/span&gt; &lt;span class="n"&gt;sign&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;第3&lt;/strong&gt;，原则上EDIT语句可以实现任意格式的输出要求。这里小数点前面的那个"T"是用来保证数据为0.000这种值的时候能正常输出，而不会输出blank。&lt;/p&gt;</summary><category term="SYNCSORT"></category></entry><entry><title>Watir给Amazon.cn充礼品卡</title><link href="http://mainframer.github.io/articles/Watir%E7%BB%99Amazon.cn%E5%85%85%E7%A4%BC%E5%93%81%E5%8D%A1.html" rel="alternate"></link><updated>2013-03-19T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2013-03-19:articles/Watir给Amazon.cn充礼品卡.html</id><summary type="html">&lt;p&gt;写个脚本去尝试不花钱给自己的Amazon.cn账号充礼品卡，碰碰运气。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#encoding: UTF-8                                          #添加这一行才可以处理中文&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rubygems&amp;#39;&lt;/span&gt;                                        &lt;span class="c1"&gt;#gem install xxx --no-ri --no-rdoc&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;timeout&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;watir-webdriver&amp;#39;&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;randCharOfLength&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                                 &lt;span class="c1"&gt;#产生随机任意长度的数&lt;/span&gt;
    &lt;span class="n"&gt;chars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;z&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;A&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Z&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;9&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_a&lt;/span&gt;
    &lt;span class="n"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;chars&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chars&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Watir&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Browser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:firefox&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:profile&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;goto&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;https://www.amazon.cn/ap/signin/477-4175358-2686144?_encoding=UTF8&amp;amp;openid.assoc_handle=cnflex&amp;amp;openid.claimed_id=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&amp;amp;openid.identity=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&amp;amp;openid.mode=checkid_setup&amp;amp;openid.ns=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0&amp;amp;openid.ns.pape=http%3A%2F%2Fspecs.openid.net%2Fextensions%2Fpape%2F1.0&amp;amp;openid.pape.max_auth_age=900&amp;amp;openid.return_to=https%3A%2F%2Fwww.amazon.cn%2Fgp%2Fcss%2Fgc%2Fpayment%2Fredeem-gc-balance%2F477-4175358-2686144%3Fie%3DUTF8%26*Version*%3D1%26*entries*%3D0&amp;amp;showRmrMe=1&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text_field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ap_email&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;your_amazon.cn_account&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text_field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ap_password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;your_amazon.cn_password&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ap_signin1a_signin_button_row&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ap_col2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;signInSubmit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;click&lt;/span&gt;
&lt;span class="n"&gt;gift_code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;randCharOfLength&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upcase&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;randCharOfLength&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upcase&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;randCharOfLength&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upcase&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text_field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;gcTextInput&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;gift_code&lt;/span&gt;            &lt;span class="c1"&gt;#礼品卡号的格式为：XXX-XXXXXX-XXXX&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;applytoaccount&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;click&lt;/span&gt; 

&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;gcMMIcon gcMMErrorIcon&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wait_until_present&lt;/span&gt;
 &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;gcMMIcon gcMMErrorIcon&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists?&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
     &lt;span class="n"&gt;gift_code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;randCharOfLength&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upcase&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;randCharOfLength&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upcase&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;randCharOfLength&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upcase&lt;/span&gt;
     &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text_field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;gcTextInput&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;gift_code&lt;/span&gt;       &lt;span class="c1"&gt;#礼品卡号的格式为：XXX-XXXXXX-XXXX&lt;/span&gt;
     &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;applytoaccount&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;click&lt;/span&gt;
     &lt;span class="nb"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;checkbox&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rememberMe&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists?&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; 
        &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text_field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ap_password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;your_amazon.cn_password&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;checkbox&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rememberMe&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;
        &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ap_signin1a_signin_button_row&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ap_col2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;signInSubmit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;click&lt;/span&gt;
        &lt;span class="n"&gt;gift_code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;randCharOfLength&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upcase&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;randCharOfLength&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upcase&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;randCharOfLength&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upcase&lt;/span&gt;
        &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text_field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;gcTextInput&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;gift_code&lt;/span&gt;    &lt;span class="c1"&gt;#礼品卡号的格式为：XXX-XXXXXX-XXXX&lt;/span&gt;
        &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;applytoaccount&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;click&lt;/span&gt; 
        &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;gcMMIcon gcMMErrorIcon&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wait_until_present&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt; 
 &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;代码仅供娱乐参考，切勿用于不当用途。经本人测试，有被封号风险，也有可能摊上法律责任，劝君不要冲动贪小便宜。&lt;/h5&gt;</summary><category term="Watir"></category></entry><entry><title>Watir获得sedo网站上指定后缀域名列表</title><link href="http://mainframer.github.io/articles/Watir%E8%8E%B7%E5%BE%97sedo%E7%BD%91%E7%AB%99%E4%B8%8A%E6%8C%87%E5%AE%9A%E5%90%8E%E7%BC%80%E5%9F%9F%E5%90%8D%E5%88%97%E8%A1%A8.html" rel="alternate"></link><updated>2013-03-12T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2013-03-12:articles/Watir获得sedo网站上指定后缀域名列表.html</id><summary type="html">&lt;p&gt;作为一个’米农‘，sedo.com网站上面的信息很有价值。sedo.com是全球最大的域名交易网站。下面我写的这个脚本是用来取得sedo上面指定后缀(_如.asia)的所有域名列表。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#encoding: UTF-8                                          #添加这一行才可以处理中文&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rubygems&amp;#39;&lt;/span&gt;                                        &lt;span class="c1"&gt;#gem install xxx --no-ri --no-rdoc&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;timeout&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;watir-webdriver&amp;#39;&lt;/span&gt;

&lt;span class="c1"&gt;#b=Watir::Browser.new(:firefox, {:profile =&amp;gt; &amp;#39;default&amp;#39;})&lt;/span&gt;
&lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sedo_asia.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;w:UTF-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;pre_work&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="vg"&gt;$b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Watir&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Browser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="ss"&gt;:ff&lt;/span&gt;
  &lt;span class="vg"&gt;$b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timeouts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;implicit_wait&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;                          &lt;span class="c1"&gt;#默认的等待页面加载30秒若还未加载完成则会跑出timeout异常，这里可以修改成60秒&lt;/span&gt;
  &lt;span class="k"&gt;begin&lt;/span&gt;
  &lt;span class="no"&gt;Timeout&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;timeout_length&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
   &lt;span class="vg"&gt;$b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;goto&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://sedo.com/search/searchresult.php4?tracked=&amp;amp;partnerid=&amp;amp;language=cn&amp;quot;&lt;/span&gt;
   &lt;span class="c1"&gt;#$b.ul(:class,&amp;quot;login&amp;quot;).link(:class,&amp;quot;open&amp;quot;).click   #$b.div(:class,&amp;quot;row&amp;quot;).text_field(:class,&amp;quot;input&amp;quot;).set &amp;quot;your_sedo_username&amp;quot;&lt;/span&gt;
   &lt;span class="c1"&gt;#$b.div(:class,&amp;quot;row&amp;quot;).text_field(:type,&amp;quot;password&amp;quot;).set &amp;quot;your_sedo_password&amp;quot;&lt;/span&gt;
   &lt;span class="c1"&gt;#$b.div(:class,&amp;quot;col2 right&amp;quot;).button(:name,&amp;quot;submit&amp;quot;).click&lt;/span&gt;
   &lt;span class="c1"&gt;#if  $b.span(:id =&amp;gt; &amp;#39;jqs_searchbar_advancedFilter_toggle&amp;#39;).wait_until_present then&lt;/span&gt;
   &lt;span class="vg"&gt;$b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;jqs_searchbar_advancedFilter_toggle&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wait_until_present&lt;/span&gt;  
   &lt;span class="vg"&gt;$b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;jqs_searchbar_advancedFilter_toggle&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;click&lt;/span&gt;            &lt;span class="c1"&gt;#点击展开 ”Advanced search&amp;quot;&lt;/span&gt;
   &lt;span class="vg"&gt;$b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;filterStatus closed left&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wait_until_present&lt;/span&gt;    
   &lt;span class="vg"&gt;$b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;filterStatus closed left&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;click&lt;/span&gt;                    &lt;span class="c1"&gt;#点击展开Extensions&lt;/span&gt;
   &lt;span class="vg"&gt;$b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;checkbox&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;cn&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;                                        &lt;span class="c1"&gt;#勾选.asia选项 &lt;/span&gt;
   &lt;span class="vg"&gt;$b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;btnGnS left jqs_advancedFilter_apply jqs_advancedFilter_apply_button&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wait_until_present&lt;/span&gt;
   &lt;span class="vg"&gt;$b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;btnGnS left jqs_advancedFilter_apply jqs_advancedFilter_apply_button&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;click&lt;/span&gt; &lt;span class="c1"&gt;#点击&amp;#39;Apply&amp;#39;按钮&lt;/span&gt;
   &lt;span class="c1"&gt;#table = $b.table(:id,&amp;quot;resultListTable&amp;quot;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;rescue&lt;/span&gt; &lt;span class="no"&gt;Timeout&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Error&lt;/span&gt;
    &lt;span class="nb"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="k"&gt;retry&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
 &lt;span class="nb"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="vg"&gt;$b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;pageLimitSelection&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;200&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                &lt;span class="c1"&gt;#下拉框选择值  每页200个&lt;/span&gt;
 &lt;span class="nb"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="vg"&gt;$b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;MaxPage&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wait_until_present&lt;/span&gt;                           &lt;span class="c1"&gt;#等到此控件出现再接着执行下面代码&lt;/span&gt;
 &lt;span class="vg"&gt;$maxpage&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="vg"&gt;$b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;MaxPage&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;                               &lt;span class="c1"&gt;#取得一共有多少页&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;pre_work&lt;/span&gt;

&lt;span class="nb"&gt;p&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="vg"&gt;$maxpage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;==========Processing Page&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_s&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;===============&amp;quot;&lt;/span&gt; 
  &lt;span class="vg"&gt;$b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;resultList&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;resultListTable&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wait_until_present&lt;/span&gt;  
  &lt;span class="nb"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;purge&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;p&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="c1"&gt;#exec(&amp;#39;purge&amp;#39;) if p%60==0                #每200页执行一次Purge释放不活动内存 exec命令会运行完后当前的ruby进程也被迫结束了，用system替代&lt;/span&gt;
  &lt;span class="vg"&gt;$b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;resultList&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;domainField jqs_tbl_domain&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="c1"&gt;#遍历当前页面找到所有的td，可以用这个方法遍历任意的tr,link什么的，记得用复数trs,links&lt;/span&gt;
   &lt;span class="k"&gt;begin&lt;/span&gt;    
   &lt;span class="no"&gt;Timeout&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;timeout_length&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;
   &lt;span class="k"&gt;end&lt;/span&gt;  
  &lt;span class="k"&gt;rescue&lt;/span&gt; &lt;span class="no"&gt;Timeout&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Error&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Got stucked in Processing page element &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;
    &lt;span class="nb"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="k"&gt;retry&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;    &lt;span class="c1"&gt;#begin&lt;/span&gt;
 &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="c1"&gt;#$b.tds.each do |i|    &lt;/span&gt;
 &lt;span class="vg"&gt;$b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;arrowNextPage&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wait_until_present&lt;/span&gt;                     
 &lt;span class="c1"&gt;#$b.text_field(:name, &amp;quot;page&amp;quot;).set(p+1)&lt;/span&gt;
 &lt;span class="vg"&gt;$b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;arrowNextPage&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;click&lt;/span&gt;                                   &lt;span class="c1"&gt;#点击下一页&lt;/span&gt;
 &lt;span class="nb"&gt;p&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;p&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
 &lt;span class="c1"&gt;#$b.wait_until {$b.input(:class, &amp;#39;pageIndex&amp;#39;).value ==p.to_s}&lt;/span&gt;
 &lt;span class="vg"&gt;$b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wait_until&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="vg"&gt;$b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pageIndex&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="nb"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_s&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;  &lt;span class="c1"&gt;#直到下一页变成p+1 默认30秒超时报错，用timeout参数修改&lt;/span&gt;
 &lt;span class="c1"&gt;#$b.table(:class, &amp;#39;searchResultNavi&amp;#39;).when_present(60)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Watir"></category><category term="域名"></category></entry><entry><title>Rexx调用Skeleton JCL提交job的例子</title><link href="http://mainframer.github.io/articles/Rexx%E8%B0%83%E7%94%A8Skeleton%20JCL%E6%8F%90%E4%BA%A4job%E7%9A%84%E4%BE%8B%E5%AD%90.html" rel="alternate"></link><updated>2013-02-22T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2013-02-22:articles/Rexx调用Skeleton JCL提交job的例子.html</id><summary type="html">&lt;h4&gt;这个例子一共包含3个部分&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Rexx主程序&lt;/strong&gt;：&lt;code&gt;IBMUSER.REXX.EXEC(MYSKELE)&lt;/code&gt; &lt;br /&gt;
&lt;strong&gt;带参数的sekleton JCL&lt;/strong&gt;：&lt;code&gt;IBMUSER.REXX.SKELL(JCLSKEL)&lt;/code&gt;&lt;br /&gt;
&lt;strong&gt;最终生成的Dynamic JCL&lt;/strong&gt;：&lt;code&gt;IBMUSER.DYNAM.JCL(SUBJCL)&lt;/code&gt;  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="no"&gt;File&lt;/span&gt;  &lt;span class="no"&gt;Edit&lt;/span&gt;  &lt;span class="no"&gt;Edit_Settings&lt;/span&gt;  &lt;span class="no"&gt;Menu&lt;/span&gt;  &lt;span class="no"&gt;Utilities&lt;/span&gt;  &lt;span class="no"&gt;Compilers&lt;/span&gt;  &lt;span class="no"&gt;Test&lt;/span&gt;  &lt;span class="no"&gt;Help&lt;/span&gt;            

&lt;span class="no"&gt;VIEW&lt;/span&gt;       &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;REXX&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SKELL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;JCLSKEL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mo"&gt;01&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mo"&gt;06&lt;/span&gt;             &lt;span class="no"&gt;Columns&lt;/span&gt; &lt;span class="mo"&gt;00001&lt;/span&gt; &lt;span class="mo"&gt;00072&lt;/span&gt; 
&lt;span class="no"&gt;Command&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt;                                                  &lt;span class="no"&gt;Scroll&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;CSR&lt;/span&gt;  
&lt;span class="o"&gt;******&lt;/span&gt; &lt;span class="o"&gt;*****************************&lt;/span&gt; &lt;span class="no"&gt;Top&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="no"&gt;Data&lt;/span&gt; &lt;span class="o"&gt;******************************&lt;/span&gt;
&lt;span class="mo"&gt;000001&lt;/span&gt; &lt;span class="o"&gt;//&amp;amp;&lt;/span&gt;&lt;span class="no"&gt;JOBNAME&lt;/span&gt; &lt;span class="no"&gt;JOB&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;000000000000000000CMP&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                 
&lt;span class="mo"&gt;000002&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="no"&gt;CLASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;NOTIFY&lt;/span&gt;&lt;span class="o"&gt;=&amp;amp;&lt;/span&gt;&lt;span class="no"&gt;USER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;MSGCLASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;                                      
&lt;span class="mo"&gt;000003&lt;/span&gt; &lt;span class="o"&gt;//*********************************************************************&lt;/span&gt; 
&lt;span class="mo"&gt;000004&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="no"&gt;SEL&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="no"&gt;IND&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Y&lt;/span&gt;                                                           
&lt;span class="mo"&gt;000005&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;STEP000&lt;/span&gt;  &lt;span class="no"&gt;EXEC&lt;/span&gt;  &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SYNCSORT&lt;/span&gt;                                           
&lt;span class="mo"&gt;000006&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTIN&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&amp;amp;&lt;/span&gt;&lt;span class="no"&gt;FILE1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;                                      
&lt;span class="mo"&gt;000007&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTOUT&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&amp;amp;&lt;/span&gt;&lt;span class="no"&gt;FILE2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                              
&lt;span class="mo"&gt;00000&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;NEW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;CATLG&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DELETE&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;                                 
&lt;span class="mo"&gt;00000&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;UNIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SYSDA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                              
&lt;span class="mo"&gt;000010&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;SPACE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;CYL&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;RLSE&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;                                  
&lt;span class="mo"&gt;000011&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;DCB&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SYS1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MODEL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;RECFM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;FB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;LRECL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DSORG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;PS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;              
&lt;span class="mo"&gt;000012&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSIN&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;                                                           
&lt;span class="mo"&gt;000013&lt;/span&gt;   &lt;span class="no"&gt;SORT&lt;/span&gt; &lt;span class="no"&gt;FIELDS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;CH&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                                                
&lt;span class="mo"&gt;000014&lt;/span&gt; &lt;span class="o"&gt;/*&lt;/span&gt;                                                                      
&lt;span class="mo"&gt;000015&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="no"&gt;ENDSEL&lt;/span&gt;                                                                 
&lt;span class="mo"&gt;000016&lt;/span&gt; &lt;span class="o"&gt;//*&lt;/span&gt;                                                                     
&lt;span class="o"&gt;******&lt;/span&gt; &lt;span class="o"&gt;****************************&lt;/span&gt; &lt;span class="no"&gt;Bottom&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="no"&gt;Data&lt;/span&gt; &lt;span class="o"&gt;****************************&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注意上面的&lt;code&gt;)SEL&lt;/code&gt;和&lt;code&gt;)ENDSEL&lt;/code&gt;表示skeleton的起始, 并且有一个选择判断条件&lt;code&gt;&amp;amp;IND&lt;/code&gt;，当且仅当Rexx中传过来的IND的值是Y时，才拼装&lt;code&gt;)SEL&lt;/code&gt;和&lt;code&gt;)ENDSEL&lt;/code&gt;之间的内容。在上面的例子中，如果IND=N，那么组装出来的JCL为如下所示，显然会报错。 &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="no"&gt;File&lt;/span&gt;  &lt;span class="no"&gt;Edit&lt;/span&gt;  &lt;span class="no"&gt;Edit_Settings&lt;/span&gt;  &lt;span class="no"&gt;Menu&lt;/span&gt;  &lt;span class="no"&gt;Utilities&lt;/span&gt;  &lt;span class="no"&gt;Compilers&lt;/span&gt;  &lt;span class="no"&gt;Test&lt;/span&gt;  &lt;span class="no"&gt;Help&lt;/span&gt;            

&lt;span class="no"&gt;VIEW&lt;/span&gt;       &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DYNAM&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;JCL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SUBJCL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mo"&gt;01&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;               &lt;span class="no"&gt;Columns&lt;/span&gt; &lt;span class="mo"&gt;00001&lt;/span&gt; &lt;span class="mo"&gt;00072&lt;/span&gt; 
&lt;span class="no"&gt;Command&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt;                                                  &lt;span class="no"&gt;Scroll&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;CSR&lt;/span&gt;                                                   
&lt;span class="o"&gt;******&lt;/span&gt; &lt;span class="o"&gt;*****************************&lt;/span&gt; &lt;span class="no"&gt;Top&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="no"&gt;Data&lt;/span&gt; &lt;span class="o"&gt;******************************&lt;/span&gt;
&lt;span class="mo"&gt;000001&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;IBMUSERJ&lt;/span&gt; &lt;span class="no"&gt;JOB&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;000000000000000000CMP&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                 
&lt;span class="mo"&gt;000002&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="no"&gt;CLASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;NOTIFY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;MSGCLASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;                                    
&lt;span class="mo"&gt;000003&lt;/span&gt; &lt;span class="o"&gt;//*********************************************************************&lt;/span&gt; 
&lt;span class="mo"&gt;000004&lt;/span&gt; &lt;span class="o"&gt;//*&lt;/span&gt;                                                                     
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;当IND=Y的时候，组装出来的JCL如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="no"&gt;File&lt;/span&gt;  &lt;span class="no"&gt;Edit&lt;/span&gt;  &lt;span class="no"&gt;Edit_Settings&lt;/span&gt;  &lt;span class="no"&gt;Menu&lt;/span&gt;  &lt;span class="no"&gt;Utilities&lt;/span&gt;  &lt;span class="no"&gt;Compilers&lt;/span&gt;  &lt;span class="no"&gt;Test&lt;/span&gt;  &lt;span class="no"&gt;Help&lt;/span&gt;            

&lt;span class="no"&gt;VIEW&lt;/span&gt;       &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DYNAM&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;JCL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SUBJCL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mo"&gt;01&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;               &lt;span class="no"&gt;Columns&lt;/span&gt; &lt;span class="mo"&gt;00001&lt;/span&gt; &lt;span class="mo"&gt;00072&lt;/span&gt; 
&lt;span class="no"&gt;Command&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt;                                                  &lt;span class="no"&gt;Scroll&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;CSR&lt;/span&gt;  
&lt;span class="o"&gt;******&lt;/span&gt; &lt;span class="o"&gt;*****************************&lt;/span&gt; &lt;span class="no"&gt;Top&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="no"&gt;Data&lt;/span&gt; &lt;span class="o"&gt;******************************&lt;/span&gt;
&lt;span class="mo"&gt;000001&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;IBMUSERJ&lt;/span&gt; &lt;span class="no"&gt;JOB&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;000000000000000000CMP&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                 
&lt;span class="mo"&gt;000002&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="no"&gt;CLASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;NOTIFY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;MSGCLASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;                                    
&lt;span class="mo"&gt;000003&lt;/span&gt; &lt;span class="o"&gt;//*********************************************************************&lt;/span&gt; 
&lt;span class="mo"&gt;000004&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;STEP000&lt;/span&gt;  &lt;span class="no"&gt;EXEC&lt;/span&gt;  &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SYNCSORT&lt;/span&gt;                                           
&lt;span class="mo"&gt;000005&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTIN&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SORTIN&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FILE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;                    
&lt;span class="mo"&gt;000006&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTOUT&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SORTOUT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FILE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                        
&lt;span class="mo"&gt;000007&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;NEW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;CATLG&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DELETE&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;                                 
&lt;span class="mo"&gt;00000&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;UNIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SYSDA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                              
&lt;span class="mo"&gt;00000&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;SPACE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;CYL&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;RLSE&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;                                  
&lt;span class="mo"&gt;000010&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;DCB&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SYS1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MODEL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;RECFM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;FB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;LRECL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DSORG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;PS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;              
&lt;span class="mo"&gt;000011&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSIN&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;                                                           
&lt;span class="mo"&gt;000012&lt;/span&gt;   &lt;span class="no"&gt;SORT&lt;/span&gt; &lt;span class="no"&gt;FIELDS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;CH&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                                                
&lt;span class="mo"&gt;000013&lt;/span&gt; &lt;span class="o"&gt;/*&lt;/span&gt;                                                                      
&lt;span class="mo"&gt;000014&lt;/span&gt; &lt;span class="o"&gt;//*&lt;/span&gt;                                                                     
&lt;span class="o"&gt;******&lt;/span&gt; &lt;span class="o"&gt;****************************&lt;/span&gt; &lt;span class="no"&gt;Bottom&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="no"&gt;Data&lt;/span&gt; &lt;span class="o"&gt;****************************&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;最后，只需执行TSO命令: &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;TSO MYSKELE&lt;/p&gt;
&lt;p&gt;就可以看到job成功submit,可以去SDSF里面查看job运行状况。&lt;/p&gt;
&lt;p&gt;JOB IBMUSERJ(J0210531) SUBMITTED                 &lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="z/OS"></category><category term="rexx"></category><category term="ISPF Dialog"></category></entry><entry><title>ISPF Dialog 开发知识点</title><link href="http://mainframer.github.io/articles/ISPF%20Dialog%20%E5%BC%80%E5%8F%91%E7%9F%A5%E8%AF%86%E7%82%B9.html" rel="alternate"></link><updated>2013-02-12T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2013-02-12:articles/ISPF Dialog 开发知识点.html</id><summary type="html">&lt;p&gt;需要用ISPF来开发带界面的自动化工具，从0开始。记下些很有用的知识点：   &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;执行命令&lt;code&gt;Panelid&lt;/code&gt;可以得到当前ISPF panel的名字    &lt;/li&gt;
&lt;li&gt;执行&lt;code&gt;7.2&lt;/code&gt;这个命令输入panel名字，可以用来刷新你新写的panel，使改 动动态生效，这样就不需要重启TN3270 terminal达到测试panel改动的目的  &lt;/li&gt;
&lt;li&gt;ISPF中用&lt;code&gt;option 7.3&lt;/code&gt;可以查看&lt;code&gt;Z&lt;/code&gt;开头ISPF系统预留的变量     &lt;/li&gt;
&lt;li&gt;执行命令&lt;code&gt;3.9&lt;/code&gt;查看ISPF所有可用的command    &lt;/li&gt;
&lt;li&gt;知道任意一个panel的名字，如何得到其定义的路径？这里是很好的方法&lt;/li&gt;
&lt;li&gt;To assign a null value or blank value to a dialog variable, use the system variable &amp;amp;Z.&lt;br /&gt;
&lt;code&gt;)SET D = &amp;amp;Z&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;NOTIFY=&amp;amp;&amp;amp;SYSUID&lt;/code&gt;，which generates the JCL &lt;code&gt;NOTIFY=&amp;amp;SYSUID&lt;/code&gt;,Similarly, &amp;amp;&amp;amp; in a DSN becomes &lt;code&gt;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&lt;/code&gt; in a skel.&lt;/li&gt;
&lt;li&gt;知道任意一个panel的名字，如何得到其定义的路径？这里是很好的方法：   &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;1).&lt;/em&gt;  turn on PANELID to see the panel names   &lt;br /&gt;
&lt;em&gt;2).&lt;/em&gt;  from the ISPF primary option menu,navigate to your target panel,selecting one menu item at a time. Write down the panel names. &lt;br /&gt;
&lt;em&gt;3).&lt;/em&gt;  When you get to your target panel,issue TSO ISRDDN  (like &lt;code&gt;TSO ISRDDN CMNLIST0&lt;/code&gt;)&lt;br /&gt;
&lt;em&gt;4).&lt;/em&gt;  In the &lt;code&gt;ISRDDN&lt;/code&gt; panel, type &lt;code&gt;MEMBER&lt;/code&gt; my_target where my_target is the name of the panel you are looking for. Press Enter. &lt;br /&gt;
&lt;em&gt;5).&lt;/em&gt;  It will display the datasets that include that member.   &lt;br /&gt;
&lt;em&gt;6).&lt;/em&gt;  Browse to see what each panel does.   &lt;/p&gt;</summary><category term="ISPF Dialog"></category><category term="Panelid"></category><category term="ISRDDN"></category></entry><entry><title>Octopress写博客常用语法总结</title><link href="http://mainframer.github.io/articles/Octopress%E5%86%99%E5%8D%9A%E5%AE%A2%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95%E6%80%BB%E7%BB%93.html" rel="alternate"></link><updated>2013-01-18T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2013-01-18:articles/Octopress写博客常用语法总结.html</id><summary type="html">&lt;p&gt;自从博客从&lt;code&gt;Wordpress&lt;/code&gt;迁徙到&lt;code&gt;Octopress&lt;/code&gt;来，也有一段时间了。该是时候总结一下常用的语法了。  &lt;/p&gt;
&lt;h4&gt;插入图片&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;![图片描述](图片地址) 
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;插入链接&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="err"&gt;链接描述&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="x"&gt;(链接地址)  &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;插入代码&lt;/h4&gt;
&lt;h5&gt;方法一&lt;/h5&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/octopress_syntax_2.png" /&gt;     &lt;/p&gt;
&lt;h5&gt;方法二&lt;/h5&gt;
&lt;p&gt;用3个反引号括起来&lt;/p&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/octopress_syntax_3.png" /&gt;       &lt;/p&gt;
&lt;h4&gt;引用的用法&lt;/h4&gt;
&lt;p&gt;用&lt;em&gt;blockquote&lt;/em&gt;关键字&lt;br /&gt;
&lt;img alt="1" src="./../images/octopress_syntax_1.png" /&gt;   &lt;/p&gt;
&lt;p&gt;引用的效果如下： &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Heroes come and go,but legends are forever
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;特殊反白显示&lt;/h4&gt;
&lt;p&gt;用反单引号括起来即可，比如&lt;code&gt;Octopress&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;`Octopress`
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;显示“点击阅读全文”&lt;/h4&gt;
&lt;p&gt;Step01: 在_config.yml里面设置如下：excerpt_link: "点击阅读全文 &amp;rarr;"&lt;br /&gt;
效果如下：   &lt;/p&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/octopress_syntax.png" /&gt;   &lt;/p&gt;
&lt;p&gt;就先说这些octopress语法，剩下的基本就是跟Markdown语法相关的了，不写在这里。&lt;/p&gt;</summary><category term="Octopress"></category></entry><entry><title>IBM DebugTool中巧用GOTO调试程序</title><link href="http://mainframer.github.io/articles/IBM%20DebugTool%E4%B8%AD%E5%B7%A7%E7%94%A8GOTO%E8%B0%83%E8%AF%95%E7%A8%8B%E5%BA%8F.html" rel="alternate"></link><updated>2013-01-04T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2013-01-04:articles/IBM DebugTool中巧用GOTO调试程序.html</id><summary type="html">&lt;p&gt;最近接触&lt;code&gt;IBM DebugTool&lt;/code&gt;比较多，再说一个在mainframe上面调试COBOL或者PL/I程序的技巧吧。 &lt;br /&gt;
经常在用&lt;code&gt;IBM DebugTool&lt;/code&gt;或者DTCN调试程序的时候，造测试数据很不容易。如果调试过程中发现这次数据没有造成功，我们没有必要每次都退出全部程序重新造数据，可以巧妙地利用“GOTO”语句，随心所欲地在程序里面跳转。     &lt;br /&gt;
比如下面这一个程序段，在调试过程中我们可以在Call黑盒子程序&lt;code&gt;BLACKBOX&lt;/code&gt;的前后都设置一个断点，即9178行以及9202行都设置一个断点，如果我们发现程序跑到了9202行但是返回码不是我们想要的结果，那么运行&lt;code&gt;“GOTO 9178”&lt;/code&gt; 即可重新回到Call黑盒子之前，无限反复尝试，重新造数据，直到成功！  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="ss"&gt;SOURCE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;TESTPGM1&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;----+----&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;----+----&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;----+----&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;----+----&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="ss"&gt;LINE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;9178&lt;/span&gt; &lt;span class="no"&gt;OF&lt;/span&gt; &lt;span class="mi"&gt;15895&lt;/span&gt;
&lt;span class="mo"&gt;0020&lt;/span&gt;  &lt;span class="mo"&gt;01&lt;/span&gt; &lt;span class="no"&gt;WS&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;FIELDS&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;0021&lt;/span&gt;  &lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;WS&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;CALLED&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;PGM&lt;/span&gt;            &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;VALUE&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;BLACKBOX&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;0022&lt;/span&gt;  &lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;WS&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;RETURN&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;CD&lt;/span&gt;             &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mo"&gt;04&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;VALUE&lt;/span&gt; &lt;span class="no"&gt;SPACES&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;0023&lt;/span&gt;  &lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;WS&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;RETURN&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;MSG&lt;/span&gt;            &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;VALUE&lt;/span&gt; &lt;span class="no"&gt;SPACES&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
  &lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="mi"&gt;9178&lt;/span&gt; &lt;span class="no"&gt;INITIALIZE&lt;/span&gt; &lt;span class="no"&gt;COMMAREA1&lt;/span&gt;                        
&lt;span class="mi"&gt;9179&lt;/span&gt; &lt;span class="no"&gt;MOVE&lt;/span&gt; &lt;span class="mi"&gt;4500&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;     &lt;span class="no"&gt;TO&lt;/span&gt; &lt;span class="no"&gt;WAGE&lt;/span&gt; &lt;span class="no"&gt;OF&lt;/span&gt; &lt;span class="no"&gt;COMMAREA1&lt;/span&gt;
&lt;span class="mi"&gt;9180&lt;/span&gt; &lt;span class="no"&gt;MOVE&lt;/span&gt; &lt;span class="no"&gt;TODAYS&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;DATE&lt;/span&gt; &lt;span class="no"&gt;TO&lt;/span&gt; &lt;span class="no"&gt;ENROLL&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;DATE&lt;/span&gt; &lt;span class="no"&gt;OF&lt;/span&gt; &lt;span class="no"&gt;COMMAREA1&lt;/span&gt;
&lt;span class="mi"&gt;9181&lt;/span&gt; &lt;span class="no"&gt;SET&lt;/span&gt;  &lt;span class="no"&gt;WS&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;CALLED&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;PTR&lt;/span&gt;    &lt;span class="no"&gt;TO&lt;/span&gt; &lt;span class="no"&gt;ADDRESS&lt;/span&gt;  &lt;span class="no"&gt;OF&lt;/span&gt; &lt;span class="no"&gt;COMMAREA1&lt;/span&gt;
&lt;span class="mi"&gt;9182&lt;/span&gt; &lt;span class="no"&gt;CALL&lt;/span&gt; &lt;span class="no"&gt;WS&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;CALLED&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;PGM&lt;/span&gt;        &lt;span class="no"&gt;USING&lt;/span&gt; &lt;span class="no"&gt;WS&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;CALLED&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;PTR&lt;/span&gt;  
&lt;span class="mi"&gt;9183&lt;/span&gt; &lt;span class="no"&gt;ON&lt;/span&gt; &lt;span class="no"&gt;EXCEPTION&lt;/span&gt;                                         
&lt;span class="mi"&gt;9184&lt;/span&gt;   &lt;span class="no"&gt;SET&lt;/span&gt;  &lt;span class="no"&gt;CALLED&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;UNSUCCESSFUL&lt;/span&gt;   &lt;span class="no"&gt;TO&lt;/span&gt; &lt;span class="no"&gt;TRUE&lt;/span&gt;            
&lt;span class="mi"&gt;9185&lt;/span&gt;   &lt;span class="no"&gt;MOVE&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ERR1&amp;#39;&lt;/span&gt;                &lt;span class="no"&gt;TO&lt;/span&gt; &lt;span class="no"&gt;RETURN&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;CD&lt;/span&gt; 
&lt;span class="mi"&gt;9186&lt;/span&gt;   &lt;span class="no"&gt;MOVE&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;CALL FAILED - EXCEPTION OCCURED&amp;#39;&lt;/span&gt;   
&lt;span class="mi"&gt;9187&lt;/span&gt;                              &lt;span class="no"&gt;TO&lt;/span&gt; &lt;span class="no"&gt;WS&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;RETURN&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;MSG&lt;/span&gt;
&lt;span class="mi"&gt;9188&lt;/span&gt; &lt;span class="no"&gt;PERFORM&lt;/span&gt; &lt;span class="no"&gt;A9999&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;TERMINATION&lt;/span&gt;                           
&lt;span class="mi"&gt;9189&lt;/span&gt;         &lt;span class="no"&gt;THRU&lt;/span&gt; &lt;span class="no"&gt;A9999&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;EXIT&lt;/span&gt;   
&lt;span class="mi"&gt;9200&lt;/span&gt; &lt;span class="k"&gt;END&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;CALL&lt;/span&gt;                   
&lt;span class="mi"&gt;9201&lt;/span&gt; 
&lt;span class="mi"&gt;9202&lt;/span&gt; &lt;span class="no"&gt;IF&lt;/span&gt; &lt;span class="no"&gt;RTN&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;CODE&lt;/span&gt; &lt;span class="no"&gt;OF&lt;/span&gt; &lt;span class="no"&gt;COMMAREA1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;    &amp;#39;&lt;/span&gt;
  &lt;span class="o"&gt;.&lt;/span&gt;
  &lt;span class="o"&gt;.&lt;/span&gt;
  &lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;用这种&lt;code&gt;“GOTO”&lt;/code&gt;的方法，同样也可以用来解决F2单步执行不小心按多了错过了代码但是还想退回去的情况，可以试试~&lt;/p&gt;</summary><category term="Debug Tool"></category><category term="GOTO"></category></entry><entry><title>IBM DebugTool的Source Identification Panel</title><link href="http://mainframer.github.io/articles/IBM%20DebugTool%E7%9A%84Source%20Identification%20Panel.html" rel="alternate"></link><updated>2012-12-26T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-12-26:articles/IBM DebugTool的Source Identification Panel.html</id><summary type="html">&lt;p&gt;IBM DebugTool，在debug过程中可以按PF4键，或者输入命令:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SOURCE
or 
LIST
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这时就会显示&lt;code&gt;Source Identification Panel&lt;/code&gt;面板，在这里即可得知您当前正在debug的所有程序(Compile Unit)的详细路径。知道了它们都是从哪一个&lt;code&gt;loadlib&lt;/code&gt;取到的,这确实对调试很有帮助。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;                 &lt;span class="no"&gt;Source&lt;/span&gt; &lt;span class="no"&gt;Identification&lt;/span&gt; &lt;span class="no"&gt;Panel&lt;/span&gt;                                 
&lt;span class="no"&gt;Command&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt;                                                                  

&lt;span class="no"&gt;Compile&lt;/span&gt; &lt;span class="no"&gt;Unit&lt;/span&gt;              &lt;span class="no"&gt;Listing&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;Source&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;                          &lt;span class="no"&gt;Display&lt;/span&gt;
&lt;span class="o"&gt;-------------------------&lt;/span&gt; &lt;span class="o"&gt;--------------------------------------------&lt;/span&gt; &lt;span class="o"&gt;-------&lt;/span&gt;
&lt;span class="no"&gt;TESTPGM1&lt;/span&gt;                   &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOAD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LIB1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;TETPGM1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                &lt;span class="n"&gt;Y&lt;/span&gt;  
&lt;span class="no"&gt;TESTPGM2&lt;/span&gt;                   &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOAD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LIB2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;TETPGM2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                &lt;span class="n"&gt;Y&lt;/span&gt; 
&lt;span class="no"&gt;TESTPGM3&lt;/span&gt;                   &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOAD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LIB3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;TETPGM3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                &lt;span class="n"&gt;Y&lt;/span&gt;     

&lt;span class="no"&gt;Enter&lt;/span&gt;  &lt;span class="k"&gt;END&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;QUIT&lt;/span&gt;    &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;current&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt; &lt;span class="n"&gt;saved&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;                     
       &lt;span class="no"&gt;CANCEL&lt;/span&gt;      &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;without&lt;/span&gt; &lt;span class="n"&gt;current&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt; &lt;span class="n"&gt;saved&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;     
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;就像上面这样，你一眼就可以知道你当前调试的&lt;em&gt;TESTPGM1&lt;/em&gt;这个程序是从&lt;code&gt;IBMUSER.TEST.LOAD.LIB1&lt;/code&gt;这个&lt;em&gt;loadlib&lt;/em&gt;里面取到的，还有&lt;em&gt;TESTPGM2&lt;/em&gt;，&lt;em&gt;TESTPGM3&lt;/em&gt;也都可以知道它们是从哪里取到的，免得调试了半天发现版本不对那可就不好了！&lt;/p&gt;</summary><category term="Debug Tool"></category></entry><entry><title>PL/I和COBOL如何取得当天的日期</title><link href="http://mainframer.github.io/articles/PLI%E5%92%8CCOBOL%E5%A6%82%E4%BD%95%E5%8F%96%E5%BE%97%E5%BD%93%E5%A4%A9%E7%9A%84%E6%97%A5%E6%9C%9F.html" rel="alternate"></link><updated>2012-12-10T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-12-10:articles/PLI和COBOL如何取得当天的日期.html</id><summary type="html">&lt;p&gt;在Mainframe上做开发会经常遇到用PL/I或者COBOL取得当天的日期，对于PL/I，一般的公司都采取如下的做法：  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;DCL&lt;/span&gt; &lt;span class="no"&gt;PIC_TODAY&lt;/span&gt;            &lt;span class="no"&gt;PIC&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;999999&amp;#39;&lt;/span&gt; &lt;span class="no"&gt;INIT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="no"&gt;PIC_TODAY&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;DATE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="no"&gt;IF&lt;/span&gt; &lt;span class="no"&gt;SUBSTR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;DATE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;50&amp;#39;&lt;/span&gt;                
  &lt;span class="no"&gt;THEN&lt;/span&gt; &lt;span class="no"&gt;TODAYS_DATE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;19000000&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="no"&gt;PIC_TODAY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="no"&gt;ELSE&lt;/span&gt; &lt;span class="no"&gt;TODAYS_DATE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20000000&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="no"&gt;PIC_TODAY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;我所在的公司也是这种写法来获得&lt;code&gt;YYYYMMDD&lt;/code&gt;格式的当日日期，很明显这种写法代码的寿命只有几十年了，相比之下COBOL获得&lt;code&gt;YYYYMMDD&lt;/code&gt;格式的当日日期就显得方便得多，一个&lt;code&gt;ACCEPT&lt;/code&gt;语句即可:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;WORKING&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;STORAGE&lt;/span&gt; &lt;span class="no"&gt;SECTION&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;01&lt;/span&gt; &lt;span class="no"&gt;TODAYS&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;DATE&lt;/span&gt;                          &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="no"&gt;PROCEDURE&lt;/span&gt; &lt;span class="no"&gt;DIVISION&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="no"&gt;ACCEPT&lt;/span&gt; &lt;span class="no"&gt;TODAYS&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;DATE&lt;/span&gt; &lt;span class="no"&gt;FROM&lt;/span&gt; &lt;span class="no"&gt;DATE&lt;/span&gt; &lt;span class="no"&gt;YYYYMMDD&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="PLI"></category><category term="COBOL"></category></entry><entry><title>COBOL程序编译报错GYDS1145-S</title><link href="http://mainframer.github.io/articles/COBOL%E7%A8%8B%E5%BA%8F%E7%BC%96%E8%AF%91%E6%8A%A5%E9%94%99GYDS1145-S.html" rel="alternate"></link><updated>2012-11-24T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-11-24:articles/COBOL程序编译报错GYDS1145-S.html</id><summary type="html">&lt;p&gt;今天编译一个COBOL老程序的时候报错：&lt;code&gt;IGYDS1145-S&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;IGYDS1145-S More than 18 digit positions were specified in a "PICTURE" string for a numeric or numeric edited item.&lt;br /&gt;
 A "PICTURE" string of "S9(18)" was assumed.           &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;原因是老的编译器不支持超过18位的长度变量，但是新的编译器支持。这个帖子里有讨论得更多。
&lt;a href="http://ibmmainframes.com/post-9087.html"&gt;http://ibmmainframes.com/post-9087.html&lt;/a&gt;   &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;COBOL Compiler restricts me defining a PIC 9() variable not more than of size 18 (Including the decimal positions)&lt;br /&gt;
The new Enterprise COBOL for z/OS supports upto 31 digits. If you have this, add ARITH(EXTEND) compiler option.   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;解决办法是添加编译参数扩展长度: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;COMPILE&lt;/span&gt; &lt;span class="ss"&gt;PARMS&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;     &lt;span class="no"&gt;ARITH&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;EXTEND&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                                                           
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;或者也可以在代码里面体现:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;CBL&lt;/span&gt; &lt;span class="no"&gt;ARITH&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;EXTEND&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                                      
&lt;span class="no"&gt;IDENTIFICATION&lt;/span&gt; &lt;span class="no"&gt;DIVISION&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;</summary><category term="COBOL"></category><category term="GYDS1145-S"></category><category term="ARITH(EXTEND)"></category></entry><entry><title>Mainframe上随时查看任意库代码Rexx实现</title><link href="http://mainframer.github.io/articles/Mainframe%E4%B8%8A%E9%9A%8F%E6%97%B6%E6%9F%A5%E7%9C%8B%E4%BB%BB%E6%84%8F%E5%BA%93%E4%BB%A3%E7%A0%81Rexx%E5%AE%9E%E7%8E%B0.html" rel="alternate"></link><updated>2012-11-12T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-11-12:articles/Mainframe上随时查看任意库代码Rexx实现.html</id><summary type="html">&lt;p&gt;Mainframe上面工作经常需要临时查看&lt;em&gt;Production&lt;/em&gt;代码库当中的代码，又不希望输入长长的库名称。可以用REXX写一个&lt;em&gt;Retrieve&lt;/em&gt;功能的脚本，放在
&lt;code&gt;USERID.REXX.EXEC&lt;/code&gt;这个pds下面。运行的时候&lt;strong&gt;&lt;code&gt;TSO RET your_program_name&lt;/code&gt;&lt;/strong&gt; 即可随时查看。这里是这个RET程序的实现方法，原本是公司内部用的，由前辈们积累下来的财产，我见它有通用性和扩展性，故稍作修改简化后贴这里：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;EDIT&lt;/span&gt;       &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;REXX&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EXEC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;RET&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mo"&gt;01&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mo"&gt;02&lt;/span&gt;                  &lt;span class="no"&gt;Columns&lt;/span&gt; &lt;span class="mo"&gt;00001&lt;/span&gt; &lt;span class="mo"&gt;00072&lt;/span&gt; 
&lt;span class="no"&gt;Command&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt;                                                  &lt;span class="no"&gt;Scroll&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;CSR&lt;/span&gt;  
&lt;span class="o"&gt;******&lt;/span&gt; &lt;span class="o"&gt;*****************************&lt;/span&gt; &lt;span class="no"&gt;Top&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="no"&gt;Data&lt;/span&gt; &lt;span class="o"&gt;******************************&lt;/span&gt;
&lt;span class="mo"&gt;000001&lt;/span&gt; &lt;span class="o"&gt;/*&lt;/span&gt; &lt;span class="n"&gt;rexx&lt;/span&gt; &lt;span class="o"&gt;*/&lt;/span&gt;                                                              
&lt;span class="mo"&gt;000002&lt;/span&gt; &lt;span class="o"&gt;/***********&lt;/span&gt; &lt;span class="n"&gt;ret&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;retrieve&lt;/span&gt; &lt;span class="n"&gt;specific&lt;/span&gt; &lt;span class="n"&gt;member&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;multiple&lt;/span&gt; &lt;span class="n"&gt;libs&lt;/span&gt;&lt;span class="o"&gt;*********/&lt;/span&gt;
&lt;span class="mo"&gt;000003&lt;/span&gt; &lt;span class="n"&gt;arg&lt;/span&gt; &lt;span class="n"&gt;member&lt;/span&gt;                                                              
&lt;span class="mo"&gt;000004&lt;/span&gt;   &lt;span class="n"&gt;dummy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;outtrap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;dummy2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;      &lt;span class="sr"&gt;/*suppress tso messages from screen *&lt;/span&gt;
&lt;span class="sr"&gt;000005   holdrc = 1;found_num=0;mem_arr.=&amp;quot;&amp;quot;;  /&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;init&lt;/span&gt; &lt;span class="n"&gt;vars&lt;/span&gt;&lt;span class="o"&gt;*/&lt;/span&gt;                   
&lt;span class="mo"&gt;000006&lt;/span&gt;   &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;readlibs&lt;/span&gt;                                                         
&lt;span class="mo"&gt;000007&lt;/span&gt;   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;found_num&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;                                                 
&lt;span class="mo"&gt;00000&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;    &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;found_num&lt;/span&gt;                                                  
&lt;span class="mo"&gt;00000&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;       &lt;span class="n"&gt;address&lt;/span&gt; &lt;span class="n"&gt;ispexec&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;VIEW DATASET(&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="n"&gt;mem_arr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;#39;)&amp;quot;&lt;/span&gt;                     
&lt;span class="mo"&gt;000010&lt;/span&gt;    &lt;span class="k"&gt;end&lt;/span&gt;                                                                  
&lt;span class="mo"&gt;000011&lt;/span&gt;   &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;say&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Can&amp;#39;t find requested module --&amp;gt;  &amp;quot;&lt;/span&gt;&lt;span class="n"&gt;member&lt;/span&gt;                    
&lt;span class="mo"&gt;000012&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt;    

&lt;span class="mo"&gt;000013&lt;/span&gt; &lt;span class="o"&gt;/**&lt;/span&gt;&lt;span class="ss"&gt;readlibs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;Here&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="n"&gt;any&lt;/span&gt; &lt;span class="n"&gt;libs&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;want&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="o"&gt;**************/&lt;/span&gt;   
&lt;span class="mo"&gt;000014&lt;/span&gt; &lt;span class="ss"&gt;readlibs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;                                                               
&lt;span class="mo"&gt;000015&lt;/span&gt;   &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;search_one_lib&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;IBMUSER.SOURCE.LIB1&amp;quot;&lt;/span&gt;  
       &lt;span class="sr"&gt;/*if holdrc = 1 then call your_added_lib1  add your extra lib here*/&lt;/span&gt;
       &lt;span class="sr"&gt;/*if holdrc = 1 then call your_added_lib2  want to add another one?*/&lt;/span&gt; 
         &lt;span class="o"&gt;...&lt;/span&gt;         
&lt;span class="mo"&gt;000016&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;  

&lt;span class="mo"&gt;000017&lt;/span&gt; &lt;span class="o"&gt;/**&lt;/span&gt;&lt;span class="ss"&gt;search_one_lib&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;Browse&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="no"&gt;Find&lt;/span&gt; &lt;span class="n"&gt;member&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;designated&lt;/span&gt; &lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;**********/&lt;/span&gt;   
&lt;span class="mo"&gt;00001&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="ss"&gt;search_one_lib&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;                                                           
&lt;span class="mo"&gt;00001&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;  &lt;span class="n"&gt;parse&lt;/span&gt; &lt;span class="n"&gt;upper&lt;/span&gt; &lt;span class="n"&gt;arg&lt;/span&gt; &lt;span class="n"&gt;dsname&lt;/span&gt;                                                 
&lt;span class="mo"&gt;000020&lt;/span&gt;   &lt;span class="n"&gt;dspds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;!!&lt;/span&gt;&lt;span class="n"&gt;dsname!&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;#39;&amp;quot;&lt;/span&gt;                                               
&lt;span class="mo"&gt;000021&lt;/span&gt;   &lt;span class="s2"&gt;&amp;quot;ispexec lminit  dataid(handle)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                     
&lt;span class="mo"&gt;000022&lt;/span&gt;                  &lt;span class="s2"&gt;&amp;quot; dataset(&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;dspds&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;)&amp;quot;&lt;/span&gt;                                  
&lt;span class="mo"&gt;000023&lt;/span&gt;   &lt;span class="s2"&gt;&amp;quot;ispexec lmopen  dataid(&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;handle&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;) option(input)&amp;quot;&lt;/span&gt;                    
&lt;span class="mo"&gt;000024&lt;/span&gt;   &lt;span class="s2"&gt;&amp;quot;ispexec lmmfind dataid(&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;handle&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;) member(&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;!!&lt;/span&gt; &lt;span class="n"&gt;member&lt;/span&gt; &lt;span class="o"&gt;!!&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        
&lt;span class="mo"&gt;000025&lt;/span&gt;                   &lt;span class="s2"&gt;&amp;quot;stats(yes)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;                                         
&lt;span class="mo"&gt;000026&lt;/span&gt;   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;rc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;                                                     
&lt;span class="mo"&gt;000027&lt;/span&gt;      &lt;span class="n"&gt;dspds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dsname&lt;/span&gt; &lt;span class="o"&gt;!!&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;(&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;!!&lt;/span&gt; &lt;span class="n"&gt;member&lt;/span&gt; &lt;span class="o"&gt;!!&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;)&amp;quot;&lt;/span&gt;                             
&lt;span class="mo"&gt;00002&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;      &lt;span class="n"&gt;found_num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;found_num&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;                                          
&lt;span class="mo"&gt;00002&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;      &lt;span class="n"&gt;mem_arr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;found_num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dspds&lt;/span&gt;                                          
&lt;span class="mo"&gt;000030&lt;/span&gt;   &lt;span class="k"&gt;end&lt;/span&gt;                                                                   
&lt;span class="mo"&gt;000031&lt;/span&gt;    &lt;span class="s2"&gt;&amp;quot;ispexec  lmclose dataid(&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;handle&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;)&amp;quot;&lt;/span&gt;                                
&lt;span class="mo"&gt;000032&lt;/span&gt;    &lt;span class="s2"&gt;&amp;quot;ispexec  lmfree  dataid(&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;handle&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;)&amp;quot;&lt;/span&gt;                                
&lt;span class="mo"&gt;000033&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;                                                                  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;例如，你突然想看程序&lt;em&gt;PRODPGM1&lt;/em&gt;,只需执行： &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;TSO RET PRODPGM1 
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;REXX程序就会去函数readlibs里面您事先指定好的libs里面查找&lt;em&gt;PRODPGM1&lt;/em&gt;,然后以VIEW的方式逐个打开&lt;em&gt;PRODPGM1&lt;/em&gt;供您查看。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;File&lt;/span&gt;  &lt;span class="no"&gt;Edit&lt;/span&gt;  &lt;span class="no"&gt;Edit_Settings&lt;/span&gt;  &lt;span class="no"&gt;Menu&lt;/span&gt;  &lt;span class="no"&gt;Utilities&lt;/span&gt;  &lt;span class="no"&gt;Compilers&lt;/span&gt;  &lt;span class="no"&gt;Test&lt;/span&gt;  &lt;span class="no"&gt;Help&lt;/span&gt;            
&lt;span class="sb"&gt;```````````````````````````````````````````````````````````````````````````````&lt;/span&gt;
&lt;span class="sb"&gt;VIEW       IBMUSER.SOURCE.LIB1(PRODPGM1) - 03. Columns 00001 00072 &lt;/span&gt;
&lt;span class="sb"&gt;Command ===&amp;gt;                                                  Scroll ===&amp;gt; CSR  &lt;/span&gt;
&lt;span class="sb"&gt;****** ***************************** Top of Data ******************************&lt;/span&gt;
&lt;span class="sb"&gt;000001   PRODPGM1: PROC(PARMS) OPTIONS(MAIN);                          &lt;/span&gt;
&lt;span class="sb"&gt;000002  /*********************************************************************/&lt;/span&gt;
&lt;span class="sb"&gt;000003  /* PROGRAM-ID:  PRODPGM1                                             */&lt;/span&gt;
&lt;span class="sb"&gt;000004  /* DESCRIPTION: PRODUCE DAILY SUMMARY RPT                            */&lt;/span&gt;
&lt;span class="sb"&gt;000005  /* AUTHOR:      IBMUSER JOHN                                         */&lt;/span&gt;
&lt;span class="sb"&gt;000006  /* DATE:        JUNE 2009                                            */&lt;/span&gt;
&lt;span class="sb"&gt;000007  /*********************************************************************/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果&lt;em&gt;PRODPGM1&lt;/em&gt;还存在于除了&lt;code&gt;IBMUSER.SOURCE.LIB1&lt;/code&gt;之外的lib中，那么按PF3即可接着查看下一个结果。&lt;/p&gt;</summary><category term="z/OS"></category><category term="rexx"></category></entry><entry><title>JCL批量注释</title><link href="http://mainframer.github.io/articles/JCL%E6%89%B9%E9%87%8F%E6%B3%A8%E9%87%8A.html" rel="alternate"></link><updated>2012-10-21T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-10-21:articles/JCL批量注释.html</id><summary type="html">&lt;p&gt;在JCL里面一次如何注释掉一整段连续的Statement? 下面这个替换思想的方法不错，不妨一试！&lt;br /&gt;
命令：&lt;code&gt;C '//' '//*' ALL .X .Y&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;File&lt;/span&gt; &lt;span class="no"&gt;Edit&lt;/span&gt; &lt;span class="no"&gt;Edit_Settings&lt;/span&gt; &lt;span class="no"&gt;Menu&lt;/span&gt; &lt;span class="no"&gt;Utilities&lt;/span&gt; &lt;span class="no"&gt;Compilers&lt;/span&gt; &lt;span class="no"&gt;Test&lt;/span&gt; &lt;span class="no"&gt;Help&lt;/span&gt; 
&lt;span class="no"&gt;VIEW&lt;/span&gt; &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;JCL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SORT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mo"&gt;01&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;99&lt;/span&gt;                 &lt;span class="no"&gt;Columns&lt;/span&gt; &lt;span class="mo"&gt;00001&lt;/span&gt; &lt;span class="mo"&gt;00072&lt;/span&gt; 
&lt;span class="no"&gt;Command&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;//&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;//*&amp;#39;&lt;/span&gt; &lt;span class="no"&gt;ALL&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;                    &lt;span class="no"&gt;Scroll&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;CSR&lt;/span&gt; 

&lt;span class="o"&gt;********&lt;/span&gt; &lt;span class="no"&gt;Top&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="no"&gt;Data&lt;/span&gt; &lt;span class="o"&gt;*********************************************************&lt;/span&gt; 
&lt;span class="mo"&gt;000001&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;IBMUSERS&lt;/span&gt; &lt;span class="no"&gt;JOB&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;000000000000000000CMP&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
&lt;span class="mo"&gt;000002&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="no"&gt;CLASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;NOTIFY&lt;/span&gt;&lt;span class="o"&gt;=&amp;amp;&lt;/span&gt;&lt;span class="no"&gt;SYSUID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;MSGCLASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;TIME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;NOLIMIT&lt;/span&gt; 
&lt;span class="mo"&gt;000003&lt;/span&gt; &lt;span class="o"&gt;//*********************************************************************&lt;/span&gt;
&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;     &lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;STEP001&lt;/span&gt; &lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;ICETOOL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;REGION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt; 
&lt;span class="mo"&gt;000005&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;INPUT1&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&amp;amp;&lt;/span&gt;&lt;span class="no"&gt;HLQ1&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="no"&gt;AEN&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;INPUT1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EXT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt; 
&lt;span class="mo"&gt;000006&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;INPUT2&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&amp;amp;&lt;/span&gt;&lt;span class="no"&gt;HLQ1&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="no"&gt;AEN&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;INPUT2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EXT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt; 
&lt;span class="mo"&gt;000007&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;INPUT3&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&amp;amp;&lt;/span&gt;&lt;span class="no"&gt;HLQ1&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="no"&gt;AEN&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;INPUT3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EXT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;
&lt;span class="mo"&gt;00000&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;OUTPUT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OUTPUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
&lt;span class="mo"&gt;00000&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;MOD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;CATLG&lt;/span&gt;&lt;span class="p"&gt;,),&lt;/span&gt;&lt;span class="no"&gt;UNIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SYSDA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;SPACE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;CYL&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;RLSE&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
&lt;span class="mo"&gt;000010&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="no"&gt;DCB&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SYS1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MODEL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;RECFM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;FB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;LRECL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DSORG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;PS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="mo"&gt;000011&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTWK01&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;UNIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SYSDA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;SPACE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;CYL&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;RLSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="mo"&gt;000012&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;TOOLMSG&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; 
&lt;span class="mo"&gt;000013&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;DFSMSG&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt; 
&lt;span class="mo"&gt;000014&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;TOOLIN&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&amp;amp;&lt;/span&gt;&lt;span class="no"&gt;CONTROL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;MYCNTL01&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt; 
&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;     &lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;CTL1CNTL&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&amp;amp;&lt;/span&gt;&lt;span class="no"&gt;CONTROL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;MYCNTL02&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt; 
&lt;span class="mo"&gt;000016&lt;/span&gt; &lt;span class="o"&gt;//*&lt;/span&gt; 

&lt;span class="no"&gt;F1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Help&lt;/span&gt; &lt;span class="no"&gt;F2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Split&lt;/span&gt; &lt;span class="no"&gt;F3&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Exit&lt;/span&gt; &lt;span class="no"&gt;F5&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Rfind&lt;/span&gt; &lt;span class="no"&gt;F6&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Rchange&lt;/span&gt; &lt;span class="no"&gt;F7&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Up&lt;/span&gt; 
&lt;span class="no"&gt;F8&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Down&lt;/span&gt; &lt;span class="no"&gt;F9&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Swap&lt;/span&gt; &lt;span class="no"&gt;F10&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Left&lt;/span&gt; &lt;span class="no"&gt;F11&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Right&lt;/span&gt; &lt;span class="no"&gt;F12&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Cancel&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;</summary><category term="JCL批量注释"></category></entry><entry><title>Local FTP Trigger JES job</title><link href="http://mainframer.github.io/articles/Local%20FTP%20Trigger%20JES%20job.html" rel="alternate"></link><updated>2012-10-08T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-10-08:articles/Local FTP Trigger JES job.html</id><summary type="html">&lt;p&gt;随便写了一个搜索ABC字符串的JCL，保存到桌面:  &lt;br /&gt;
&lt;code&gt;C:\Documents and Settings\Foo\Desktop\IBMUSERJ.txt&lt;/code&gt;  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;IBMUSERJ&lt;/span&gt; &lt;span class="no"&gt;JOB&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;000000000000000000CMP&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;      
&lt;span class="sr"&gt;//&lt;/span&gt;     &lt;span class="no"&gt;CLASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;NOTIFY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;TIME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;NOLIMIT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;MSGCLASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;                                           
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;ONLINE&lt;/span&gt;  &lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;ISRSUPC&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                  
&lt;span class="sr"&gt;//&lt;/span&gt;            &lt;span class="no"&gt;PARM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SRCHCMP&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                 
&lt;span class="sr"&gt;//&lt;/span&gt;            &lt;span class="s1"&gt;&amp;#39;ANYC&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;NEWDD&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PROCLIB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;  
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;OUTDD&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;    
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSIN&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;           
&lt;span class="no"&gt;SRCHFOR&lt;/span&gt;  &lt;span class="s1"&gt;&amp;#39;ABC&amp;#39;&lt;/span&gt;       
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;用ftp的方式将jcl送入JES系统执行。&lt;code&gt;win+R&lt;/code&gt;打开cmd &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="ss"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:\&lt;/span&gt;&lt;span class="no"&gt;Documents&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="no"&gt;Settings&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="no"&gt;Foo&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="no"&gt;Desktop&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;ftp&lt;/span&gt; &lt;span class="n"&gt;ftpserver&lt;/span&gt;  
&lt;span class="sr"&gt;/*input username/&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="o"&gt;*/&lt;/span&gt;  
&lt;span class="n"&gt;ftp&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ascii&lt;/span&gt;  
&lt;span class="mi"&gt;200&lt;/span&gt; &lt;span class="no"&gt;Representation&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="no"&gt;Ascii&lt;/span&gt; &lt;span class="no"&gt;NonPrint&lt;/span&gt;  
&lt;span class="n"&gt;ftp&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt; &lt;span class="n"&gt;site&lt;/span&gt; &lt;span class="n"&gt;filetype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;jes&lt;/span&gt;  
&lt;span class="mi"&gt;200&lt;/span&gt; &lt;span class="no"&gt;SITE&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;accepted&lt;/span&gt;  
&lt;span class="n"&gt;ftp&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;put&lt;/span&gt; &lt;span class="no"&gt;IBMUSERJ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;  
&lt;span class="mi"&gt;200&lt;/span&gt; &lt;span class="no"&gt;Port&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="no"&gt;OK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  
&lt;span class="mi"&gt;125&lt;/span&gt; &lt;span class="no"&gt;Sending&lt;/span&gt; &lt;span class="no"&gt;Job&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="no"&gt;JES&lt;/span&gt; &lt;span class="n"&gt;internal&lt;/span&gt; &lt;span class="n"&gt;reader&lt;/span&gt; &lt;span class="no"&gt;FIXrecfm&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;  
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;It&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;known&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="no"&gt;JES&lt;/span&gt; &lt;span class="n"&gt;as&lt;/span&gt; &lt;span class="no"&gt;J0693574&lt;/span&gt;  
&lt;span class="mi"&gt;250&lt;/span&gt; &lt;span class="no"&gt;Transfer&lt;/span&gt; &lt;span class="n"&gt;completed&lt;/span&gt; &lt;span class="n"&gt;successfully&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  
&lt;span class="mi"&gt;419&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt; &lt;span class="n"&gt;sent&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mo"&gt;002&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;209499&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="n"&gt;ftp&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;quit&lt;/span&gt;  
&lt;span class="mi"&gt;221&lt;/span&gt; &lt;span class="no"&gt;Quit&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="n"&gt;received&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="no"&gt;Goodbye&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;可以看到送入JES系统的&lt;code&gt;job number&lt;/code&gt;是J0693574，登录TSO,在SDSF里面可以看到job在执行。  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;Display&lt;/span&gt;  &lt;span class="no"&gt;Filter&lt;/span&gt;  &lt;span class="no"&gt;View&lt;/span&gt;  &lt;span class="no"&gt;Print&lt;/span&gt;  &lt;span class="no"&gt;Options&lt;/span&gt;  &lt;span class="no"&gt;Search&lt;/span&gt;  &lt;span class="no"&gt;Help&lt;/span&gt;                              
 &lt;span class="o"&gt;-------------------------------------------------------------------------------&lt;/span&gt;  
 &lt;span class="no"&gt;SDSF&lt;/span&gt; &lt;span class="no"&gt;STATUS&lt;/span&gt; &lt;span class="no"&gt;DISPLAY&lt;/span&gt; &lt;span class="no"&gt;ALL&lt;/span&gt; &lt;span class="no"&gt;CLASSES&lt;/span&gt;                        &lt;span class="no"&gt;LINE&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;           
 &lt;span class="no"&gt;COMMAND&lt;/span&gt; &lt;span class="no"&gt;INPUT&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt;                                            &lt;span class="no"&gt;SCROLL&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;CSR&lt;/span&gt;    
 &lt;span class="no"&gt;PREFIX&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;  &lt;span class="no"&gt;DEST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;ALL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="no"&gt;OWNER&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;  &lt;span class="no"&gt;SYSNAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;                                   
 &lt;span class="no"&gt;NP&lt;/span&gt;   &lt;span class="no"&gt;JOBNAME&lt;/span&gt;  &lt;span class="no"&gt;TYPE&lt;/span&gt; &lt;span class="no"&gt;JNUM&lt;/span&gt;   &lt;span class="no"&gt;PRTY&lt;/span&gt; &lt;span class="no"&gt;QUEUE&lt;/span&gt;      &lt;span class="no"&gt;ASYS&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="no"&gt;MC&lt;/span&gt; &lt;span class="no"&gt;PRT&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;DEST&lt;/span&gt; &lt;span class="no"&gt;STAT&lt;/span&gt; &lt;span class="no"&gt;TOT&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;LINES&lt;/span&gt;  &lt;span class="no"&gt;RM&lt;/span&gt;  
      &lt;span class="no"&gt;IBMUSERJ&lt;/span&gt; &lt;span class="no"&gt;JOB&lt;/span&gt;  &lt;span class="mi"&gt;693574&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="no"&gt;PRINT&lt;/span&gt;           &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;  &lt;span class="no"&gt;LOCAL&lt;/span&gt;                &lt;span class="mi"&gt;173&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;</summary><category term="z/OS"></category><category term="ftp"></category><category term="quote site"></category><category term="JES2"></category></entry><entry><title>FTP from windows to Mainframe</title><link href="http://mainframer.github.io/articles/FTP%20from%20windows%20to%20Mainframe.html" rel="alternate"></link><updated>2012-10-03T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-10-03:articles/FTP from windows to Mainframe.html</id><summary type="html">&lt;p&gt;&lt;code&gt;win+R&lt;/code&gt;打开cmd:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="ss"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:\&lt;/span&gt;&lt;span class="no"&gt;Documents&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="no"&gt;Settings&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="no"&gt;Foo&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="no"&gt;Desktop&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;ftp&lt;/span&gt; &lt;span class="n"&gt;ftpserver&lt;/span&gt;  
&lt;span class="sr"&gt;/*Here please input username/&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="o"&gt;*/&lt;/span&gt;  
&lt;span class="n"&gt;ftp&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ascii&lt;/span&gt;
&lt;span class="mi"&gt;200&lt;/span&gt; &lt;span class="no"&gt;Representation&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="no"&gt;Ascii&lt;/span&gt; &lt;span class="no"&gt;NonPrint&lt;/span&gt;
&lt;span class="n"&gt;ftp&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt; &lt;span class="n"&gt;site&lt;/span&gt; &lt;span class="n"&gt;lrecl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt; &lt;span class="n"&gt;blksize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;16000&lt;/span&gt; &lt;span class="n"&gt;recfm&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;fb&lt;/span&gt;
&lt;span class="mi"&gt;200&lt;/span&gt; &lt;span class="no"&gt;SITE&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;accepted&lt;/span&gt;
&lt;span class="n"&gt;ftp&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;put&lt;/span&gt; &lt;span class="nb"&gt;test&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ibmuser.test.psfile(+1)&amp;#39;&lt;/span&gt;
&lt;span class="mi"&gt;200&lt;/span&gt; &lt;span class="no"&gt;Port&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="no"&gt;OK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mi"&gt;125&lt;/span&gt; &lt;span class="no"&gt;Storing&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PSFILE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt; &lt;span class="no"&gt;Transfer&lt;/span&gt; &lt;span class="n"&gt;completed&lt;/span&gt; &lt;span class="n"&gt;successfully&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mi"&gt;71&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt; &lt;span class="n"&gt;sent&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;71&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ftp&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;quit&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lrecl&lt;/code&gt;&lt;/strong&gt; specifies the record length of 80.&lt;br /&gt;
&lt;strong&gt;&lt;code&gt;Blksize&lt;/code&gt;&lt;/strong&gt; specifies the block size of 16000. &lt;br /&gt;
&lt;strong&gt;&lt;code&gt;Recfm&lt;/code&gt;&lt;/strong&gt; specifies the record format of fixed block.&lt;br /&gt;
&lt;strong&gt;&lt;code&gt;Filename.txt&lt;/code&gt;&lt;/strong&gt; is the windows file name you are going to send from.&lt;br /&gt;
&lt;strong&gt;&lt;code&gt;IBMUSER.TEST.PSFILE(+1)&lt;/code&gt;&lt;/strong&gt; is the target file name you are sending to, ‘(+1)’ indicates a new file generation each time.   &lt;/p&gt;</summary><category term="z/OS"></category><category term="ftp"></category><category term="quote site"></category></entry><entry><title>CICS的TOR,AOR,FOR概念</title><link href="http://mainframer.github.io/articles/CICS%E7%9A%84TOR,AOR,FOR%E6%A6%82%E5%BF%B5.html" rel="alternate"></link><updated>2012-09-26T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-09-26:articles/CICS的TOR,AOR,FOR概念.html</id><summary type="html">&lt;p&gt;CICS当中&lt;code&gt;TOR，AOR,FOR&lt;/code&gt;还有其它*OR什么意思？ &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;TOR&lt;/code&gt;&lt;/strong&gt; 是TERMINAL OWNING REGION,TOR上只定义TERMINAL，在TOR上定义PCT,REMOTE到AOR。当交易进入TOR后会被路由到对应的AOR去执行。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;AOR&lt;/code&gt;&lt;/strong&gt; 是APPLICATION OWNING REGION，AOR上跑交易和应用程序。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;FOR&lt;/code&gt;&lt;/strong&gt; 是FILE OWNING REGION&lt;br /&gt;
网上搜到老外的解释:    &lt;blockquote&gt;
&lt;p&gt;Tor is where the terminals are defined, Aor is where the applications are defined and FOR where the files are defined.&lt;br /&gt;
Generally, TORs are the regions that have connection to the terminals (or other connections)&lt;br /&gt;
All the termianal related programs (Translator, co-ordinator) will be coded in TOR and API (Application program interface) will be coded in AOR.&lt;br /&gt;
To put in simple words - screen handling , function keys logic, function keys validations will be in programs coded in TOR and all business logic (valid processing, updating the database) in AOR. &lt;br /&gt;
They are just CICS sytems that are used to split out certain functions and applications into discrete CICS system for easier maintance\administration.Note there is no technical difference between the different region types. 
Any CICS region could act in any/all of the roles. Customers find it simplifies administration and improves reliability to categorize regions and isolate user applications into separate regions from service regions.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;总结起来：&lt;/strong&gt;&lt;br /&gt;
它们都属于CICS的一部分，本质上并没有不同。只是为了功能划分，负载均衡以及便于维护等方面考虑而人为区分开来的。分工不同而已！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="CICS"></category><category term="TOR"></category><category term="AOR"></category><category term="FOR"></category></entry><entry><title>DB2 SQLcode</title><link href="http://mainframer.github.io/articles/DB2%20SQLcode.html" rel="alternate"></link><updated>2012-09-19T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-09-19:articles/DB2 SQLcode.html</id><summary type="html">&lt;h3&gt;DB2 SQLcode&lt;/h3&gt;
&lt;h5&gt;IBM官网:&lt;/h5&gt;
&lt;p&gt;这里是原帖：&lt;a href="http://publib.boulder.ibm.com/infocenter/dzichelp/v2r2/index.jsp?topic=%2Fcom.ibm.db2z10.doc.codes%2Fsrc%2Ftpc%2Fdb2z_sqlcodes.htm"&gt;http://publib.boulder.ibm.com/infocenter/dzichelp/v2r2/index.jsp?topic=%2Fcom.ibm.db2z10.doc.codes%2Fsrc%2Ftpc%2Fdb2z_sqlcodes.htm&lt;/a&gt;    &lt;/p&gt;
&lt;h5&gt;Wiki:&lt;/h5&gt;
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/DB2_SQL_return_codes"&gt;http://en.wikipedia.org/wiki/DB2_SQL_return_codes&lt;/a&gt;&lt;/p&gt;</summary><category term="DB2 SQLcode"></category></entry><entry><title>SuperC SRCHFOR高级选项</title><link href="http://mainframer.github.io/articles/SuperC%20SRCHFOR%E9%AB%98%E7%BA%A7%E9%80%89%E9%A1%B9.html" rel="alternate"></link><updated>2012-09-11T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-09-11:articles/SuperC SRCHFOR高级选项.html</id><summary type="html">&lt;p&gt;在&lt;code&gt;ISPF 3.4&lt;/code&gt; 选项下面使用&lt;em&gt;SRCHFOR&lt;/em&gt;其实可以有高级选项功能的：比如能一次search多个string，比如能选择是否searchn那些已经被&lt;em&gt;MIGRATE&lt;/em&gt;的那些dataset等等。
这里，要在&lt;code&gt;IBMUSER.TEST.GDGRPT&lt;/code&gt;的所有世代里面查找:&lt;code&gt;shehui&lt;/code&gt;, &lt;code&gt;zhuyi&lt;/code&gt;,&lt;code&gt;hao&lt;/code&gt;这三个字符串，包括那些已经被migrate的。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;DSLIST&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="no"&gt;Data&lt;/span&gt; &lt;span class="no"&gt;Sets&lt;/span&gt; &lt;span class="no"&gt;Matching&lt;/span&gt; &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GDGRPT&lt;/span&gt;                 &lt;span class="no"&gt;Row&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt; 
&lt;span class="no"&gt;Command&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt;                                                  &lt;span class="no"&gt;Scroll&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;CSR&lt;/span&gt;  

&lt;span class="no"&gt;Command&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="no"&gt;Enter&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="nb"&gt;select&lt;/span&gt; &lt;span class="n"&gt;action&lt;/span&gt;                  &lt;span class="no"&gt;Message&lt;/span&gt;           &lt;span class="no"&gt;Volume&lt;/span&gt; 
&lt;span class="o"&gt;-------------------------------------------------------------------------------&lt;/span&gt;
         &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GDGRPT&lt;/span&gt;                       &lt;span class="no"&gt;Not&lt;/span&gt; &lt;span class="n"&gt;searched&lt;/span&gt;      &lt;span class="sc"&gt;??????&lt;/span&gt; 
         &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GDGRPT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;G0002V00&lt;/span&gt;                                &lt;span class="no"&gt;XZ8W28&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;
         &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GDGRPT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;G0003V00&lt;/span&gt;                                &lt;span class="no"&gt;TXT013&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;
         &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GDGRPT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;G0004V00&lt;/span&gt;                                &lt;span class="no"&gt;PEX016&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;
         &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GDGRPT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;G0005V00&lt;/span&gt;                                &lt;span class="no"&gt;EXG013&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;
         &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GDGRPT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;G0006V00&lt;/span&gt;                                &lt;span class="no"&gt;MIGRAT1&lt;/span&gt;
         &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GDGRPT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;G0007V00&lt;/span&gt;                                &lt;span class="no"&gt;MIGRAT2&lt;/span&gt;
         &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GDGRPT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;G0008V00&lt;/span&gt;                                &lt;span class="no"&gt;MIGRAT2&lt;/span&gt;
         &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GDGRPT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;G0009V00&lt;/span&gt;                                &lt;span class="no"&gt;MIGRAT2&lt;/span&gt;
         &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GDGRPT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;G0010V00&lt;/span&gt;                                &lt;span class="no"&gt;MIGRAT2&lt;/span&gt;
         &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GDGRPT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;G0011V00&lt;/span&gt;                                &lt;span class="no"&gt;YTW002&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在Command栏输入&lt;code&gt;srchfor&lt;/code&gt;回车即可看到高级选项对话框:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;Command&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;srchfor&lt;/span&gt;                                           &lt;span class="no"&gt;Scroll&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;CSR&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;enu&lt;/span&gt;  &lt;span class="no"&gt;Options&lt;/span&gt;  &lt;span class="no"&gt;View&lt;/span&gt;  &lt;span class="no"&gt;Utilities&lt;/span&gt;  &lt;span class="no"&gt;Compilers&lt;/span&gt;  &lt;span class="no"&gt;Help&lt;/span&gt;                             
&lt;span class="sb"&gt;``````````````````````````&lt;/span&gt; &lt;span class="no"&gt;DSLIST&lt;/span&gt; &lt;span class="no"&gt;Srchfor&lt;/span&gt; &lt;span class="no"&gt;Options&lt;/span&gt; &lt;span class="sb"&gt;```````````````````````````&lt;/span&gt;
&lt;span class="sb"&gt;                                                                 End of data &lt;/span&gt;
&lt;span class="sb"&gt;                                                                 Command ===&amp;gt;                                                                 &lt;/span&gt;

&lt;span class="sb"&gt;You are about to search multiple data sets.                                  &lt;/span&gt;
&lt;span class="sb"&gt;Specify search string(s) and options and press ENTER to run the search.      &lt;/span&gt;
&lt;span class="sb"&gt;Enter the END or the CANCEL command to cancel the search.                    &lt;/span&gt;
&lt;span class="sb"&gt;                                                                More:   -    &lt;/span&gt;
&lt;span class="sb"&gt;  ==&amp;gt;&amp;#39;SHEHUI&amp;#39;                                                                        &lt;/span&gt;
&lt;span class="sb"&gt;  ==&amp;gt;&amp;#39;ZHUYI&amp;#39;                                                                        &lt;/span&gt;
&lt;span class="sb"&gt;  ==&amp;gt;&amp;#39;HAO&amp;#39;                                                                        &lt;/span&gt;

&lt;span class="sb"&gt;Listing DSN: &amp;#39;IBMUSER.SRCHDSL.LIST&amp;#39;                                          &lt;/span&gt;

&lt;span class="sb"&gt;Select Process      Search              Search              Select Display   &lt;/span&gt;
&lt;span class="sb"&gt;Options with /      Migrated            Excluded            Options with /   &lt;/span&gt;
&lt;span class="sb"&gt;   Mixed Mode       3  1. None          3  1. Excluded         View output   &lt;/span&gt;
&lt;span class="sb"&gt;   Any case            2. First level      2. Non-excluded     Exclude not   &lt;/span&gt;
&lt;span class="sb"&gt;   Totals only         3. All              3. Both             found         &lt;/span&gt;
&lt;span class="sb"&gt;   First found                                                               &lt;/span&gt;
&lt;span class="sb"&gt; F1=Help        F2=Split       F3=Exit        F4=Auto        F7=Backward     &lt;/span&gt;
&lt;span class="sb"&gt; F8=Forward     F9=Swap       F10=Actions    F12=Cancel                      &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="SuperC"></category><category term="SRCHFOR"></category></entry><entry><title>ISPF-只显示含关键字的所有行</title><link href="http://mainframer.github.io/articles/ISPF-%E5%8F%AA%E6%98%BE%E7%A4%BA%E5%90%AB%E5%85%B3%E9%94%AE%E5%AD%97%E7%9A%84%E6%89%80%E6%9C%89%E8%A1%8C.html" rel="alternate"></link><updated>2012-09-07T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-09-07:articles/ISPF-只显示含关键字的所有行.html</id><summary type="html">&lt;p&gt;命令：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;X ALL; 
FIND keyword ALL;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;比如，只显示所有含&lt;code&gt;DT0907&lt;/code&gt;的行，可以这么做，先&lt;code&gt;X ALL&lt;/code&gt;;再&lt;code&gt;FIND DT0907 ALL&lt;/code&gt;;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;VIEW&lt;/span&gt;       &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TESTJCL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;TESTJOB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mo"&gt;01&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;         &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="no"&gt;CHARS&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;DT0907&amp;#39;&lt;/span&gt; 
 &lt;span class="no"&gt;Command&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;find&lt;/span&gt; &lt;span class="n"&gt;dt0907&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt;                                  &lt;span class="no"&gt;Scroll&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;CSR&lt;/span&gt;  
 &lt;span class="o"&gt;******&lt;/span&gt; &lt;span class="o"&gt;*****************************&lt;/span&gt; &lt;span class="no"&gt;Top&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="no"&gt;Data&lt;/span&gt; &lt;span class="o"&gt;******************************&lt;/span&gt;
 &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;   &lt;span class="mi"&gt;524&lt;/span&gt; &lt;span class="no"&gt;Line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="no"&gt;Displayed&lt;/span&gt; 
 &lt;span class="mo"&gt;000525&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTOUT&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CREATERT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FILEOUTS&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DT0907&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;NEW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;CATLG&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;   
 &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;31&lt;/span&gt; &lt;span class="no"&gt;Line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="no"&gt;Displayed&lt;/span&gt; 
 &lt;span class="mo"&gt;000557&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTOUT&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CREATERT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NAMEACTS&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DT0907&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;NEW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;CATLG&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;   
 &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;   &lt;span class="mi"&gt;176&lt;/span&gt; &lt;span class="no"&gt;Line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="no"&gt;Displayed&lt;/span&gt; 
 &lt;span class="mo"&gt;000734&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;OUT&lt;/span&gt;     &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CREATERT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;USERACTS&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DT0907&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;NEW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;CATLG&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;     
 &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt; &lt;span class="no"&gt;Line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="no"&gt;Displayed&lt;/span&gt; 
 &lt;span class="mo"&gt;000775&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;NTIOUOUT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CREATERT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NTIONOUT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DT0907&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;NEW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;CATLG&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;   
 &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;75&lt;/span&gt; &lt;span class="no"&gt;Line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="no"&gt;Displayed&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;2013-05-12补充：&lt;/h5&gt;
&lt;p&gt;另外一种方法： &lt;code&gt;X DT0907 ALL; Flip;&lt;/code&gt; &lt;/p&gt;</summary><category term="ISPF"></category><category term="FIND ALL"></category></entry><entry><title>ISPF-提高效率少用PF3和START</title><link href="http://mainframer.github.io/articles/ISPF-%E6%8F%90%E9%AB%98%E6%95%88%E7%8E%87%E5%B0%91%E7%94%A8PF3%E5%92%8CSTART.html" rel="alternate"></link><updated>2012-09-01T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-09-01:articles/ISPF-提高效率少用PF3和START.html</id><summary type="html">&lt;p&gt;同一个&lt;em&gt;PDS&lt;/em&gt;下，记得多用&lt;code&gt;BROWSE&lt;/code&gt;, &lt;code&gt;VIEW&lt;/code&gt;,&lt;code&gt;EDIT&lt;/code&gt;,&lt;code&gt;COMP&lt;/code&gt;这些命令。比如&lt;code&gt;BROWSE TEST02&lt;/code&gt; 或者&lt;code&gt;EDIT TEST03&lt;/code&gt; 或者&lt;code&gt;VIEW TEST04&lt;/code&gt; 或者&lt;code&gt;COMP 'IBMUSER.PROJ.TEST.JCL1((TEST01)'&lt;/code&gt; 这样，不需要另外&lt;em&gt;PF3&lt;/em&gt;或者&lt;em&gt;START&lt;/em&gt;开一个窗口。
比如需要在同一个&lt;em&gt;PDS&lt;/em&gt;下的&lt;em&gt;TEST02&lt;/em&gt;这个JCL中拷贝一些东西到当前的TEST01的时候，经常用到。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;File&lt;/span&gt;  &lt;span class="no"&gt;Edit&lt;/span&gt;  &lt;span class="no"&gt;Edit_Settings&lt;/span&gt;  &lt;span class="no"&gt;Menu&lt;/span&gt;  &lt;span class="no"&gt;Utilities&lt;/span&gt;  &lt;span class="no"&gt;Compilers&lt;/span&gt;  &lt;span class="no"&gt;Test&lt;/span&gt;  &lt;span class="no"&gt;Help&lt;/span&gt;            
 &lt;span class="sb"&gt;```````````````````````````````````````````````````````````````````````````````&lt;/span&gt;
&lt;span class="sb"&gt; VIEW       IBMUSER.PROJ.TEST.JCL(TEST01) - 01.10           Columns 00001 00072 &lt;/span&gt;
&lt;span class="sb"&gt; Command ===&amp;gt; BROWSE TEST02                                    Scroll ===&amp;gt; CSR  &lt;/span&gt;
&lt;span class="sb"&gt; ****** ***************************** Top of Data ******************************&lt;/span&gt;
&lt;span class="sb"&gt; 000001 //IBMUSERS JOB                      011000010TEST,                      &lt;/span&gt;
&lt;span class="sb"&gt; 000002 //  CLASS=1,MSGCLASS=R,NOTIFY=&amp;amp;SYSUID                                   &lt;/span&gt;
&lt;span class="sb"&gt; 000003 //STEP01 EXEC PGM=TESTJOB                                               &lt;/span&gt;
&lt;span class="sb"&gt; 000004 //STEPLIB  DD   DISP=SHR,DSN=IBMUSER.LBN.LOAD.LIB                       &lt;/span&gt;
&lt;span class="sb"&gt; 000005 //FINPUT   DD DSN=IBMUSER.TEMPFLIN,DISP=SHR                             &lt;/span&gt;
&lt;span class="sb"&gt; 000006 //FOUTPUT  DD DSN=IBMUSER.TEMPFLOUT,DISP=SHR                            &lt;/span&gt;
&lt;span class="sb"&gt; 000007 //SYSPRINT DD  SYSOUT=*                                                 &lt;/span&gt;
&lt;span class="sb"&gt; 000008 //SYSOUT   DD  SYSOUT=*                                                 &lt;/span&gt;
&lt;span class="sb"&gt; 000009 //SYSUDUMP DD  SYSOUT=R                                                 &lt;/span&gt;
&lt;span class="sb"&gt; 000010 //PLIDUMP  DD  SYSOUT=R                                                 &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果记不得member的名字，可以只输入&lt;code&gt;BROWSE&lt;/code&gt;或者&lt;code&gt;EDIT&lt;/code&gt;或者&lt;code&gt;VIEW&lt;/code&gt;，让系统列出PDS下所有member供你pick up。&lt;/p&gt;</summary><category term="z/OS"></category></entry><entry><title>转战octopress</title><link href="http://mainframer.github.io/articles/%E8%BD%AC%E6%88%98octopress.html" rel="alternate"></link><updated>2012-08-22T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-08-22:articles/转战octopress.html</id><summary type="html">&lt;p&gt;博客从&lt;code&gt;wordpress&lt;/code&gt;转到&lt;code&gt;octopress&lt;/code&gt;了，将原来的博客导过来修复了下格式什么的。&lt;br /&gt;
没有了后台和数据库什么的，纯静态的，用&lt;code&gt;Sublime Text 2 + Git + MarkDown + Terminal&lt;/code&gt;的方式写博客,更有兴致了。更重要的是看起来的确清爽了很多！博客部署在著名的Heroku上面，免费的~&lt;/p&gt;</summary><category term="Octopress"></category></entry><entry><title>ICETOOL: 大小写转换</title><link href="http://mainframer.github.io/articles/ICETOOL-%E5%A4%A7%E5%B0%8F%E5%86%99%E8%BD%AC%E6%8D%A2.html" rel="alternate"></link><updated>2012-08-18T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-08-18:articles/ICETOOL-大小写转换.html</id><summary type="html">&lt;p&gt;&lt;code&gt;TRAN=UTOL&lt;/code&gt; ： uppercase to lowercase&lt;br /&gt;
&lt;code&gt;TRAN=LTOU&lt;/code&gt; ： lowercase to uppercase &lt;br /&gt;
例子：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;CTL1CNTL&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;                                           
  &lt;span class="no"&gt;INREC&lt;/span&gt; &lt;span class="no"&gt;IFTHEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;WHEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;INIT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;OVERLAY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;TRAN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;LTOU&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;   &lt;span class="err"&gt;：对&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="err"&gt;的进来处理的每一条数据的前&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="err"&gt;位先转为大写再说&lt;/span&gt;
              &lt;span class="no"&gt;IFTHEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;WHEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;BUILD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; 
              &lt;span class="no"&gt;IFTHEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;WHEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;BUILD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="z/OS"></category><category term="ICETOOL"></category></entry><entry><title>ICETOOL：数据类型转换</title><link href="http://mainframer.github.io/articles/ICETOOL-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2.html" rel="alternate"></link><updated>2012-08-12T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-08-12:articles/ICETOOL-数据类型转换.html</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;STEP001&lt;/span&gt; &lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;ICETOOL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;REGION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4096&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;COND&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;NE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;           
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;TOOLMSG&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                        
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;DFSMSG&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                        
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSOUT&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                        
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSPRINT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                        
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;IN&lt;/span&gt;                &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;MYINPUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;                           
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;OUT&lt;/span&gt;           &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;OUTFILE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;                             
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;TOOLIN&lt;/span&gt;    &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;                                                
  &lt;span class="no"&gt;COPY&lt;/span&gt; &lt;span class="no"&gt;FROM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;IN&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;TO&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;OUT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="no"&gt;USING&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;CTL1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                       
&lt;span class="sr"&gt;/*                                                            &lt;/span&gt;
&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;CTL1CNTL&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;                                               
  &lt;span class="no"&gt;OUTFIL&lt;/span&gt; &lt;span class="no"&gt;FNAMES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;OUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="no"&gt;MYINPUT&lt;/span&gt;&lt;span class="err"&gt;的第&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;至&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="err"&gt;位为日期，格式为：&lt;/span&gt;&lt;span class="mi"&gt;20120101&lt;/span&gt;&lt;span class="err"&gt;；第&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="err"&gt;位开始的&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="err"&gt;位为数值，格式为：&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mo"&gt;00000000000012&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;12345&lt;/span&gt;                                     
  &lt;span class="no"&gt;BUILD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;ZD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;TO&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;PDC&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;LENGTH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;SFF&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;TO&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;PDC&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;LENGTH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;这里输出只要保留&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="err"&gt;位小数，所以长度为&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="err"&gt;，否则为&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="sr"&gt;/*               &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这个sort做的事情是把&lt;code&gt;zoned decimal(ZD)&lt;/code&gt;类型的数据转化为&lt;code&gt;packed decimal(PD)&lt;/code&gt;类型；将&lt;code&gt;SFF(signed free form)&lt;/code&gt;类型的转为&lt;code&gt;PDC&lt;/code&gt;类型。
举个例子：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;转换之前：&lt;/span&gt; &lt;span class="no"&gt;ZD&lt;/span&gt;&lt;span class="err"&gt;的数据：&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;20120101&amp;#39;&lt;/span&gt;         
&lt;span class="no"&gt;SFF&lt;/span&gt;&lt;span class="err"&gt;的数据：&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-00000000006501.00000&amp;#39;&lt;/span&gt;

&lt;span class="err"&gt;转换之后的&lt;/span&gt; &lt;span class="no"&gt;PD&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;PDC&lt;/span&gt;&lt;span class="err"&gt;数据用&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;HEX&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;查看显示为：&lt;/span&gt;
&lt;span class="mo"&gt;0021100000000510&lt;/span&gt;
&lt;span class="mi"&gt;2100&lt;/span&gt;&lt;span class="no"&gt;C0000000600D&lt;/span&gt;       
&lt;/pre&gt;&lt;/div&gt;</summary><category term="z/OS"></category><category term="ICETOOL"></category></entry><entry><title>ICEMAN：字符替换</title><link href="http://mainframer.github.io/articles/ICEMAN-%E5%AD%97%E7%AC%A6%E6%9B%BF%E6%8D%A2.html" rel="alternate"></link><updated>2012-08-10T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-08-10:articles/ICEMAN-字符替换.html</id><summary type="html">&lt;p&gt;用于替换dataset中出现的字符串:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;STEP001&lt;/span&gt;  &lt;span class="no"&gt;EXEC&lt;/span&gt;  &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;ICEMAN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;REGION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;                    
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTIN&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;MYINPUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;                          
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTOUT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;MYOUTPUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;                         
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSIN&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;                                               
  &lt;span class="no"&gt;OPTION&lt;/span&gt; &lt;span class="no"&gt;COPY&lt;/span&gt;                                               
  &lt;span class="no"&gt;INREC&lt;/span&gt; &lt;span class="no"&gt;FINDREP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;INOUT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;0000&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;AAAA&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;1111&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;BBBB&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;   
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSOUT&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                     
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSPRINT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                     
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;                                                         
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;将出现的&lt;code&gt;'0000'&lt;/code&gt;替换成&lt;code&gt;'AAAA'&lt;/code&gt;,&lt;code&gt;'1111'&lt;/code&gt;替换成&lt;code&gt;‘BBBB‘&lt;/code&gt; 
当然，可以限定在特定几列替换：  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;STEP001&lt;/span&gt;  &lt;span class="no"&gt;EXEC&lt;/span&gt;  &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;ICEMAN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;REGION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;                    
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTIN&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;MYINPUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;                          
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTOUT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;MYOUTPUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;                         
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSIN&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;                                               
  &lt;span class="no"&gt;OPTION&lt;/span&gt; &lt;span class="no"&gt;COPY&lt;/span&gt;                                               
  &lt;span class="no"&gt;INREC&lt;/span&gt; &lt;span class="no"&gt;FINDREP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;INOUT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;0000&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;AAAA&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;1111&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;BBBB&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;STARTPOS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;ENDPOS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSOUT&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                     
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSPRINT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                     
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;     
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;限定只在前10位出现的&lt;code&gt;'0000'&lt;/code&gt;和&lt;code&gt;'1111'&lt;/code&gt;才做替换。&lt;/p&gt;</summary><category term="z/OS"></category><category term="ICEMAN"></category></entry><entry><title>ICETOOL: 多文件输出</title><link href="http://mainframer.github.io/articles/ICETOOL-%E5%A4%9A%E6%96%87%E4%BB%B6%E8%BE%93%E5%87%BA.html" rel="alternate"></link><updated>2012-08-02T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-08-02:articles/ICETOOL-多文件输出.html</id><summary type="html">&lt;p&gt;取一个文件&lt;code&gt;MYINPUT&lt;/code&gt;中的有用字段，组装成多个不同&lt;code&gt;LRECL&lt;/code&gt;的输出文件。这个也是项目中用到的，我再这里简化了好多！&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;STEP001&lt;/span&gt; &lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;ICETOOL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;REGION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4096&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;COND&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;NE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;         
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;TOOLMSG&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                      
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;DFSMSG&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                      
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSOUT&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                      
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSPRINT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                      
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTWK01&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;UNIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SYSDA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;SPACE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;CYL&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;RLSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;            
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;IN&lt;/span&gt;      &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;MYINPUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt; &lt;span class="ss"&gt;:LRECL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mo"&gt;05&lt;/span&gt;                 
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;OUT1&lt;/span&gt;    &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;MYOUT1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;  &lt;span class="ss"&gt;:LRECL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;                 
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;OUT2&lt;/span&gt;    &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;MYOUT2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;  &lt;span class="ss"&gt;:LRECL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;                 
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;TOOLIN&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;                                              
  &lt;span class="no"&gt;COPY&lt;/span&gt; &lt;span class="no"&gt;FROM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;IN&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;TO&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;OUT1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="no"&gt;USING&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;CTL1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                     
  &lt;span class="no"&gt;COPY&lt;/span&gt; &lt;span class="no"&gt;FROM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;IN&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;TO&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;OUT2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="no"&gt;USING&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;CTL2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                     
&lt;span class="sr"&gt;/*                                                          &lt;/span&gt;
&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;CTL1CNTL&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;                   &lt;span class="ss"&gt;:BUILD&lt;/span&gt; &lt;span class="no"&gt;OUTPUT1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;LRECL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
  &lt;span class="no"&gt;OUTFIL&lt;/span&gt; &lt;span class="no"&gt;FNAMES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;OUT1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;BUILD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                      
&lt;span class="sr"&gt;/*                                                          &lt;/span&gt;
&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;CTL2CNTL&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;                   &lt;span class="ss"&gt;:BUILD&lt;/span&gt; &lt;span class="no"&gt;OUTPUT2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;LRECL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
  &lt;span class="no"&gt;OUTFIL&lt;/span&gt; &lt;span class="no"&gt;FNAMES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;OUT2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;BUILD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     
&lt;span class="sr"&gt;/*      &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="z/OS"></category><category term="ICETOOL"></category></entry><entry><title>SORT: JOINKEY 文件连接</title><link href="http://mainframer.github.io/articles/SORT:%20JOINKEY%20%E6%96%87%E4%BB%B6%E8%BF%9E%E6%8E%A5.html" rel="alternate"></link><updated>2012-07-29T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-07-29:articles/SORT: JOINKEY 文件连接.html</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;STEP002&lt;/span&gt; &lt;span class="no"&gt;EXEC&lt;/span&gt;  &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SYNCSORT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;REGION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4096&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;COND&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;NE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;        
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSOUT&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                       
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSPRINT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                      
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTJNF1&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;FILE1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;                            
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTJNF2&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;FILE2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;                            
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTOUT&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;JOINOUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;                          
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSIN&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;                                                 
  &lt;span class="no"&gt;JOINKEYS&lt;/span&gt; &lt;span class="no"&gt;FILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;F1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;FIELDS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                            
  &lt;span class="no"&gt;JOINKEYS&lt;/span&gt; &lt;span class="no"&gt;FILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;F2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;FIELDS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                            
  &lt;span class="no"&gt;REFORMAT&lt;/span&gt; &lt;span class="no"&gt;FIELDS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;F1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="ss"&gt;F2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                           
  &lt;span class="no"&gt;SORT&lt;/span&gt; &lt;span class="no"&gt;FIELDS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;CH&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                                     
  &lt;span class="no"&gt;SUM&lt;/span&gt; &lt;span class="no"&gt;FIELDS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;NONE&lt;/span&gt;                                            
&lt;span class="sr"&gt;/*                                                           &lt;/span&gt;
&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="o"&gt;/*&lt;/span&gt;                                                          
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;FILE1&lt;/em&gt;和&lt;em&gt;FILE2&lt;/em&gt;必须按key值sort好，这里Join的key为前5个字符，结果只保留所有FILE1的KEY值。输出的格式为File1的前5位+File2第6开始的35位。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SUM FIELDS=NONE&lt;/p&gt;
&lt;p&gt;用于去掉KEY值重复的那些记录。&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="SORT"></category><category term="JOINKEY"></category></entry><entry><title>SORT:VB变长转FB定长,输出对齐</title><link href="http://mainframer.github.io/articles/SORT:VB%E5%8F%98%E9%95%BF%E8%BD%ACFB%E5%AE%9A%E9%95%BF,%E8%BE%93%E5%87%BA%E5%AF%B9%E9%BD%90.html" rel="alternate"></link><updated>2012-07-25T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-07-25:articles/SORT:VB变长转FB定长,输出对齐.html</id><summary type="html">&lt;p&gt;最近接触的项目，用的SORT的地方较多，准备写几篇sort的:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;STEP001&lt;/span&gt;  &lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SYNCSORT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;REGION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4096&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;                      
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSOUT&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                        
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSPRINT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                        
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTIN&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SORTIN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;                           
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTOUT&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="no"&gt;SORTOUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;NEW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;PASS&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;                   
&lt;span class="sr"&gt;//&lt;/span&gt;            &lt;span class="no"&gt;DCB&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;DSORG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;PS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;RECFM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;FB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;LRECL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;BLKSIZE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;      
&lt;span class="sr"&gt;//&lt;/span&gt;            &lt;span class="no"&gt;UNIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SYSDA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;SPACE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;CYL&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;RLSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSIN&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;                                                   
  &lt;span class="no"&gt;SORT&lt;/span&gt; &lt;span class="no"&gt;FIELDS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;COPY&lt;/span&gt;                                             
  &lt;span class="no"&gt;INCLUDE&lt;/span&gt; &lt;span class="no"&gt;COND&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;CH&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;EQ&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                                
  &lt;span class="no"&gt;OUTFIL&lt;/span&gt; &lt;span class="no"&gt;VTOF&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                                 
  &lt;span class="no"&gt;BUILD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;JFY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SHIFT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;LEFT&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;41&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="sr"&gt;/*                                                             &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;SORTIN&lt;/code&gt;是&lt;code&gt;LRECL=4000&lt;/code&gt;的VB格式，&lt;code&gt;SORTOUT&lt;/code&gt;是&lt;code&gt;LRECL=80&lt;/code&gt;的FB格式。Sort条件是第1位为'B'。输出格式：对于SORTIN中所有符合第1位为'B'的那些record，分别取其第2位开始的15位(左对齐),8开始的4位，37开始的3位，96开始的20位，118开始的2位。再加上36个末尾空格，组装成80长度的输出。&lt;/p&gt;</summary><category term="z/OS"></category><category term="SORT"></category><category term="VB FB"></category></entry><entry><title>PLI 动态数组的例子</title><link href="http://mainframer.github.io/articles/PLI%20%E5%8A%A8%E6%80%81%E6%95%B0%E7%BB%84%E7%9A%84%E4%BE%8B%E5%AD%90.html" rel="alternate"></link><updated>2012-06-14T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-06-14:articles/PLI 动态数组的例子.html</id><summary type="html">&lt;p&gt;新写了一个&lt;code&gt;PL/I&lt;/code&gt;程序，需要在程序里面用到动态数组来提高效率，所以总结了一下&lt;code&gt;PL/I&lt;/code&gt;中动态数组&lt;em&gt;(Dynamic Array)&lt;/em&gt;的用法：&lt;br /&gt;
&lt;em&gt;1&lt;/em&gt;.申明一个Controlled的数组叫做&lt;code&gt;WT_TMPARRAY_INFO&lt;/code&gt;,此时并不知道该数组的长度:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;DCL&lt;/span&gt;  &lt;span class="no"&gt;INPUTFIL&lt;/span&gt; &lt;span class="no"&gt;FILE&lt;/span&gt; &lt;span class="no"&gt;RECORD&lt;/span&gt; &lt;span class="no"&gt;INPUT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="no"&gt;DCL&lt;/span&gt;  &lt;span class="no"&gt;TMPARRAY_CTR&lt;/span&gt;         &lt;span class="no"&gt;FIXED&lt;/span&gt; &lt;span class="no"&gt;BIN&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="no"&gt;INIT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;                             
&lt;span class="no"&gt;DCL&lt;/span&gt;  &lt;span class="no"&gt;TMPARRAY_SUB&lt;/span&gt;         &lt;span class="no"&gt;FIXED&lt;/span&gt; &lt;span class="no"&gt;BIN&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="no"&gt;INIT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="no"&gt;DCL&lt;/span&gt; &lt;span class="mo"&gt;01&lt;/span&gt; &lt;span class="no"&gt;TMPARRAY_RECORD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                                        
        &lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;INPUT_CUR&lt;/span&gt;     &lt;span class="no"&gt;CHAR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mo"&gt;03&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;             &lt;span class="no"&gt;INIT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;                          
        &lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;INPUT_ACCT&lt;/span&gt;    &lt;span class="no"&gt;CHAR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mo"&gt;05&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;             &lt;span class="no"&gt;INIT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 

&lt;span class="sr"&gt;/*******定义未知长度的动态数组WT_TMPARRAY_INFO*************************/&lt;/span&gt;
&lt;span class="no"&gt;DCL&lt;/span&gt; &lt;span class="mo"&gt;01&lt;/span&gt; &lt;span class="no"&gt;WT_TMPARRAY_INFO&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;CONTROLLED&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                         
        &lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;WT_TMP_CUR&lt;/span&gt;  &lt;span class="no"&gt;CHAR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mo"&gt;03&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;             &lt;span class="no"&gt;INIT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;                          
        &lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;WT_TMP_ACCT&lt;/span&gt; &lt;span class="no"&gt;CHAR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mo"&gt;05&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;             &lt;span class="no"&gt;INIT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;2&lt;/em&gt;.一旦得知了数组需要的长度，即可为它allocate空间。数组的长度可以是外部文件传进来，也可以是你程序中逻辑计算得到，这个无所谓哪里来的,只要赋给变量&lt;code&gt;TMPARRAY_CTR&lt;/code&gt;就好了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ALLOCATE WT_TMPARRAY_INFO (TMPARRAY_CTR); &lt;/p&gt;
&lt;p&gt;&lt;em&gt;3&lt;/em&gt;.分配了空间之后即可初始化数组，给其赋值。
&lt;code&gt;rubyDO TMPARRAY_SUB = 1 TO TMPARRAY_CTR;                                     
          READ FILE(INPUTFIL) INTO (TMPARRAY_RECORD);                           
          WT_TMP_CUR(TMPARRAY_SUB)  = INPUT_CUR;                                  
          WT_TMP_ACCT(TMPARRAY_SUB) = INPUT_ACCT; 
END;&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="PLI"></category><category term="动态数组"></category></entry><entry><title>IBM DebugTool: 主动终止调试</title><link href="http://mainframer.github.io/articles/IBM%20DebugTool:%20%E4%B8%BB%E5%8A%A8%E7%BB%88%E6%AD%A2%E8%B0%83%E8%AF%95.html" rel="alternate"></link><updated>2012-06-03T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-06-03:articles/IBM DebugTool: 主动终止调试.html</id><summary type="html">&lt;p&gt;在debug程序的过程中，如果已经知道了出错的原因不想再继续debug下去，但是又不希望按PF9使程序继续正常执行完(因为这样程序会把你辛辛苦苦造好的测试数据给消耗掉)。这时候，你可以在&lt;code&gt;COMMAND&lt;/code&gt;栏输入：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;trigger overflow&lt;/p&gt;
&lt;p&gt;这样程序就会被当成正常溢出抛异常处理，你的测试数据就不会被消耗掉。除了&lt;code&gt;overflow&lt;/code&gt;，其他异常终止的event也可以，比如数据转换异常这样的event。&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="Debug Tool"></category></entry><entry><title>CICS中查看TSQ的命令:CEBR</title><link href="http://mainframer.github.io/articles/CICS%E4%B8%AD%E6%9F%A5%E7%9C%8BTSQ%E7%9A%84%E5%91%BD%E4%BB%A4:CEBR.html" rel="alternate"></link><updated>2012-05-27T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-05-27:articles/CICS中查看TSQ的命令:CEBR.html</id><summary type="html">&lt;p&gt;可以用CEBR这个transaction来查看和删除TSQ信息。这里:   &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CEBR#0VJ&lt;/code&gt;是&lt;em&gt;TSQ&lt;/em&gt;的名字;  &lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Z300&lt;/code&gt; 是当前&lt;em&gt;CICS region&lt;/em&gt;的名字。&lt;br /&gt;
```ruby  CEBR  TSQ CEBR#0VJ         SYSID Z300 REC     1 OF     0    COL     1 OF     0
  ENTER COMMAND ===&amp;gt;                                                          &lt;br /&gt;
&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;  TOP OF QUEUE  &lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;*&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*  BOTTOM OF QUEUE  &lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;*&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TS QUEUE CEBR#0VJ         DOES NOT EXIST                                     &lt;br /&gt;
 PF1 : HELP                PF2 : SWITCH HEX/CHAR     PF3 : TERMINATE BROWSE   &lt;br /&gt;
 PF4 : VIEW TOP            PF5 : VIEW BOTTOM         PF6 : REPEAT LAST FIND   &lt;br /&gt;
 PF7 : SCROLL BACK HALF    PF8 : SCROLL FORWARD HALF PF9 : UNDEFINED          &lt;br /&gt;
 PF10: SCROLL BACK FULL    PF11: SCROLL FORWARD FULL PF12: UNDEFINED          &lt;br /&gt;
```&lt;/p&gt;
&lt;p&gt;请查看IBM相关链接: &lt;br /&gt;
&lt;a href="http://publib.boulder.ibm.com/infocenter/cicsts/v3r2/index.jsp?topic=%2Fcom.ibm.cics.ts.doc%2Fdfha7%2Ftransactions%2Fcebr%2Fdfha71u.html"&gt;http://publib.boulder.ibm.com/infocenter/cicsts/v3r2/index.jsp?topic=%2Fcom.ibm.cics.ts.doc%2Fdfha7%2Ftransactions%2Fcebr%2Fdfha71u.html&lt;/a&gt;&lt;/p&gt;</summary><category term="TSQ"></category><category term="CEBR"></category></entry><entry><title>ISPF中Shift+PageUp和UNDO的区别</title><link href="http://mainframer.github.io/articles/ISPF%E4%B8%ADShift+PageUp%E5%92%8CUNDO%E7%9A%84%E5%8C%BA%E5%88%AB.html" rel="alternate"></link><updated>2012-05-15T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-05-15:articles/ISPF中Shift+PageUp和UNDO的区别.html</id><summary type="html">&lt;p&gt;两者都是撤销，相当于windows下的&lt;code&gt;'Ctrl+z'&lt;/code&gt;。但分工不同，&lt;code&gt;Shift+PageUp&lt;/code&gt;只能撤销未按回车之前的修改动作，对于按了回车就无力回天了。&lt;br /&gt;
而UNDO负责的是撤销回车之后的修改动作，请注意务必要事先用命令&lt;code&gt;'Rec on'&lt;/code&gt;打开&lt;em&gt;ISPF&lt;/em&gt;的&lt;em&gt;recovery&lt;/em&gt;开关。&lt;/p&gt;</summary><category term="Shift+PageUp"></category></entry><entry><title>TSO重新登录命令</title><link href="http://mainframer.github.io/articles/TSO%E9%87%8D%E6%96%B0%E7%99%BB%E5%BD%95%E5%91%BD%E4%BB%A4.html" rel="alternate"></link><updated>2012-05-04T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-05-04:articles/TSO重新登录命令.html</id><summary type="html">&lt;p&gt;有时候TSO异常退出，而服务器端进程还没kill掉，于是在你尝试再次登录的时候，返回提示：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“already logged on to system IKJ56400A ENTER LOGON OR LOGOFF-”&lt;/p&gt;
&lt;p&gt;用命令告诉远程主控端你要reconnect。 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;解决办法&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;logon yourUID recon
&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="TSO"></category><category term="IKJ56400A"></category></entry><entry><title>SOME INPUT DATA IGNORE</title><link href="http://mainframer.github.io/articles/SOME%20INPUT%20DATA%20IGNORE.html" rel="alternate"></link><updated>2012-05-03T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-05-03:articles/SOME INPUT DATA IGNORE.html</id><summary type="html">&lt;p&gt;在编辑dataset的时候如果右上角提示&lt;code&gt;SOME INPUT DATA IGNORE&lt;/code&gt;,请记得把每行末尾的行号关闭: &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NUM OFF&lt;/p&gt;
&lt;p&gt;否则，后面8位就是行号，将此文件作为程序的input的时候就危险了!&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="z/OS"></category></entry><entry><title>S000 U0004 ABEND ERROR</title><link href="http://mainframer.github.io/articles/S000%20U0004%20ABEND%20ERROR.html" rel="alternate"></link><updated>2012-04-30T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-04-30:articles/S000 U0004 ABEND ERROR.html</id><summary type="html">&lt;p&gt;遇到了&lt;code&gt;'S000 U0004 ABEND ERROR'&lt;/code&gt;错误。 &lt;br /&gt;
一如既往地分析dump，发现是由于我在JCL里面添加了&lt;code&gt;'PARM='TEST(ALL,,,VTAM%IBMUSER:)'&lt;/code&gt;的debug参数，而我要debug的程序的&lt;code&gt;loadmodule&lt;/code&gt;不在test环境里面，导致JCL试图去debug生产环境的&lt;em&gt;loadmodule&lt;/em&gt;，抛出&lt;code&gt;'S000 U0004‘&lt;/code&gt;错误，应该是&lt;em&gt;access vialation&lt;/em&gt;之类的错误吧,修改完&lt;em&gt;loadmodule&lt;/em&gt;的路径就好了。&lt;/p&gt;</summary><category term="S000 U0004"></category></entry><entry><title>Watir登陆微博发布微博</title><link href="http://mainframer.github.io/articles/Watir%E7%99%BB%E9%99%86%E5%BE%AE%E5%8D%9A%E5%8F%91%E5%B8%83%E5%BE%AE%E5%8D%9A.html" rel="alternate"></link><updated>2012-04-30T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-04-30:articles/Watir登陆微博发布微博.html</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#encoding: UTF-8                       #添加这一行才可以处理中文&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rubygems&amp;#39;&lt;/span&gt;                     &lt;span class="c1"&gt;#gem install xxx --no-ri --no-rdoc&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;timeout&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;watir-webdriver&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Watir&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Browser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:firefox&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:profile&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;goto&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;www.weibo.com&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text_field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;W_input&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;focus&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text_field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;W_input&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;your_weibo_email_account&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;inp password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text_field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;your_weibo_password&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;W_btn_g&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;click&lt;/span&gt;         &lt;span class="c1"&gt;#点击登陆按钮，也可以使用url，这个登陆按钮是使用js跳转的&lt;/span&gt;
&lt;span class="nb"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                                &lt;span class="c1"&gt;#等待3秒页面加载完毕&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text_field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;input_detail&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;我的第一条来自watir的微博！&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;send_btn&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;click&lt;/span&gt; 
&lt;span class="err"&gt;或者&lt;/span&gt; 
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;发布微博按钮&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;click&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Watir"></category></entry><entry><title>No space in directory</title><link href="http://mainframer.github.io/articles/No%20space%20in%20directory.html" rel="alternate"></link><updated>2012-04-23T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-04-23:articles/No space in directory.html</id><summary type="html">&lt;p&gt;在一个pds下面&lt;em&gt;create member&lt;/em&gt;的时候右上角出现错误：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;No space in directory&lt;/p&gt;
&lt;p&gt;按PF1,提示：  &lt;/p&gt;
&lt;p&gt;PDS directory is full, allocate more directory blocks.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5&gt;错误原因：当前PDS下面所容纳的member数量已经达到最大值了。用'I' 查看PDS的信息：&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;Current&lt;/span&gt; &lt;span class="no"&gt;Allocation&lt;/span&gt;             
  &lt;span class="no"&gt;Allocated&lt;/span&gt; &lt;span class="n"&gt;cylinders&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;       
  &lt;span class="no"&gt;Allocated&lt;/span&gt; &lt;span class="n"&gt;extents&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;       
  &lt;span class="no"&gt;Maximum&lt;/span&gt; &lt;span class="n"&gt;dir&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;blocks&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;      


 &lt;span class="no"&gt;Current&lt;/span&gt; &lt;span class="no"&gt;Utilization&lt;/span&gt;            
  &lt;span class="no"&gt;Used&lt;/span&gt; &lt;span class="n"&gt;cylinders&lt;/span&gt;  &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;       
  &lt;span class="no"&gt;Used&lt;/span&gt; &lt;span class="n"&gt;extents&lt;/span&gt;  &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;       
  &lt;span class="no"&gt;Used&lt;/span&gt; &lt;span class="n"&gt;dir&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;blocks&lt;/span&gt;  &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;      
  &lt;span class="no"&gt;Number&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;members&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;59&lt;/span&gt;      
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;原来，每个blocks可以有6个dir,于是PDS里面最多容纳的member数量= &lt;code&gt;(6 x no.of directory blocks)-1&lt;/code&gt; &lt;/p&gt;
&lt;h5&gt;上网搜索了下更详细的：&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;The number of member entries that fit in a directory block is as follows: &lt;br /&gt;
(1) For a data set with ISPF statistics: 6 entries per block.&lt;br /&gt;
(2) For a data set without ISPF statistics: 21 entries per block.&lt;br /&gt;
(3) For a load module data set: 4 to 7 entries depending upon.   &lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="z/OS"></category></entry><entry><title>CEE3250C S806 R=00000004</title><link href="http://mainframer.github.io/articles/CEE3250C%20S806%20%20R=00000004.html" rel="alternate"></link><updated>2012-04-11T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-04-11:articles/CEE3250C S806  R=00000004.html</id><summary type="html">&lt;p&gt;新写了个程序，JCL提交完出现错误:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;CEE3250C The system or user abend S806  R=00000004 was issued.    &lt;/p&gt;
&lt;p&gt;分析dump，发现原因是:程序不在loadlib里面 &lt;code&gt;"load module is not found in the library"&lt;/code&gt;.忘记promote程序到相应环境了!&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="CEE3250C S806"></category></entry><entry><title>PLI打印出PIC类型输出</title><link href="http://mainframer.github.io/articles/PLI%E6%89%93%E5%8D%B0%E5%87%BAPIC%E7%B1%BB%E5%9E%8B%E8%BE%93%E5%87%BA.html" rel="alternate"></link><updated>2012-04-01T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-04-01:articles/PLI打印出PIC类型输出.html</id><summary type="html">&lt;p&gt;使用PLI打印输出信息，最常见的是:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;PUT&lt;/span&gt; &lt;span class="no"&gt;SKIP&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;EDIT&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;CODE = &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;ERR_CODE&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这里是打印PIC类型的输出，不怎么常用。今天用到了，所以记在这:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;PUT&lt;/span&gt; &lt;span class="no"&gt;EDIT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ACCOUNT PROCESSED : &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;ACCOUNT_CTR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;      
                  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SKIP&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;COL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;999999999&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 

&lt;span class="no"&gt;PUT&lt;/span&gt; &lt;span class="no"&gt;SKIP&lt;/span&gt; &lt;span class="no"&gt;FILE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;OUTFILE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;EDIT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;CHENGDU: &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;SOURCE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ZZ,ZZZV.ZZ&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="PLI"></category><category term="PIC"></category></entry><entry><title>BLKSIZE=0,DSORG=PS</title><link href="http://mainframer.github.io/articles/BLKSIZE=0,DSORG=PS.html" rel="alternate"></link><updated>2012-03-13T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-03-13:articles/BLKSIZE=0,DSORG=PS.html</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTOUT&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="no"&gt;IBNRDAT0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;NEW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;PASS&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;            
&lt;span class="sr"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;DCB&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;DSORG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;PS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;RECFM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;FB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;LRECL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;53&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;BLKSIZE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="sr"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;UNIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SYSDA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;SPACE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;CYL&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;RLSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如上，始终用&lt;code&gt;BLKSIZE=0&lt;/code&gt;，让系统为JOB分配最优的BLKSIZE。这是一个好习惯!&lt;/p&gt;</summary><category term="BLKSIZE=0"></category></entry><entry><title>JCL发送EMAIL</title><link href="http://mainframer.github.io/articles/JCL%E5%8F%91%E9%80%81EMAIL.html" rel="alternate"></link><updated>2012-03-13T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-03-13:articles/JCL发送EMAIL.html</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt; &lt;span class="no"&gt;JOB&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;                &lt;span class="no"&gt;A1011000010TEST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;CLASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        
&lt;span class="sr"&gt;//&lt;/span&gt;        &lt;span class="no"&gt;MSGCLASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;REGION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;                                   
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;                                                              
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;STEP01&lt;/span&gt;   &lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IEBGENER&lt;/span&gt;  
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSOUT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;                                                                          
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSUT1&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="o"&gt;*&lt;/span&gt;                                                 
&lt;span class="no"&gt;HELO&lt;/span&gt; &lt;span class="no"&gt;MVS&lt;/span&gt;                                                         
&lt;span class="no"&gt;MAIL&lt;/span&gt; &lt;span class="ss"&gt;FROM&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="no"&gt;XIAOWONIU&lt;/span&gt;&lt;span class="vi"&gt;@SINA&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CN&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;                               
&lt;span class="no"&gt;RCPT&lt;/span&gt; &lt;span class="ss"&gt;TO&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="no"&gt;XIAOWONIU&lt;/span&gt;&lt;span class="vi"&gt;@SINA&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CN&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;                                  
&lt;span class="no"&gt;DATA&lt;/span&gt;                                                             
&lt;span class="ss"&gt;FROM&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="no"&gt;XIAOWONIU&lt;/span&gt;&lt;span class="vi"&gt;@SINA&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CN&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;                                       
&lt;span class="ss"&gt;TO&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="no"&gt;XIAOWONIU&lt;/span&gt;&lt;span class="vi"&gt;@SINA&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CN&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;                                         
&lt;span class="ss"&gt;SUBJECT&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;JOB&lt;/span&gt; &lt;span class="no"&gt;IBMUSERJ&lt;/span&gt; &lt;span class="no"&gt;HAS&lt;/span&gt; &lt;span class="no"&gt;COMPLETED&lt;/span&gt; &lt;span class="no"&gt;SUCCESSFULLY&lt;/span&gt;                      
&lt;span class="no"&gt;START&lt;/span&gt; &lt;span class="no"&gt;OF&lt;/span&gt; &lt;span class="no"&gt;MESSAGE&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;                                              
   &lt;span class="o"&gt;***&lt;/span&gt;    &lt;span class="no"&gt;DO&lt;/span&gt; &lt;span class="no"&gt;NOT&lt;/span&gt; &lt;span class="no"&gt;REPLY&lt;/span&gt; &lt;span class="no"&gt;TO&lt;/span&gt; &lt;span class="no"&gt;THIS&lt;/span&gt; &lt;span class="no"&gt;MESSAGE&lt;/span&gt;    &lt;span class="o"&gt;***&lt;/span&gt;   
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSUT2&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DEST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;YOURDEST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;IPSMTP&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                   
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSPRINT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                           
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSIN&lt;/span&gt;    &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DUMMY&lt;/span&gt;       
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这是一个JCL通过SMTP协议发送Email的例子，如果需要发送附件，可以再深入研究下!&lt;/p&gt;</summary><category term="JCL email"></category></entry><entry><title>使用UNIT=(SYSDA,20)</title><link href="http://mainframer.github.io/articles/%E4%BD%BF%E7%94%A8UNIT=(SYSDA,20).html" rel="alternate"></link><updated>2012-03-10T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-03-10:articles/使用UNIT=(SYSDA,20).html</id><summary type="html">&lt;p&gt;好几次&lt;em&gt;production abend&lt;/em&gt;都是因为JCL中分配的dataset太大，恰好一个volume上面的剩余空间都分配完了。&lt;br /&gt;
这里是DBA给的建议：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"Always code UNIT=(SYSDA,20) for all disk datasets.It will allow the dataset to go to multiple volumes automatically."
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="mo"&gt;000001&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;STEP001&lt;/span&gt;  &lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SYNCSORT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;REGION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4096&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;COND&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;NE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                  
&lt;span class="mo"&gt;000002&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSOUT&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                                
&lt;span class="mo"&gt;000003&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSPRINT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                                
&lt;span class="mo"&gt;000004&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTIN&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SYSDA20&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;                   
&lt;span class="mo"&gt;000005&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;         &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SYSDA20&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;                   
&lt;span class="mo"&gt;000006&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTWK01&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;UNIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SYSDA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;SPACE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;CYL&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;RLSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                
&lt;span class="mo"&gt;000007&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTWK02&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;UNIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SYSDA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;SPACE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;CYL&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;RLSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                
&lt;span class="mo"&gt;00000&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTOUT&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="no"&gt;SORTOUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;NEW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;PASS&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;                          
&lt;span class="mo"&gt;00000&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;DCB&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;DSORG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;PS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;RECFM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;FB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;LRECL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;BLKSIZE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;             
&lt;span class="mo"&gt;000000&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;UNIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SYSDA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;SPACE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;CYL&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;RLSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                
&lt;span class="mo"&gt;000011&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSIN&lt;/span&gt;    &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CNTL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;CNTLCD1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;                      
&lt;span class="mo"&gt;000012&lt;/span&gt; &lt;span class="o"&gt;//*&lt;/span&gt;                                                                    
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;所以，就当成标准吧，把&lt;code&gt;UNIT=SYSDA&lt;/code&gt;都改成&lt;code&gt;UNIT=(SYSDA,20)&lt;/code&gt;。&lt;/p&gt;</summary><category term="SYSDA"></category></entry><entry><title>ABENDED S000 U4088 REASON CODE=000003EC</title><link href="http://mainframer.github.io/articles/ABENDED%20S000%20U4088%20REASON%20CODE=000003EC.html" rel="alternate"></link><updated>2012-03-05T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-03-05:articles/ABENDED S000 U4088 REASON CODE=000003EC.html</id><summary type="html">&lt;p&gt;Sub一个job遇到错误:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ABENDED S000 U4088 REASON CODE=000003EC
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5&gt;Abend原因:&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;The U4088 RC=3EC abend in CEEPLPKA occurred because C:D 4.8.00 ran out of below the line storage
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5&gt;解决办法:&lt;/h5&gt;
&lt;p&gt;Change region to &lt;strong&gt;REGION=0M&lt;/strong&gt; &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="mo"&gt;000001&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt; &lt;span class="no"&gt;JOB&lt;/span&gt;  &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="no"&gt;RQ00XXXXX&lt;/span&gt;                                &lt;span class="mo"&gt;00010&lt;/span&gt;&lt;span class="no"&gt;TEST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    
&lt;span class="mo"&gt;000002&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;IBMUSER&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;CLASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;MSGCLASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;REGION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;             
&lt;/pre&gt;&lt;/div&gt;</summary><category term="S000 U4088"></category></entry><entry><title>常用的CICS命令</title><link href="http://mainframer.github.io/articles/%E5%B8%B8%E7%94%A8%E7%9A%84CICS%E5%91%BD%E4%BB%A4.html" rel="alternate"></link><updated>2012-03-01T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-03-01:articles/常用的CICS命令.html</id><summary type="html">&lt;p&gt;我们可以在&lt;code&gt;COBOL&lt;/code&gt;，&lt;code&gt;PL/I&lt;/code&gt;，&lt;code&gt;Assembler&lt;/code&gt;等应用程序中写&lt;code&gt;CICS&lt;/code&gt;命令，在&lt;code&gt;COBOL&lt;/code&gt;和&lt;code&gt;PL/I&lt;/code&gt;中，格式分别如下所示：&lt;/p&gt;
&lt;h5&gt;COBOL&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;CICS&lt;/span&gt; &lt;span class="n"&gt;function&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]]...&lt;/span&gt; &lt;span class="k"&gt;END&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;EXEC&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;PL/I&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;CICS&lt;/span&gt; &lt;span class="n"&gt;function&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]]...&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;末尾有分号&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;CICS的命令很多，不过最常用的也就是如下几个。所以，只要熟悉这几个的用法就好了，其他的当做了解即可，需要的时候再去查
&lt;a href="http://publib.boulder.ibm.com/infocenter/cicsts/v4r1/index.jsp?topic=%2Fcom.ibm.cics.ts.applicationprogramming.doc%2Fcommands%2Fdfhp4_abend.html"&gt;IBM CICS command summary&lt;/a&gt;或者CICS手册。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;CICS&lt;/span&gt; &lt;span class="no"&gt;ABEND&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="no"&gt;ABCODE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;CICS&lt;/span&gt; &lt;span class="no"&gt;ASKTIME&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="no"&gt;ABSTIME&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;CICS&lt;/span&gt; &lt;span class="no"&gt;ASSIGN&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="no"&gt;OPID&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;CICS&lt;/span&gt; &lt;span class="no"&gt;RETURN&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="no"&gt;TRANSID&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;CICS&lt;/span&gt; &lt;span class="no"&gt;HANDLE&lt;/span&gt; &lt;span class="no"&gt;CONDITION&lt;/span&gt;
&lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;CICS&lt;/span&gt; &lt;span class="no"&gt;IGNORE&lt;/span&gt; &lt;span class="no"&gt;CONDITION&lt;/span&gt;
&lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;CICS&lt;/span&gt; &lt;span class="no"&gt;READQ&lt;/span&gt; &lt;span class="no"&gt;TS&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="no"&gt;QUEUE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;CICS&lt;/span&gt; &lt;span class="no"&gt;WRITEQ&lt;/span&gt; &lt;span class="no"&gt;TS&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="no"&gt;QUEUE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;CICS&lt;/span&gt; &lt;span class="no"&gt;DELETEQ&lt;/span&gt; &lt;span class="no"&gt;TS&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="no"&gt;QUEUE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;CICS&lt;/span&gt; &lt;span class="no"&gt;RECEIVE&lt;/span&gt; &lt;span class="no"&gt;MAP&lt;/span&gt;
&lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;CICS&lt;/span&gt; &lt;span class="no"&gt;SEND&lt;/span&gt; &lt;span class="no"&gt;MAP&lt;/span&gt;
&lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;CICS&lt;/span&gt; &lt;span class="no"&gt;XCTL&lt;/span&gt; &lt;span class="no"&gt;PROGRAM&lt;/span&gt;
&lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;CICS&lt;/span&gt; &lt;span class="no"&gt;LINK&lt;/span&gt; &lt;span class="no"&gt;PROGRAM&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="CICS命令"></category></entry><entry><title>JCL提交REXX脚本</title><link href="http://mainframer.github.io/articles/JCL%E6%8F%90%E4%BA%A4REXX%E8%84%9A%E6%9C%AC.html" rel="alternate"></link><updated>2012-02-25T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-02-25:articles/JCL提交REXX脚本.html</id><summary type="html">&lt;h3&gt;来说说如何用JCL提交REXX脚本。&lt;/h3&gt;
&lt;h4&gt;1、写一个最简单的显示有一行提示的REXX脚本叫&lt;code&gt;SAYHELLO&lt;/code&gt;：&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="no"&gt;EDIT&lt;/span&gt;       &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;REXX&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EXEC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SAYHELLO&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mo"&gt;01&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;           &lt;span class="no"&gt;Member&lt;/span&gt; &lt;span class="no"&gt;SAYHELLO&lt;/span&gt; &lt;span class="n"&gt;saved&lt;/span&gt; 
&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="no"&gt;Command&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt;                                                  &lt;span class="no"&gt;Scroll&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;CSR&lt;/span&gt;  
&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;******&lt;/span&gt; &lt;span class="o"&gt;*****************************&lt;/span&gt; &lt;span class="no"&gt;Top&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="no"&gt;Data&lt;/span&gt; &lt;span class="o"&gt;******************************&lt;/span&gt;
&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mo"&gt;000001&lt;/span&gt; &lt;span class="o"&gt;/******************************&lt;/span&gt;&lt;span class="no"&gt;REXX&lt;/span&gt;&lt;span class="o"&gt;*********************************/&lt;/span&gt;                
&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="mo"&gt;000002&lt;/span&gt; &lt;span class="no"&gt;SAY&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;I WILL PRINT &amp;#39;HELLO&amp;#39; IN SYSTSPRT BY SUBMITTING JCL&amp;quot;&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;2、写一个JCL如下&lt;code&gt;IBMUSER.TEST.JCL(SAYHELLO)&lt;/code&gt;:&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;EDIT&lt;/span&gt;       &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;JCL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SAYHELLO&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mo"&gt;01&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;             &lt;span class="no"&gt;Columns&lt;/span&gt; &lt;span class="mo"&gt;00001&lt;/span&gt; &lt;span class="mo"&gt;0007&lt;/span&gt;
&lt;span class="no"&gt;Command&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt;                                                  &lt;span class="no"&gt;Scroll&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;CSR&lt;/span&gt;
&lt;span class="o"&gt;******&lt;/span&gt; &lt;span class="o"&gt;*****************************&lt;/span&gt; &lt;span class="no"&gt;Top&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="no"&gt;Data&lt;/span&gt; &lt;span class="o"&gt;****************************&lt;/span&gt;
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;IBMUSERS&lt;/span&gt; &lt;span class="no"&gt;JOB&lt;/span&gt;  &lt;span class="mo"&gt;000000000003&lt;/span&gt;&lt;span class="mi"&gt;92100&lt;/span&gt;&lt;span class="no"&gt;A01011000010TEST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    
&lt;span class="sr"&gt;//&lt;/span&gt;  &lt;span class="no"&gt;CLASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;MSGCLASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;NOTIFY&lt;/span&gt;&lt;span class="o"&gt;=&amp;amp;&lt;/span&gt;&lt;span class="no"&gt;SYSUID&lt;/span&gt;                                 
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;STEP01&lt;/span&gt; &lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IKJEFT01&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;REGION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;                                  
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSEXEC&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;REXX&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EXEC&lt;/span&gt; &lt;span class="sr"&gt;/*REXX LIB*/&lt;/span&gt;                         
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSTSIN&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;                              &lt;span class="sr"&gt;/*REXX MEM*/&lt;/span&gt;                         
  &lt;span class="no"&gt;SAYHELLO&lt;/span&gt;                                                            
&lt;span class="sr"&gt;/*                                                                    &lt;/span&gt;
&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;SYSTSPRT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;    
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;3、Sub JCL,输入&lt;code&gt;Q;ST&lt;/code&gt;到SDSF中的&lt;em&gt;SYSTSPRT&lt;/em&gt;查看输出信息如下：&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;SDSF&lt;/span&gt; &lt;span class="no"&gt;OUTPUT&lt;/span&gt; &lt;span class="no"&gt;DISPLAY&lt;/span&gt; &lt;span class="no"&gt;IBMUSERS&lt;/span&gt; &lt;span class="no"&gt;J0300135&lt;/span&gt;  &lt;span class="no"&gt;DSID&lt;/span&gt;   &lt;span class="mi"&gt;102&lt;/span&gt; &lt;span class="no"&gt;LINE&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;       &lt;span class="no"&gt;COLUMNS&lt;/span&gt; &lt;span class="mo"&gt;02&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;81&lt;/span&gt; 
 &lt;span class="no"&gt;COMMAND&lt;/span&gt; &lt;span class="no"&gt;INPUT&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt;                                            &lt;span class="no"&gt;SCROLL&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;CSR&lt;/span&gt; 
&lt;span class="o"&gt;*********************************&lt;/span&gt; &lt;span class="no"&gt;TOP&lt;/span&gt; &lt;span class="no"&gt;OF&lt;/span&gt; &lt;span class="no"&gt;DATA&lt;/span&gt; &lt;span class="o"&gt;*********************************&lt;/span&gt;
&lt;span class="no"&gt;READY&lt;/span&gt;                                                                          
  &lt;span class="no"&gt;SAYHELLO&lt;/span&gt;                                                                     
&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="no"&gt;WILL&lt;/span&gt; &lt;span class="no"&gt;PRINT&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;HELLO&amp;#39;&lt;/span&gt; &lt;span class="no"&gt;IN&lt;/span&gt; &lt;span class="no"&gt;SYSTSPRT&lt;/span&gt; &lt;span class="no"&gt;BY&lt;/span&gt; &lt;span class="no"&gt;SUBMITTING&lt;/span&gt; &lt;span class="no"&gt;JCL&lt;/span&gt;                             
&lt;span class="no"&gt;READY&lt;/span&gt;                                                                          
&lt;span class="k"&gt;END&lt;/span&gt;                                                                            
&lt;span class="o"&gt;********************************&lt;/span&gt; &lt;span class="no"&gt;BOTTOM&lt;/span&gt; &lt;span class="no"&gt;OF&lt;/span&gt; &lt;span class="no"&gt;DATA&lt;/span&gt; &lt;span class="o"&gt;*******************************&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="JCL"></category><category term="rexx"></category></entry><entry><title>REXX怎么保存"Find ALL"的结果</title><link href="http://mainframer.github.io/articles/REXX%E6%80%8E%E4%B9%88%E4%BF%9D%E5%AD%98%22Find%20ALL%22%E7%9A%84%E7%BB%93%E6%9E%9C.html" rel="alternate"></link><updated>2012-02-20T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-02-20:articles/REXX怎么保存"Find ALL"的结果.html</id><summary type="html">&lt;p&gt;最近的项目经常跟MQ打交道,将输入数据填在一个dataset里面提交给MQ解析，字段之间用逗号隔开。所以在测试MQ接口的时候会经常一边对着FSD文档，一边数dataset里面的逗号个数的情况。数多了就烦了。其实到今天才想起来可以用一个&lt;code&gt;"FIND ALL"&lt;/code&gt;的ISPF命令。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FIND ',' ALL&lt;/p&gt;
&lt;p&gt;这样，逗号的个数就不用数了，直接显示在屏幕右上角。&lt;br /&gt;
既然这样，利用REXX应该可以保存这个&lt;code&gt;“FIND ',' ALL'&lt;/code&gt;的结果。 研究了一下，可以这样:  &lt;br /&gt;
编辑 &lt;code&gt;IBMUSER.REXX.EXEC(CHECK)&lt;/code&gt;这个member,输入如下的macro：  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="no"&gt;ADDRESS&lt;/span&gt;  &lt;span class="no"&gt;ISPEXEC&lt;/span&gt;                       
&lt;span class="mi"&gt;2&lt;/span&gt;  &lt;span class="s2"&gt;&amp;quot;ISREDIT SEEK ALL &amp;#39;,&amp;#39;&amp;quot;&lt;/span&gt;                 
&lt;span class="mi"&gt;3&lt;/span&gt;  &lt;span class="s2"&gt;&amp;quot;ISREDIT (COUNT) = SEEK_COUNTS&amp;quot;&lt;/span&gt;        
&lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="no"&gt;SAY&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Comma number: &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;!!&lt;/span&gt; &lt;span class="no"&gt;COUNT&lt;/span&gt; &lt;span class="o"&gt;!!&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;#39;!&amp;#39;&amp;quot;&lt;/span&gt;  
&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="no"&gt;EXIT&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;打开MQ的DATASET，比如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;IBMUSER.PROJ.MQ.INPUT.SAMPLE&lt;/p&gt;
&lt;p&gt;在command栏上面输入CHECK即可运行，不过也就比输入&lt;code&gt;“FIND ',' ALL"&lt;/code&gt;来得方便一点点。&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="rexx"></category><category term="Find ALL"></category></entry><entry><title>Rexx顺序处理文件所有行</title><link href="http://mainframer.github.io/articles/Rexx%E9%A1%BA%E5%BA%8F%E5%A4%84%E7%90%86%E6%96%87%E4%BB%B6%E6%89%80%E6%9C%89%E8%A1%8C.html" rel="alternate"></link><updated>2012-02-17T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-02-17:articles/Rexx顺序处理文件所有行.html</id><summary type="html">&lt;p&gt;这是典型的自上而下扫描一个dataset中每一行,而做相应处理的Rexx脚本,几乎所有的处理文件I/O的Rexx脚本都会涉及到：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;ADDRESS&lt;/span&gt; &lt;span class="no"&gt;TSO&lt;/span&gt;                                                             
  &lt;span class="n"&gt;indataset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;IBMUSER.REXX.EXEC(INFILE)&amp;#39;&lt;/span&gt;  &lt;span class="sr"&gt;/*read in input file */&lt;/span&gt;      
  &lt;span class="s2"&gt;&amp;quot;alloc f(fin) ds(&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="n"&gt;indataset&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;#39;) shr reuse&amp;quot;&lt;/span&gt;   
  &lt;span class="s2"&gt;&amp;quot;execio * diskr fin (finis stem in.&amp;quot;&lt;/span&gt;                                  
  &lt;span class="s2"&gt;&amp;quot;free f(fin)&amp;quot;&lt;/span&gt;                                                         
 &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;        &lt;span class="o"&gt;/*&lt;/span&gt;&lt;span class="kp"&gt;loop&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="k"&gt;until&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="n"&gt;reached&lt;/span&gt; &lt;span class="o"&gt;*/&lt;/span&gt;           
    &lt;span class="n"&gt;one_line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                                                    
    &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="no"&gt;Do_Something&lt;/span&gt;                                          
 &lt;span class="k"&gt;end&lt;/span&gt;                                                                    
&lt;span class="no"&gt;EXIT&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;   

&lt;span class="no"&gt;Do_Something&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;          
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="z/OS"></category><category term="rexx"></category></entry><entry><title>ISPF下如何去掉程序的第72至80列</title><link href="http://mainframer.github.io/articles/ISPF%E4%B8%8B%E5%A6%82%E4%BD%95%E5%8E%BB%E6%8E%89%E7%A8%8B%E5%BA%8F%E7%9A%84%E7%AC%AC72%E8%87%B380%E5%88%97.html" rel="alternate"></link><updated>2012-02-07T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-02-07:articles/ISPF下如何去掉程序的第72至80列.html</id><summary type="html">&lt;p&gt;个人不是很喜欢&lt;code&gt;ISPF 3.13&lt;/code&gt;提供的两个Dataset比较的功能，总觉得看得不是很直观。平时还是比较习惯用windows下面的winmerge这个软件来比较。但是有个问题，就是比较的两个程序经常在第72列至80列的行号不一致，导致没法比较。所以这里就来总结一下如何去掉DATASET的中烦人的第72列至80列内容。  &lt;/p&gt;
&lt;h4&gt;方法一：直接在ISPF下面用命令去掉&lt;/h4&gt;
&lt;p&gt;这是最直接最快的办法。去掉第72列至80列的命令有下面两个：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;NUM&lt;/span&gt; &lt;span class="no"&gt;ON&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="no"&gt;UNNUMB&lt;/span&gt;
&lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;^&amp;#39;&lt;/span&gt; &lt;span class="err"&gt;’&lt;/span&gt; &lt;span class="err"&gt;’&lt;/span&gt; &lt;span class="mi"&gt;73&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt; &lt;span class="no"&gt;ALL&lt;/span&gt;    &lt;span class="sr"&gt;/* Changes all non-space characters to spaces in col 73 to 80*/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h4&gt;方法二：用第三方脚本实现&lt;/h4&gt;
&lt;p&gt;上面的方法如果是只有少数几个程序，那么手动命令去掉第72列至80列没什么。但是如果你一下子需要对几百个dataset或者同一个PDS下面的所有member去掉第72列至80列，则最好最快的办法是将所有代码通过FTP下载到本地，然后用第三方脚本语言(如VB,Phthon,Ruby,JS等)来解决。&lt;br /&gt;
这里是一段自己的Ruby脚本，作用是将&lt;code&gt;C:\prod&lt;/code&gt;文件夹下面的所有程序的第72列至80列内容置空，然后输出到文件夹&lt;code&gt;C:\prod72col&lt;/code&gt;下面。可以看到，用第三方脚本实现批量的任务是很方便的。&lt;br /&gt;
```ruby01 def cutto72col(file_in,file_out)
02    file_in=File.new(file_in,‘r’)
03    file_out=File.new(file_out,‘w’)
04    oneline=file_in.gets
05    while(oneline != nil)
06      oneline=oneline.chomp
07      oneline=oneline[0..71]
08      file_out.puts oneline
09      oneline=file_in.gets
10    end
11 end
12
13 path_in=‘C:\prod\’
14 path_out=‘C:prod72col\’
15
16 Dir.foreach(path_in){ |file|
17 if file != ‘.’ &amp;amp;&amp;amp; file != ‘..’
18 then
19    file_in = path_in + file
20    cutto72col(file_in,path_out + file)
21 end                }&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;当然，你还可以直接在大机上面用&lt;/span&gt;REXX&lt;span class="err"&gt;脚本直接对整个&lt;/span&gt;PDS&lt;span class="err"&gt;操作，移去该&lt;/span&gt;PDS&lt;span class="err"&gt;下所有&lt;/span&gt;member&lt;span class="err"&gt;的第&lt;/span&gt;&lt;span class="m"&gt;72&lt;/span&gt;&lt;span class="err"&gt;列至&lt;/span&gt;&lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="err"&gt;列内容。这里也附上我的&lt;/span&gt;REXX&lt;span class="err"&gt;脚本&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="err"&gt;作用是将&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;IBMUSER&lt;span class="o"&gt;.&lt;/span&gt;TEST&lt;span class="o"&gt;.&lt;/span&gt;PRGM&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="err"&gt;这个&lt;/span&gt;PDS&lt;span class="err"&gt;下面所有的&lt;/span&gt;member&lt;span class="err"&gt;的第&lt;/span&gt;&lt;span class="m"&gt;72&lt;/span&gt;&lt;span class="err"&gt;列至第&lt;/span&gt;&lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="err"&gt;列的行号都去掉：&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
&lt;span class="err"&gt;```&lt;/span&gt;ruby&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;/***********************REXX******************************************/&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;/*Loop PDS to remove whatever between col72 to col80 for each member */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;/**********************************************************************/&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="cm"&gt;/* Trace i  */&lt;/span&gt;&lt;span class="w"&gt;                                                          &lt;/span&gt;
pdsname&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;TEST.PRGM&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="cm"&gt;/*Check if pds is exsited */&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;
&lt;span class="kr"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;sysdsn&lt;span class="o"&gt;(&lt;/span&gt;pdsname&lt;span class="o"&gt;)&amp;lt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;OK&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;then&lt;/span&gt;&lt;span class="w"&gt;                                          &lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kr"&gt;do&lt;/span&gt;&lt;span class="w"&gt;                                                                  &lt;/span&gt;
&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="kr"&gt;say&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Error: Specified PDS not found:&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;pdsname&lt;span class="w"&gt;                    &lt;/span&gt;
&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="kr"&gt;say&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Error: &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;pdsname&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot; &amp;gt; &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;sysdsn&lt;span class="o"&gt;(&lt;/span&gt;pdsname&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt;                      &lt;/span&gt;
&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="kr"&gt;say&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Press Enter to continue&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;                                    &lt;/span&gt;
&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="kr"&gt;pull&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;uresp&lt;span class="w"&gt;                                                       &lt;/span&gt;
&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="kr"&gt;exit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="w"&gt;                                                           &lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kr"&gt;end&lt;/span&gt;&lt;span class="w"&gt;                                                                 &lt;/span&gt;

&lt;span class="kr"&gt;call&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;outtrap&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;mbrs.&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="cm"&gt;/*call outtrap to capture LISTD output */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="s"&gt;&amp;quot;LISTD&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;pdsname&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;MEMBERS&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="cm"&gt;/*List member list*/&lt;/span&gt;&lt;span class="w"&gt;                     &lt;/span&gt;
&lt;span class="kr"&gt;call&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;outtrap&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;off&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="cm"&gt;/*Turn off outtrap*/&lt;/span&gt;&lt;span class="w"&gt;                     &lt;/span&gt;

&lt;span class="kr"&gt;do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;i&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;mbrs&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt;                                                    &lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cm"&gt;/*SAY &amp;quot;mbrs.&amp;quot; !! i !! &amp;quot;: &amp;quot; !!   mbrs.i */&lt;/span&gt;&lt;span class="w"&gt;                          &lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kr"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;mbrs&lt;span class="o"&gt;.&lt;/span&gt;i&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;--MEMBERS--&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;then&lt;/span&gt;&lt;span class="w"&gt;                                    &lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="kr"&gt;do&lt;/span&gt;&lt;span class="w"&gt;                                                               &lt;/span&gt;
&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="kr"&gt;leave&lt;/span&gt;&lt;span class="w"&gt;                                                          &lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="kr"&gt;end&lt;/span&gt;&lt;span class="w"&gt;                                                              &lt;/span&gt;
&lt;span class="kr"&gt;end&lt;/span&gt;&lt;span class="w"&gt;                                                                 &lt;/span&gt;

&lt;span class="cm"&gt;/*start to loop on each member*/&lt;/span&gt;&lt;span class="w"&gt;                                    &lt;/span&gt;
i&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;i&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt;                                                             &lt;/span&gt;
&lt;span class="kr"&gt;do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;j&lt;span class="o"&gt;=&lt;/span&gt;i&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;mbrs&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="cm"&gt;/*mbrs.0 is the total line num of LISTD */&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cm"&gt;/*SAY &amp;quot;mbrs.&amp;quot; !! j !! &amp;quot;: &amp;quot; !!   mbrs.j */&lt;/span&gt;&lt;span class="w"&gt;                             &lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="kr"&gt;parse&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;value&lt;span class="w"&gt; &lt;/span&gt;mbrs&lt;span class="o"&gt;.&lt;/span&gt;j&lt;span class="w"&gt; &lt;/span&gt;with&lt;span class="w"&gt; &lt;/span&gt;mem&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cm"&gt;/*split mbrs.j*/&lt;/span&gt;&lt;span class="w"&gt;                        &lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;mem&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;strip&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;mem&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="cm"&gt;/*remove leading and trailing character*/&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;pds&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;IBMUSER.TEST.PRGM&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;                                     &lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;mpds&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;pds&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;!!&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;(&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;!!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;mem&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;!!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;)&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;                                      &lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ISPEXEC EDIT DATASET(&amp;#39;&amp;quot;&lt;/span&gt;mpds&lt;span class="s"&gt;&amp;quot;&amp;#39;) MACRO(MACRO01)&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;                     &lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;end&lt;/span&gt;&lt;span class="w"&gt;                                       &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这是上面主Rexx程序调用的&lt;em&gt;MACRO01&lt;/em&gt;:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;/*****************************REXX***********************************/&lt;/span&gt;
&lt;span class="no"&gt;ADDRESS&lt;/span&gt;  &lt;span class="no"&gt;ISPEXEC&lt;/span&gt; 
&lt;span class="s2"&gt;&amp;quot;ISREDIT MACRO&amp;quot;&lt;/span&gt;  
&lt;span class="s2"&gt;&amp;quot;ISREDIT RES&amp;quot;&lt;/span&gt;    
&lt;span class="s2"&gt;&amp;quot;ISREDIT NUM ON&amp;quot;&lt;/span&gt; 
&lt;span class="s2"&gt;&amp;quot;ISREDIT UNNUM&amp;quot;&lt;/span&gt;  
&lt;span class="s2"&gt;&amp;quot;ISREDIT SAVE&amp;quot;&lt;/span&gt;   
&lt;span class="s2"&gt;&amp;quot;ISREDIT END&amp;quot;&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;</summary><category term="ISPF"></category><category term="rexx"></category></entry><entry><title>REXX学习笔记</title><link href="http://mainframer.github.io/articles/REXX%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html" rel="alternate"></link><updated>2012-02-05T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-02-05:articles/REXX学习笔记.html</id><summary type="html">&lt;p&gt;最近在学习Rexx脚本，打算做一些自动化。归纳了些点总结下放在这里以备查询。  &lt;/p&gt;
&lt;h3&gt;一些基本概念&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;REXX: &lt;code&gt;REstructured eXtended eXecutor (REXX) language&lt;/code&gt; 扩充结构化执行语言  &lt;/li&gt;
&lt;li&gt;REXX中变量无需事前定义  &lt;/li&gt;
&lt;li&gt;Debug REXX:用REXX TRACE或者用interactive debug facility来定位error  &lt;/li&gt;
&lt;li&gt;SAA Procedures Language：REXX的子集，在TSO/E,CICS,IMS等多种环境中应用 &lt;/li&gt;
&lt;li&gt;要运行REXX exec，必须至少有一种可用的&lt;code&gt;Host command environments&lt;/code&gt;。默认的是&lt;code&gt;TSO&lt;/code&gt;。还有&lt;code&gt;MVS&lt;/code&gt;,&lt;code&gt;LINK&lt;/code&gt;,&lt;code&gt;LINKMVS&lt;/code&gt;,&lt;code&gt;LINKPGM&lt;/code&gt;,&lt;code&gt;ATTACH&lt;/code&gt;,&lt;code&gt;ATTCHMVS&lt;/code&gt;,&lt;code&gt;ATTCHPGM&lt;/code&gt;,&lt;code&gt;ISPEXEC&lt;/code&gt;,&lt;code&gt;ISREDIT&lt;/code&gt;,&lt;code&gt;CONSOLE&lt;/code&gt;,&lt;code&gt;CPICOMM&lt;/code&gt;,&lt;code&gt;LU62&lt;/code&gt;,&lt;code&gt;APPCMVS&lt;/code&gt;等等，常用的有&lt;code&gt;TSO&lt;/code&gt;,&lt;code&gt;ISPEXEC&lt;/code&gt;和&lt;code&gt;ISREDIT&lt;/code&gt;在ISFP下面，基本都提供。用&lt;code&gt;ADDRESS&lt;/code&gt;关键字来改变&lt;code&gt;Host command environment&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;要想用TSO命令调用REXX，必须先构建包含exec的PDS.推荐的PDS格式为: &lt;em&gt;youruid.REXX.EXEC&lt;/em&gt; (Userid+any name+exec) ,不然用TSO调用PDS中的REXX程序会报错:&lt;br /&gt;
PHASE 1 PROCESSING OF CLIST OR REXX EXEC ENDED ABNORMALLY +
ABEND CODE: S213    REASON CODE: 0004     &lt;/li&gt;
&lt;li&gt;可以在非TSO/E编址的环境中调用&lt;code&gt;IKJTSOEV&lt;/code&gt;来创建TSO/E环境   &lt;/li&gt;
&lt;li&gt;REXX的exec里面可以包含TSO/E命令(用引号括起来)，即使是只包含TSO/E命令，不仅如此，RExx exec能调用的命令包括TSO/E命令，APPC/MVS calls,MVS module invocations,ISPF commands, ISPF/PDF EDIT commands                                                  &lt;/li&gt;
&lt;li&gt;为了防止和CLISTs不兼容，IBM建议所有的REXX程序都在__第一行__有个注释的REXX字眼  &lt;/li&gt;
&lt;li&gt;如果想让REXX支持双字节编码，那么必须在exec的第一行写上：OPTIONS ETMODE  &lt;/li&gt;
&lt;li&gt;REXX大小写不敏感   &lt;/li&gt;
&lt;li&gt;为了解决PULL进来的是小写而&lt;code&gt;SAY&lt;/code&gt;显示出来的是大写的问题，可以吧PULL改成PARSE PULL。因为language  processor在处理之前都会先将所有的character装成大写再处理，用PARSE PULL可以解决这个问题。(ARG也是同理)  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;SAY &amp;quot;Please type in the name of an animal.&amp;quot;
PARSE PULL animal /-  输入小写的- /
SAY animal  /- 返回的即是小写的- /
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;一般一行一句instruction,除非遇到逗号和分号。 逗号是用来续行的，分号用来表示一个instruction结束，一般用在一行有多个instruction的时候
如果不希望续行的时候有空格，则需要用 &lt;code&gt;‘||，’&lt;/code&gt; 不然只用逗号续行的话会默认添加一个空格:  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;SAY &amp;#39;This is&amp;#39; ||,
&amp;#39;a string.&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;虽然是脚本语言，但编译过的REXX比没有编译过的REXX执行效率更高，因为只需编译一次,系统加载和相应时间减少了&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;如何执行REXX&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;1.&lt;/em&gt; 在READY的界面上执行     &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;READY&lt;/span&gt;                           
&lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;YUORUID.REXX.EXEC(TEST01)&amp;#39;&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;_2._在任何时候调用&lt;code&gt;TSO TEST01&lt;/code&gt;执行   &lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;REXX关键字&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SAY&lt;/code&gt;：   向SYSPRINT的output DD发消息    &lt;/li&gt;
&lt;li&gt;&lt;code&gt;PULL&lt;/code&gt;:   从SYSPRINT(终端)的input DD接受消息，实际上是从DATA STACK中取的，用PUSH往DATA STACK中压入一个数据    &lt;/li&gt;
&lt;li&gt;&lt;code&gt;TRACE&lt;/code&gt;:  向SYSTSPRT的output DD发送消息    &lt;/li&gt;
&lt;li&gt;&lt;code&gt;PARSE EXTERNAL&lt;/code&gt;:   从SYSTSIN的input DD接受消息    &lt;/li&gt;
&lt;li&gt;&lt;code&gt;LEAVE&lt;/code&gt;:   跳出循环不做了    &lt;/li&gt;
&lt;li&gt;&lt;code&gt;ITERATE&lt;/code&gt;:  放在DO循环里面，跳过余下指令返回DO，接着往下做   &lt;/li&gt;
&lt;li&gt;&lt;code&gt;EXIT&lt;/code&gt;:   告诉language processor结束exec，不强制用但按惯例推荐用，因为language processor在没有instruction的时候自动结束。EXIT后面可以跟返回参数      &lt;/li&gt;
&lt;li&gt;&lt;code&gt;Label:&lt;/code&gt;:   以冒号结束，常在subroutine和function的时候配合SIGNAL用    &lt;/li&gt;
&lt;li&gt;&lt;code&gt;ARG&lt;/code&gt;:      定义exec的参数 E513472.REXX.EXEC(ADD)  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;PARSE&lt;/code&gt;:    与PULL和ARG等配合使用，为了能显示大小写区分   &lt;/li&gt;
&lt;li&gt;&lt;code&gt;PARSE VAR&lt;/code&gt;：   将一个字符串分割成多个字符串(空格区分) 类似于&lt;code&gt;PARSE VALUE ... WITH&lt;/code&gt;   &lt;/li&gt;
&lt;li&gt;&lt;code&gt;TRACE I&lt;/code&gt; (TRACE Intermediates):   用来debug用的，能显示出具体的每一步执行结果    &lt;/li&gt;
&lt;li&gt;&lt;code&gt;NULL&lt;/code&gt;:    language processor会忽略它，单纯只是为了增强可读性    &lt;/li&gt;
&lt;li&gt;&lt;code&gt;ELSE&lt;/code&gt;:    即使ELSE没有东西，也要用NOP。编程规范     &lt;/li&gt;
&lt;li&gt;&lt;code&gt;PROCEDURE&lt;/code&gt;:   用在subroutine定义的时候，保护subroutine里面定义的变量的对外可见性     &lt;/li&gt;
&lt;li&gt;&lt;code&gt;ADDRESS&lt;/code&gt;:    用来改变Host command environment      &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;流程控制&lt;/h3&gt;
&lt;h6&gt;条件指令&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;IF&lt;/span&gt; &lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;THEN&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;ELSE&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;二选&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="no"&gt;SELECT&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;WHEN&lt;/span&gt; &lt;span class="n"&gt;expression&lt;/span&gt; &lt;span class="no"&gt;THEN&lt;/span&gt; &lt;span class="n"&gt;instruction&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;OTHERWISE&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;END&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="err"&gt;（多选&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h6&gt;循环指令&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;DO&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;TO&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="n"&gt;BY&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;END&lt;/span&gt;  
&lt;span class="n"&gt;DO&lt;/span&gt; &lt;span class="n"&gt;FOREVER&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;END&lt;/span&gt;
&lt;span class="n"&gt;DO&lt;/span&gt; &lt;span class="n"&gt;WHILE&lt;/span&gt; &lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;END&lt;/span&gt;
&lt;span class="n"&gt;DO&lt;/span&gt; &lt;span class="n"&gt;UNTIL&lt;/span&gt; &lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;END&lt;/span&gt;
&lt;span class="n"&gt;DO&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;TO&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="n"&gt;WHILE&lt;/span&gt; &lt;span class="n"&gt;quantity&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt; &lt;span class="o"&gt;/-&lt;/span&gt; &lt;span class="err"&gt;复合循环指令例子&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h6&gt;中断指令&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;EXIT&lt;/span&gt;
&lt;span class="n"&gt;SIGNAL&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;  &lt;span class="o"&gt;/-&lt;/span&gt; &lt;span class="err"&gt;执行完之后不会像&lt;/span&gt;&lt;span class="n"&gt;CALL&lt;/span&gt;&lt;span class="err"&gt;一样会返回控制权&lt;/span&gt;
&lt;span class="n"&gt;CALL&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;RETURN&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h3&gt;运算符&lt;/h3&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;/ = \=(不相等) &amp;gt;&amp;lt;(不相等) //(余数) - - (幂) %(商) ==(严格相等) \==(不严格相等) &amp;gt; &amp;lt; &amp;gt;=(大等于) \&amp;lt;(不小于) &amp;amp;(逻辑与) (逻辑非) |(逻辑或)  per_cent'%'(百分号表示法,per_cent是数值参数)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;h3&gt;50个built-in函数(不全)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Arithmetic functions&lt;/em&gt;&lt;/strong&gt;: ABS DIGITS FORM FUZZ MAX MIN RANDOM SIGN TRUNC     &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Comparison functions&lt;/em&gt;&lt;/strong&gt;: COMPARE DATATYPE SYMBOL      &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Conversion functions&lt;/em&gt;&lt;/strong&gt;: B2X C2D C2X D2C D2X X2B X2C X2D /- Binary hex Character Decimal)    &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Formatting functions&lt;/em&gt;&lt;/strong&gt;: CENTER/COPIES/FORMAT/JUSTIFY/LEFT/RIGHT/SPACE    &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;String functions&lt;/em&gt;&lt;/strong&gt;:  ABBREV/DELSTR/DELWORD/FIND/INDEX/INSERT/LASTPOS/LENGTH/OVERLAY/  POS/REVERSE/STRIP/SUBSTR/SUBWORD/TRANSLATE/VERIFY/WORD/WORDINDEX     &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Miscellaneous functions&lt;/em&gt;&lt;/strong&gt;: ADDRESS/ARG/BITAND/BITOR/BITXOR/CONDITION/DATE/ERRORTEXT/  EXTERNALS/LINESIZE/QUEUED/SOURCELINE/TIME/TRACE/USERID/VALUE/XRANGE   &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3&gt;Function和Subroutine区别&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;CALL&lt;/span&gt; &lt;span class="n"&gt;subroutine_name&lt;/span&gt; &lt;span class="n"&gt;argument1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;argument2&lt;/span&gt;&lt;span class="p"&gt;,...&lt;/span&gt; &lt;span class="o"&gt;/-&lt;/span&gt; &lt;span class="n"&gt;Subroutine&lt;/span&gt;&lt;span class="err"&gt;不必要返回值，如果返回的话就是&lt;/span&gt;&lt;span class="n"&gt;RESULT&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;  
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argument1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;argument2&lt;/span&gt;&lt;span class="p"&gt;,...)&lt;/span&gt;        &lt;span class="o"&gt;/-&lt;/span&gt; &lt;span class="n"&gt;Function&lt;/span&gt; &lt;span class="err"&gt;必须返回值&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h3&gt;TSO/E external functions&lt;/h3&gt;
&lt;p&gt;GETMSG LISTDSI MSG MVSVAR OUTTRAP PROMPT SETLANG STORAGE SYSCPUS SYSDSN SYSVAR  &lt;/p&gt;</summary><category term="z/OS"></category><category term="REXX"></category></entry><entry><title>PL/I编译器版本</title><link href="http://mainframer.github.io/articles/PLI%E7%BC%96%E8%AF%91%E5%99%A8%E7%89%88%E6%9C%AC.html" rel="alternate"></link><updated>2012-02-02T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-02-02:articles/PLI编译器版本.html</id><summary type="html">&lt;p&gt;PL/I编译器的版本，如下所示：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;Product&lt;/span&gt;        &lt;span class="no"&gt;Product&lt;/span&gt; &lt;span class="nb"&gt;name&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;                        &lt;span class="no"&gt;Compiler&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;signature&amp;quot;&lt;/span&gt;   &lt;span class="no"&gt;Module&lt;/span&gt; &lt;span class="n"&gt;prefix&lt;/span&gt; 
&lt;span class="mi"&gt;360&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;NL&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;511&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;360&lt;/span&gt; &lt;span class="no"&gt;OS&lt;/span&gt; &lt;span class="no"&gt;PL&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;         &lt;span class="s1"&gt;&amp;#39;   &amp;#39;&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;&lt;span class="no"&gt;IEM&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;IHE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;IHL&lt;/span&gt;
&lt;span class="mi"&gt;5734&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;PL1&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="no"&gt;OS&lt;/span&gt; &lt;span class="no"&gt;PL&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="no"&gt;OPTIMIZING&lt;/span&gt; &lt;span class="no"&gt;COMPILER&lt;/span&gt; &lt;span class="no"&gt;V1&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;       &lt;span class="mi"&gt;5734&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;PL1&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;   &lt;span class="err"&gt; &lt;/span&gt;  &lt;span class="no"&gt;IEL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;IBM&lt;/span&gt;
&lt;span class="mi"&gt;5734&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;PL2&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="no"&gt;OS&lt;/span&gt; &lt;span class="no"&gt;PL&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="no"&gt;CHECKOUT&lt;/span&gt; &lt;span class="no"&gt;COMPILER&lt;/span&gt;
&lt;span class="mi"&gt;5734&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;PL3&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="no"&gt;OS&lt;/span&gt; &lt;span class="no"&gt;PL&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="no"&gt;Opt&lt;/span&gt; &lt;span class="no"&gt;Comp&lt;/span&gt; &lt;span class="no"&gt;Lib&lt;/span&gt; &lt;span class="no"&gt;Kanji&lt;/span&gt; &lt;span class="no"&gt;Name&lt;/span&gt; &lt;span class="no"&gt;Support&lt;/span&gt;
&lt;span class="mi"&gt;5668&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;909&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="no"&gt;OS&lt;/span&gt; &lt;span class="no"&gt;PL&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="no"&gt;V2&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;COMP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;LIB&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;TEST&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="mi"&gt;5668&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;910&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="no"&gt;OS&lt;/span&gt; &lt;span class="no"&gt;PL&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="no"&gt;V2&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;COMP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;LIB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;  &lt;span class="mi"&gt;5668&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;910&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;&lt;span class="no"&gt;IEL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;IBM&lt;/span&gt;
&lt;span class="mi"&gt;5668&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;911&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="no"&gt;OS&lt;/span&gt; &lt;span class="no"&gt;PL&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="no"&gt;V2&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;Library&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;IBM&lt;/span&gt;
&lt;span class="mi"&gt;5688&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;235&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="no"&gt;PL&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="no"&gt;MVS&lt;/span&gt; &lt;span class="no"&gt;AND&lt;/span&gt; &lt;span class="no"&gt;VM&lt;/span&gt; &lt;span class="no"&gt;V1&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;   &lt;span class="mi"&gt;5688&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;235&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;&lt;span class="no"&gt;IEL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;IBM&lt;/span&gt;
&lt;span class="mi"&gt;5655&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;B22&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="no"&gt;VisualAge&lt;/span&gt; &lt;span class="no"&gt;PL&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="no"&gt;OS&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;390&lt;/span&gt; &lt;span class="no"&gt;V2&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;     &lt;span class="mi"&gt;5655&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;B22&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;  &lt;span class="no"&gt;IEL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;IBM&lt;/span&gt;
&lt;span class="mi"&gt;5655&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;H31&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="no"&gt;Enterprise&lt;/span&gt; &lt;span class="no"&gt;PL&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;OS&lt;/span&gt; &lt;span class="no"&gt;V3&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;    &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="mi"&gt;5655&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;H31&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;  &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt;  &lt;/span&gt;&lt;span class="no"&gt;IBM&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这里是原链接地址：&lt;a href="http://gsf-soft.com/Documents/PRODCODES.shtml"&gt;http://gsf-soft.com/Documents/PRODCODES.shtml&lt;/a&gt;   &lt;br /&gt;
编译完&lt;code&gt;PL/I&lt;/code&gt;程序之后，在生成的&lt;em&gt;loadmodule&lt;/em&gt;二进制文件里面查找&lt;code&gt;Compiler signature&lt;/code&gt;(如&lt;code&gt;5655-235&lt;/code&gt;),对照上表即可知道编译器的版本。&lt;/p&gt;</summary><category term="z/OS"></category><category term="PLi编译器"></category></entry><entry><title>用PIC型中间变量解决Fixed赋值溢出abend</title><link href="http://mainframer.github.io/articles/%E7%94%A8PIC%E5%9E%8B%E4%B8%AD%E9%97%B4%E5%8F%98%E9%87%8F%E8%A7%A3%E5%86%B3Fixed%E8%B5%8B%E5%80%BC%E6%BA%A2%E5%87%BAabend.html" rel="alternate"></link><updated>2012-01-11T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-01-11:articles/用PIC型中间变量解决Fixed赋值溢出abend.html</id><summary type="html">&lt;p&gt;我在Debug一个PLI程序&lt;code&gt;PRGM000&lt;/code&gt;的时候遇到了一个&lt;code&gt;CEE34A abend&lt;/code&gt;，报的错误信息如下：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You were prompted because the CEE34A condition was raised in your
program.
CEE34A is a severity or class 3 condition.
The operating system has generated the following message:
CEE3210S The system detected a decimal-overflow exception (System
Completion Code=0CA).
The current location is PRGM000 ::&amp;gt; PRGM000 :&amp;gt; 2688.&lt;/p&gt;
&lt;p&gt;不废话，直接上截图：
&lt;img alt="1" src="./../images/CEE3201S-0CA-abend.jpg" /&gt;  &lt;br /&gt;
从图上可以看出，出错的语句是：&lt;/p&gt;
&lt;p&gt;TBL_KEY1.TRADE_DATE = COMM_AREA.TRADE_DATE
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;我们来看二者的定义&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;COMM_AREA.TRADE_DATE&lt;/code&gt;的定义&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="no"&gt;COMM_AREA&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="no"&gt;USER_AREA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="no"&gt;TRADE_DATE&lt;/span&gt; &lt;span class="no"&gt;FIXED&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="sr"&gt;/* 20110901 */&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;TBL_KEY1.TRADE_DATE&lt;/code&gt;的定义
```rubyDCL 1 TBL_KEY1
3 SPARE_CLIENT CHAR(4),
3 IDENT_ID CHAR(9),
3 TRADE_DATE FIXED(7),
3 NUM FIXED(3);&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;所以很明显，发生abend的原因是把一个`FIXED(9)`的值赋给了一个`FIXED(7)`的变量，从而产生了溢出。
###下面是解决办法:
定义一个**PIC类型**的中间变量 **`PIC_TRADE_DATE_9`** 做转换桥梁：  
```ruby
DCL PIC_TRADE_DATE_9 PIC &amp;#39;(9)9&amp;#39; INIT(0);
PIC_TRADE_DATE_9 = COMM_AREA.TRADE_DATE;
(值:020110901)        (值：20110901)
TBL_KEY1.TRADE_DATE = SUBSTR (PIC_TRADE_DATE_9,4,6);
(值：110901)          (值：110901)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;到这里，问题已经得到解决。&lt;/p&gt;</summary><category term="CEE3201S"></category></entry><entry><title>利用SRCHFOR在PDS中搜索字符串</title><link href="http://mainframer.github.io/articles/%E5%88%A9%E7%94%A8SRCHFOR%E5%9C%A8PDS%E4%B8%AD%E6%90%9C%E7%B4%A2%E5%AD%97%E7%AC%A6%E4%B8%B2.html" rel="alternate"></link><updated>2011-12-24T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-12-24:articles/利用SRCHFOR在PDS中搜索字符串.html</id><summary type="html">&lt;p&gt;之前的文章说到了一个叫&lt;code&gt;Mem xxx&lt;/code&gt;  的命令可以用来在一系列PDS中搜索一个名字叫做xxx的member，今天我来说下如何在一个PDS里面所有的member内容当中搜索特定字符串。其实就是利用&lt;code&gt;search-for&lt;/code&gt; 的应用程序，比较常规的方法是道&lt;em&gt;ISPF&lt;/em&gt;的&lt;em&gt;3.14&lt;/em&gt;菜单里面搜索，如下图所示，就是在 &lt;code&gt;"IBMUSER.PROJ.TEST.JCL"&lt;/code&gt;这个PDS里面所有的member内容中，搜索一个叫&lt;strong&gt;"STRING"&lt;/strong&gt;的字符串：
&lt;img alt="1" src="./../images/PDS-SRCHFOR_001.jpg" /&gt;    &lt;br /&gt;
当然，如果你想直接在当前PDS下调用&lt;code&gt;search-for utility&lt;/code&gt;来搜索特定字符串，可以在&lt;code&gt;command line&lt;/code&gt;上输入命令：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;SRCHFOR&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;STRING&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;来在当前PDS下面搜索字符串&lt;strong&gt;”STRING“&lt;/strong&gt;,具体如下面2张截图所示：
&lt;img alt="1" src="./../images/PDS-SRCHFOR_002.jpg" /&gt;      &lt;br /&gt;
&lt;img alt="1" src="./../images/PDS-SRCHFOR_003.jpg" /&gt;      &lt;br /&gt;
如果想同时在多个PDS当中搜索一个字符串，或者多个字符串那么该如何做呢？这时你可能就需要用到JCL来调用&lt;strong&gt;&lt;code&gt;ISRSUPC&lt;/code&gt;&lt;/strong&gt;这个utility了。这个&lt;strong&gt;&lt;code&gt;ISRSUPC&lt;/code&gt;&lt;/strong&gt;的功能可强大多了，具体可以参照下我之前的文章: &amp;lt;&amp;lt;用ISRSUPC在PDS所有member中搜索指定字符串&amp;gt;&amp;gt;，这里不重复了。&lt;/p&gt;</summary><category term="SRCHFOR"></category></entry><entry><title>美国50个州中英文[带音标]</title><link href="http://mainframer.github.io/articles/%E7%BE%8E%E5%9B%BD50%E4%B8%AA%E5%B7%9E%E4%B8%AD%E8%8B%B1%E6%96%87[%E5%B8%A6%E9%9F%B3%E6%A0%87].html" rel="alternate"></link><updated>2011-12-12T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-12-12:articles/美国50个州中英文[带音标].html</id><summary type="html">&lt;p&gt;&lt;strong&gt;序号   州名                                    简称　                 首府名&lt;/strong&gt;
01. Alabama &lt;a href="亚拉巴马"&gt;,ælə’bæmə&lt;/a&gt;             – AL–       Montgomery &lt;a href="蒙哥马利"&gt;mənt’gʌməri&lt;/a&gt;&lt;br /&gt;
02. Alaska  &lt;a href="阿拉斯加"&gt;ə’læskə&lt;/a&gt;               – AK–       Juneau  &lt;a href="朱诺"&gt;‘dʒu:nəu&lt;/a&gt;&lt;br /&gt;
03. Arizona  [æri’zəunə]  (亚利桑那)          – AZ–       Phoenix &lt;a href="菲尼克斯"&gt;‘fi:niks&lt;/a&gt;&lt;br /&gt;
04. Arkansas &lt;a href="阿肯色"&gt;‘ɑ:kənsɔ:&lt;/a&gt;              – AR–       Little rock(小石城)&lt;br /&gt;
05. California  &lt;a href="加利福尼亚"&gt;,kæli’fɔ:njə&lt;/a&gt;    – CA–       Sacramento &lt;a href="萨克拉门托"&gt;,sækrə’mentəu&lt;/a&gt;&lt;br /&gt;
06. Colorado  &lt;a href="科罗拉多"&gt;,kʌlə’rɑ:dəu&lt;/a&gt;        – CO–       Denver  &lt;a href="丹佛"&gt;‘denvə&lt;/a&gt;&lt;br /&gt;
07. Connecticut &lt;a href="康涅狄格"&gt;kə’netikət&lt;/a&gt;        – CT–       Hartford  &lt;a href="哈特福德"&gt;‘hɑ:tfəd&lt;/a&gt;&lt;br /&gt;
08. Delaware  &lt;a href="特拉华"&gt;‘deləwɛə&lt;/a&gt;              – DE–       Dover &lt;a href="多佛"&gt;‘dəuvə&lt;/a&gt;&lt;br /&gt;
09. Florida   &lt;a href="佛罗里达"&gt;‘flɔridə&lt;/a&gt;            – FL–       Tallahassee  &lt;a href="塔拉哈西"&gt;,tælə’hæsi&lt;/a&gt;&lt;br /&gt;
10. Georgia  &lt;a href="佐治亚"&gt;‘dʒɔ:dʒjə&lt;/a&gt;              – GA–       Atlanta  &lt;a href="亚特兰大"&gt;ət’læntə&lt;/a&gt;&lt;br /&gt;
11. Hawaii &lt;a href="夏威夷"&gt;hə’waii:&lt;/a&gt;                 – HI–       Honolulu  &lt;a href="檀香山"&gt;,hɔnə’lu:lu:&lt;/a&gt;&lt;br /&gt;
12. Idaho &lt;a href="爱达荷"&gt;‘aidəhəu&lt;/a&gt;                  – ID–       Boise  &lt;a href="博伊西"&gt;‘bɔisi&lt;/a&gt;&lt;br /&gt;
13. Illinois [,ili’nɔi(z) (伊利诺伊)          – IL–       Springfield   &lt;a href="斯普林菲尔德"&gt;‘spriŋfi:ld&lt;/a&gt;&lt;br /&gt;
14. Indiana  &lt;a href="印第安纳"&gt;,indi’ænə&lt;/a&gt; 　         – IN–       Indianapolis  &lt;a href="印第安纳波利斯"&gt;,indiə’næpəlis&lt;/a&gt;&lt;br /&gt;
15. Iowa  &lt;a href="艾奥瓦"&gt;‘aiəwə&lt;/a&gt;                    – IA–       Des Moines (得梅因)&lt;br /&gt;
16. Kansas  &lt;a href="堪萨斯"&gt;‘kænzəs&lt;/a&gt;                 – KS–       Topeka   &lt;a href="托皮卡"&gt;tə’pi:kə&lt;/a&gt;&lt;br /&gt;
17. Kentucky  &lt;a href="肯塔基"&gt;ken’tʌki; kən-&lt;/a&gt;        – KY–       Frankfort  &lt;a href="法兰克福"&gt;‘fræŋkfət&lt;/a&gt;&lt;br /&gt;
18. Louisiana &lt;a href="路易斯安那"&gt;lu:,i:zi’ænə&lt;/a&gt;      – LA–        Baton Rouge &lt;a href="巴吞鲁日"&gt;ru:ʒ, ru:dʒ&lt;/a&gt;&lt;br /&gt;
19. Maine  &lt;a href="缅因"&gt;mein&lt;/a&gt;                       – ME–        Augusta  &lt;a href="奥古斯塔"&gt;ɔ:’gʌstə&lt;/a&gt;&lt;br /&gt;
20. Maryland &lt;a href="马里兰"&gt;‘mεərilænd&lt;/a&gt;             – MD–       Annapolis  &lt;a href="安纳波利斯"&gt;ə’næpəlis&lt;/a&gt;&lt;br /&gt;
21. Massachusetts&lt;a href="马萨诸塞"&gt;,mæsə’tʃu:sits&lt;/a&gt;   – MA         Boston  &lt;a href="波士顿"&gt;‘bɔstən&lt;/a&gt;&lt;br /&gt;
22. Michigan  &lt;a href="密歇根"&gt;‘miʃiɡən&lt;/a&gt;              – MI–       Lansing &lt;a href="兰辛"&gt;‘lænsiŋ&lt;/a&gt;  &lt;br /&gt;
23. Minnesota  &lt;a href="明尼苏达"&gt;,mini’səutə&lt;/a&gt;         – MN        St. Paul(圣保罗)  &lt;br /&gt;
24. Mississippi &lt;a href="密西西比"&gt;ˌmisiˈsipi&lt;/a&gt;        – MS–       Jackson(杰克逊)  &lt;br /&gt;
25. Missouri  &lt;a href="密苏里"&gt;mi’zuəri&lt;/a&gt;               – MO–       Jefferson City(杰斐逊城)  &lt;br /&gt;
26. Montana &lt;a href="蒙大拿"&gt;mɔn’tænə&lt;/a&gt;                 – MT–       Helena  &lt;a href="海伦娜"&gt;he’li:nə&lt;/a&gt;  &lt;br /&gt;
27. Nebraska  &lt;a href="内布拉斯加"&gt;ni’bræskə&lt;/a&gt;           – NE–      Lincoln &lt;a href="林肯"&gt;‘liŋkən&lt;/a&gt;  &lt;br /&gt;
28. Nevada  &lt;a href="内华达"&gt;ni’vædə&lt;/a&gt;                  – NV–      Carson City(卡森城)  &lt;br /&gt;
29. New hampshire  &lt;a href="新罕布什尔"&gt;‘hæmpʃə&lt;/a&gt;       – NH-      Concord &lt;a href="康科德"&gt;‘kɔŋkɔ:d&lt;/a&gt;  &lt;br /&gt;
30. New jersey  &lt;a href="新泽西"&gt;‘dʒə:zi&lt;/a&gt;              – NJ–      Trenton  &lt;a href="特伦顿"&gt;‘trentən&lt;/a&gt;  &lt;br /&gt;
31. New mexico &lt;a href="新墨西哥"&gt;‘meksikəu&lt;/a&gt;            – NM–     Santa Fe  &lt;a href="圣菲"&gt;‘sæntə&lt;/a&gt;  &lt;br /&gt;
32. New york(纽约)                             – NY–      Albany  &lt;a href="奥尔巴尼"&gt;‘ɔ:bəni&lt;/a&gt;  &lt;br /&gt;
33. North carolina &lt;a href="北卡罗来纳"&gt;,kærə’lainə&lt;/a&gt;    – NC-      Raleigh &lt;a href="纳罗利"&gt;‘rɔ:li&lt;/a&gt;  &lt;br /&gt;
34. North dakota  &lt;a href="北达科他"&gt;də’kəutə&lt;/a&gt;         – ND–      Bismarck  &lt;a href="俾斯麦"&gt;‘bizma:k&lt;/a&gt;  &lt;br /&gt;
35. Ohio  &lt;a href="俄亥俄"&gt;əu’haiəu&lt;/a&gt;                    –OH–       Columbus &lt;a href="哥伦布"&gt;kə’lʌmbəs&lt;/a&gt;  &lt;br /&gt;
36. Oklahoma &lt;a href="俄克拉何马"&gt;,əuklə’həumə&lt;/a&gt;         –OK–     Oklahoma City(俄克拉何马城)  &lt;br /&gt;
37. Oregon  &lt;a href="俄勒冈"&gt;‘ɔriɡən&lt;/a&gt;                  –OR–      Salem &lt;a href="塞勒姆"&gt;‘seiləm&lt;/a&gt;  &lt;br /&gt;
38. Pennsylvania &lt;a href="宾夕法尼亚"&gt;,pensil’veinjə&lt;/a&gt;   –PA-      Harrisburg  &lt;a href="哈里斯堡"&gt;‘hærisbə:ɡ&lt;/a&gt;  &lt;br /&gt;
39. Rhode island  &lt;a href="罗得岛"&gt;rəud&lt;/a&gt;                –RL–      Providence &lt;a href="普罗维登斯"&gt;‘prɔvidəns&lt;/a&gt;  &lt;br /&gt;
40. South carolina(南卡罗来纳)                  –SC–      Columbia  &lt;a href="哥伦比亚"&gt;kə’lʌmbiə&lt;/a&gt;  &lt;br /&gt;
41. South dakota  &lt;a href="南达科他"&gt;də’kəutə&lt;/a&gt;         –SD–      Pierre &lt;a href="皮尔"&gt;pi(:)’ɛə&lt;/a&gt;  &lt;br /&gt;
42. Tennessee  &lt;a href="田纳西"&gt;,teni’si:&lt;/a&gt;             –TN– 　   Nashville  &lt;a href="纳什维尔"&gt;‘næʃvil&lt;/a&gt; &lt;br /&gt;
43. Texas &lt;a href="德克萨斯"&gt;‘teksəs&lt;/a&gt;                  –TX–      Austin  &lt;a href="奥斯汀"&gt;‘ɔ:stin&lt;/a&gt;  &lt;br /&gt;
44. Utah  &lt;a href="犹他"&gt;‘ju:tɑ:&lt;/a&gt;                     –UT–      Salt Lake City(盐湖城)  &lt;br /&gt;
45. Vermont &lt;a href="佛蒙特"&gt;və:’mɔnt&lt;/a&gt;                 –VT–     Montpelier &lt;a href="蒙彼利埃"&gt;mɔnt’pi:ljə&lt;/a&gt;  &lt;br /&gt;
46. Virginia  &lt;a href="弗吉尼亚"&gt;və(:)’dʒinjə&lt;/a&gt;         –VA–      Richmond  &lt;a href="里士满"&gt;‘ritʃmənd&lt;/a&gt;  &lt;br /&gt;
47. Washington  &lt;a href="华盛顿"&gt;‘wɔʃiŋtən&lt;/a&gt;            –WA–     Olympia  &lt;a href="奥林匹亚"&gt;əu’limpiə&lt;/a&gt;  &lt;br /&gt;
48. West virginia(西弗吉尼亚)                   –WV–     Charleston  &lt;a href="查尔斯顿"&gt;‘tʃa:lstən&lt;/a&gt;  &lt;br /&gt;
49. Wisconsin  &lt;a href="威斯康星"&gt;wis’kɔnsin&lt;/a&gt;           –WI–      Madison  &lt;a href="麦迪逊"&gt;‘mædisən&lt;/a&gt;  &lt;br /&gt;
50. Wyoming  &lt;a href="怀俄明"&gt;wai’əumiŋ&lt;/a&gt;                –WY–      Cheyenne  &lt;a href="夏延"&gt;ʃai’en&lt;/a&gt;    &lt;/p&gt;</summary></entry><entry><title>Watir自动为优酷视频刷顶</title><link href="http://mainframer.github.io/articles/Watir%E8%87%AA%E5%8A%A8%E4%B8%BA%E4%BC%98%E9%85%B7%E8%A7%86%E9%A2%91%E5%88%B7%E9%A1%B6.html" rel="alternate"></link><updated>2011-12-02T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-12-02:articles/Watir自动为优酷视频刷顶.html</id><summary type="html">&lt;p&gt;很喜欢优酷上面的一个节目，想帮帮它早日升到排行榜怎么办？写个脚本好了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#encoding: UTF-8                       #添加这一行才可以处理中文&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rubygems&amp;#39;&lt;/span&gt;                     &lt;span class="c1"&gt;#gem install xxx --no-ri --no-rdoc&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;timeout&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;watir-webdriver&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Watir&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Browser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:firefox&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:profile&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;driver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timeouts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;implicit_wait&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;                  &lt;span class="c1"&gt;#默认的等待页面加载30秒若还未加载完成则会跑出timeout异常，这里可以修改成60秒&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;goto&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://v.youku.com/v_show/id_XNTE5MTY3NzI4.html&amp;#39;&lt;/span&gt;    &lt;span class="c1"&gt;#假设我现在要为这个视频刷“顶”&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;                                             &lt;span class="c1"&gt;#假设我这里要&amp;quot;顶&amp;quot;100次，你也可以&amp;quot;顶&amp;quot;无限次&lt;/span&gt;
    &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cookies&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;P_T&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                                
    &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cookies&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;P_F&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cookies&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;updown_XNTE5MTY3NzI4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                &lt;span class="c1"&gt;#删除浏览器里面的cookies之后再“顶”。我是通过查看所有cookies来确定哪一个cookies是这个属于视频的。&lt;/span&gt;
    &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;refresh&lt;/span&gt;   &lt;span class="c1"&gt;#刷新页面&lt;/span&gt;
    &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;fn_updown&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;em&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ico_up&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;click&lt;/span&gt;       &lt;span class="c1"&gt;# 点击&amp;quot;顶&amp;quot;&amp;quot;&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cookies&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_a&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Watir"></category></entry><entry><title>Job(JCL)返回码</title><link href="http://mainframer.github.io/articles/Job(JCL)%E8%BF%94%E5%9B%9E%E7%A0%81.html" rel="alternate"></link><updated>2011-11-28T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-11-28:articles/Job(JCL)返回码.html</id><summary type="html">&lt;h4&gt;提交JCL最常见的返回码就是&lt;code&gt;0、4、8、12、16&lt;/code&gt;，当然还有&lt;code&gt;ABEND&lt;/code&gt;。&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;&lt;code&gt;CC=0&lt;/code&gt;&lt;/em&gt;  作业正确执行(Executed Successfully) &lt;br /&gt;
&lt;em&gt;&lt;code&gt;CC=4&lt;/code&gt;&lt;/em&gt;  警告 一般不影响作业执行 (Executed Successfully but with warnings) &lt;br /&gt;
&lt;em&gt;&lt;code&gt;CC=8&lt;/code&gt;&lt;/em&gt;  作业可以执行，但执行的不完整 (Error)&lt;br /&gt;
&lt;em&gt;&lt;code&gt;CC=12&lt;/code&gt;&lt;/em&gt; 作业不能执行 (Serious Error)&lt;br /&gt;
&lt;em&gt;&lt;code&gt;CC=16&lt;/code&gt;&lt;/em&gt; 严重错误，中断后续命令的执行(Fatal Error)  &lt;br /&gt;
&lt;em&gt;&lt;code&gt;ABEND&lt;/code&gt;&lt;/em&gt; 作业异常终止 &lt;/p&gt;
&lt;h4&gt;下面是一些常见的JCL ABEND CODES&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;S0C4&lt;/code&gt; Protection Abend.Caused by the subscript being out of range&lt;br /&gt;
&lt;code&gt;S0C5&lt;/code&gt; Addressing Abend.Caused by invalid address specification. i.e. The address points&lt;br /&gt;
to an instruction, control word or data outside the available real storage&lt;br /&gt;
&lt;code&gt;S0C7&lt;/code&gt; Caused by a bad data. i.e. Data exception. When we are moving an alphanumeric field to a numeric computational field this Abend occurs. The result is an Abend failure  &lt;br /&gt;
&lt;code&gt;S222&lt;/code&gt; Caused by a job being cancelled by the operator, due to a request by the program for an unavailable resource.&lt;br /&gt;
&lt;code&gt;S237&lt;/code&gt; Caused by end of volume being encountered.&lt;br /&gt;
&lt;code&gt;S322&lt;/code&gt; Caused when CPU time assigned to the job, job step, or procedure has been exceeded. i.e. Time out error.&lt;br /&gt;
&lt;code&gt;S413&lt;/code&gt; This abend occurs if the DD statement referenced by UNIT=AFF statement is not closed before the DD statement that comes before it.&lt;br /&gt;
&lt;code&gt;S522&lt;/code&gt; Caused when a wait state exceeds an installation-defined time limit.  &lt;br /&gt;
&lt;code&gt;SB37&lt;/code&gt; Caused by lack of sufficient Secondary space&lt;br /&gt;
&lt;code&gt;SD37&lt;/code&gt; Caused by lack of sufficient Primary space&lt;br /&gt;
&lt;code&gt;SE37&lt;/code&gt; Caused by lack of space for PDS (Partitioned data set)&lt;br /&gt;
&lt;code&gt;S722&lt;/code&gt; Too many lines of print.&lt;br /&gt;
&lt;code&gt;S804&lt;/code&gt; Region too small for the program.&lt;br /&gt;
&lt;code&gt;S806&lt;/code&gt; Program not on the library. May need a JOBLIB or STEPLIB.&lt;br /&gt;
&lt;code&gt;S80A&lt;/code&gt; Region too small for the program.&lt;br /&gt;
&lt;code&gt;S913&lt;/code&gt; Security violation.&lt;br /&gt;
&lt;code&gt;SB14&lt;/code&gt; No space in a library directory for this member's name.&lt;br /&gt;
&lt;code&gt;SB37&lt;/code&gt; Insufficient disk space.&lt;br /&gt;
&lt;code&gt;S0C1&lt;/code&gt; Executing a program with an unresolved external reference.&lt;br /&gt;
&lt;code&gt;S042&lt;/code&gt; Privileged Operation Abend.Read/write to unopened file&lt;br /&gt;
&lt;code&gt;S0C6&lt;/code&gt; Specification Abend&lt;br /&gt;
&lt;code&gt;S0CB&lt;/code&gt; Attempting to divide by 0 and not using ON SIZE ERROR&lt;br /&gt;
&lt;code&gt;U1002&lt;/code&gt; Conflicting file attributes. See S013.&lt;br /&gt;
&lt;code&gt;U1005&lt;/code&gt; Executing with modules compiled both with RES and NORES&lt;br /&gt;
&lt;code&gt;U1006&lt;/code&gt; Subscript out of range&lt;br /&gt;
&lt;code&gt;U1017&lt;/code&gt; Missing DD statement in JCL for DISPLAY or ACCEPT verb&lt;br /&gt;
&lt;code&gt;U1020&lt;/code&gt; Problem opening or processing a file.Check the file status.&lt;br /&gt;
&lt;code&gt;U1035&lt;/code&gt; Conflicting DCB parameters. Same as S013.&lt;br /&gt;
&lt;code&gt;U1056&lt;/code&gt; Program didn't close a file before ending&lt;br /&gt;
&lt;code&gt;U4038&lt;/code&gt; COBOL LE intercepted the Abend. Messages in CEEDUMP.  &lt;/p&gt;
&lt;p&gt;Job异常终止(Abend)的原因很多，返回码也是列不完的。上述仅仅是列举了稍微比较常见的abend返回码而已。在遇到具体返回码的时候，还是需要查manual,看job log。当然，如果你所在的公司恰好也安装了类似于MVS/QuickRef的帮助文档，那就再好不过了，只需一个命令：&lt;code&gt;QW xxx&lt;/code&gt;即可随时查看返回码。具体可以参看我之前写的一篇文章：&lt;br /&gt;
&lt;a href="http://flyuphigh.com/mvs-zos-mainframe/batch-jcl-ispf-tso/qw-mvsquickref.html"&gt;QW命令——MVS/QuickRef帮助文档&lt;/a&gt;  。当然，如果没有安装这类的帮助文档，那也没关系，因为任何时候，Google和baidu都是你最好的帮手。&lt;/p&gt;</summary><category term="JCL 返回码"></category></entry><entry><title>利用IBM File Manager查看COPYBOOK</title><link href="http://mainframer.github.io/articles/%E5%88%A9%E7%94%A8IBM%20File%20Manager%E6%9F%A5%E7%9C%8BCOPYBOOK.html" rel="alternate"></link><updated>2011-11-17T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-11-17:articles/利用IBM File Manager查看COPYBOOK.html</id><summary type="html">&lt;p&gt;这篇文章就来说下在大机上如何利用&lt;code&gt;IBM File Manager&lt;/code&gt;来查看&lt;em&gt;copybook&lt;/em&gt;的结构，特别是每个字段的起始位置。  &lt;/p&gt;
&lt;h4&gt;1.在&lt;em&gt;Command&lt;/em&gt;栏输入&lt;code&gt;0;5;1&lt;/code&gt; 设置自动检测语言&lt;/h4&gt;
&lt;p&gt;这样，不论你的copybook是PLI的还是COBOL的，FileManager都能自动检测出来。
&lt;img alt="1" src="./../images/IBMfilemanager-copybook-view_001.jpg" /&gt;&lt;br /&gt;
&lt;img alt="1" src="./../images/IBMfilemanager-copybook-view_002.jpg" /&gt;    &lt;/p&gt;
&lt;h4&gt;2.设置好之后，进入&lt;code&gt;3；13 (Utility-&amp;amp;gt;Copybook)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/IBMfilemanager-copybook-view_003.jpg" /&gt;  &lt;/p&gt;
&lt;h6&gt;这里填写copybook的路径和member名，member栏也可以不写:&lt;/h6&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/IBMfilemanager-copybook-view_004.jpg" /&gt;  &lt;/p&gt;
&lt;h6&gt;接着就能查看copybook内容了，特别是查看某个字段起始位置的时候特别有用。&lt;/h6&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/IBMfilemanager-copybook-view_005.jpg" /&gt;  &lt;/p&gt;
&lt;h6&gt;上面的&lt;code&gt;MYPLICPY&lt;/code&gt;是PLI的copybook，COBOL的这里就不上图了，上图很累的。&lt;/h6&gt;</summary><category term="File Manager"></category><category term="Copybook"></category></entry><entry><title>Changeman的Stage和Checkout</title><link href="http://mainframer.github.io/articles/Changeman%E7%9A%84Stage%E5%92%8CCheckout.html" rel="alternate"></link><updated>2011-11-13T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-11-13:articles/Changeman的Stage和Checkout.html</id><summary type="html">&lt;p&gt;把一个component(比如程序PRGM001)弄到package里面去有两种方法：一是&lt;code&gt;stage&lt;/code&gt;，二是&lt;code&gt;checkout&lt;/code&gt;。&lt;/p&gt;
&lt;h3&gt;Stage&lt;/h3&gt;
&lt;p&gt;所谓的stage就是当生产环境上面没有的，而你要将一个新的component弄到生产上面去的时候用stage。比如生产环境上面没有PRGM001这个程序，如果你最终想把这个程序通过Changeman安装到生产环境，那你就得现在自己的PDS下面建一个名为PRGM001的程序： &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;TESTUID&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PRGMLIB&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;PRGM001&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后stage到changeman里面去，具体做法是在ISPF输入:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;输入你的Package ID,回车 
在Package前面输入命令：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="no"&gt;S1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="1" src="./../images/changeman-01.jpg" /&gt;    &lt;/p&gt;
&lt;h3&gt;Checkout&lt;/h3&gt;
&lt;p&gt;和stage不同，checkout是针对那些已经存在于生产环境里面的components。它们是有版本之分的，比如你要Checkout一个现在已经存在于生产环境的PRGM002,在Package前面输入命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="no"&gt;C1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="1" src="./../images/changeman-02.jpg" /&gt; &lt;br /&gt;
这里注意一下&lt;strong&gt;SOURCE LIBRARY. &lt;/strong&gt;
&lt;code&gt;SOURCE LIBRARY=0&lt;/code&gt; 说明checkout的是当前生产环境baseline里面的最新版本。
&lt;code&gt;SOURCE LIBRARY=-1&lt;/code&gt;说明checkout的是比当前生产环境baseline旧的一个版本。
以此类推...&lt;br /&gt;
最后，在Package ID前面输入命令&lt;code&gt;S2&lt;/code&gt;，查看package里面所有的components(PRGM001和PRGM002)&lt;/p&gt;</summary><category term="z/OS"></category><category term="Changeman"></category></entry><entry><title>IBM大型机12月16日起支持Windows系统[转载]</title><link href="http://mainframer.github.io/articles/IBM%E5%A4%A7%E5%9E%8B%E6%9C%BA12%E6%9C%8816%E6%97%A5%E8%B5%B7%E6%94%AF%E6%8C%81Windows%E7%B3%BB%E7%BB%9F[%E8%BD%AC%E8%BD%BD].html" rel="alternate"></link><updated>2011-11-08T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-11-08:articles/IBM大型机12月16日起支持Windows系统[转载].html</id><summary type="html">&lt;p&gt;本文来源——http://www.sina.com.cn 2011年11月07日 15:58 新浪科技微博
新浪科技讯 北京时间11月7日下午消息，据美国IT网站ComputerWorld报道，IBM大型机将从今年12月中旬开始支持Windows系统。&lt;/p&gt;
&lt;p&gt;IBM此前就有意在zEnterprise 196大型机中采用Windows系统。根据IBM发布的最新消息，该公司大型机将从今年12月16日起支持Windows管理功能。用户一直希望数据中心有新的功能。当前，有许多基于Windows的应用可支持大型机获取数据，其中就包括IBM制造的许多应用。但此类应用现在必须单独管理。
IBM表示，支持Windows系统将有助于提高大型机企业环境的安全性和速度，同时让用户可以在私人网络上连接系统，避免其他网络问题，实现一体化管理。IBM System z部门业务主管格雷格·洛特科(Greg Lotko)说：“之所以增加对Windows系统的支持，是因为IBM真正认识到这个世界的复杂性。”&lt;/p&gt;
&lt;p&gt;洛特科补充说，从今往后，&lt;code&gt;IBM System z&lt;/code&gt;平台可以支持&lt;code&gt;z /OS&lt;/code&gt;、&lt;code&gt;Linux&lt;/code&gt;、&lt;code&gt;Unix&lt;/code&gt; 和&lt;code&gt;Windows&lt;/code&gt;等多套系统。市场研究机构Clabby Analytics分析师乔·克拉比(Joe Clabby)认为，IBM此举对用户而言是个好消息。&lt;/p&gt;
&lt;p&gt;System z以其处理数据传输和批处理工作负载的能力闻名，而Linux则善于支持Java工作负载。System z还有一项功能，可以将其管理范围扩展至zBX系统，“令其更易于整合和处理相关数据。”&lt;/p&gt;
&lt;p&gt;据克拉比介绍，整合后的管理能力将减少运行多个操作系统的大型机环境所需的工时。他说：“如果你能将其作为单一架构进行管理，这也省钱。”&lt;/p&gt;
&lt;p&gt;市场研究机构IDC分析师让·波兹曼(Jean Bozman)表示，支持Windows系统将使得Windows 应用和大型机之间的连接速度非常快。她说：“如此一来，大型机的运行速度和端到端管理速度将更快。”&lt;/p&gt;
&lt;p&gt;波兹曼最后指出，IBM决定向大型机提供Windows支持，此举证明了IBM所持的一种观点，即分布式和大型机世界距离人们越来越近。(作者：轩辰)&lt;/p&gt;</summary><category term="大型机"></category><category term="windows"></category></entry><entry><title>COBOL编码规则</title><link href="http://mainframer.github.io/articles/COBOL%E7%BC%96%E7%A0%81%E8%A7%84%E5%88%99.html" rel="alternate"></link><updated>2011-10-03T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-10-03:articles/COBOL编码规则.html</id><summary type="html">&lt;p&gt;苦逼的COBOL们一定知道和JCL一样，在写COBOL程序的时候对源码的区域也有一定的制约的，具体如下表所示：&lt;br /&gt;
&lt;img alt="1" src="./../images/COBOL-coding-convention.jpg" /&gt;      &lt;/p&gt;
&lt;h4&gt;第7列用来说明程序所在行的用途:&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;连接符(-)&lt;/code&gt;: 表示本行是上一行的续行；&lt;br /&gt;
&lt;code&gt;('D')&lt;/code&gt;:    表示查错；
&lt;code&gt;星号('*')&lt;/code&gt;: 表示注解；  &lt;/p&gt;
&lt;h4&gt;下面的COBOL程序元素必须从A区域开始：&lt;/h4&gt;
&lt;p&gt;部(DIVISION)和节(SECTION)的标题 &lt;br /&gt;
段名 
程序结尾(End Program)标题 &lt;br /&gt;
级别标示符如FD或者SD等，级别号如01级和77级  &lt;/p&gt;
&lt;h4&gt;下面这些COBOL元素必须从B区域开始：&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;语句&lt;/code&gt;、&lt;code&gt;句子&lt;/code&gt;和&lt;code&gt;短语继续行&lt;/code&gt;  &lt;/p&gt;
&lt;h5&gt;[注：本文内容源自：《IBM主机技术一本通》]&lt;/h5&gt;</summary><category term="COBOL规则"></category></entry><entry><title>COBOL程序典型结构</title><link href="http://mainframer.github.io/articles/COBOL%E7%A8%8B%E5%BA%8F%E5%85%B8%E5%9E%8B%E7%BB%93%E6%9E%84.html" rel="alternate"></link><updated>2011-10-02T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-10-02:articles/COBOL程序典型结构.html</id><summary type="html">&lt;p&gt;一个典型的COBOL程序结构是：程序由许多‘部’组成，每个‘部’可以包含多个‘节’  &lt;/p&gt;
&lt;h4&gt;COBOL PROGRAM (程序)&lt;/h4&gt;
&lt;h4&gt;DIVISION(部)&lt;/h4&gt;
&lt;h4&gt;SECTION(节)&lt;/h4&gt;
&lt;h4&gt;PARAGRAPH(段)&lt;/h4&gt;
&lt;h4&gt;SENTENCE(句子)&lt;/h4&gt;
&lt;h4&gt;STATEMENT(语句)&lt;/h4&gt;
&lt;p&gt;整个COBOL程序由4个'部'(DIVISION)组成：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Identification Division  标识部
Environment Division 环境部 
Data Division 数据部
Procedure Division 过程部 &lt;/p&gt;
&lt;p&gt;用一句话介绍这四个部：标志部提供作者和编译器信息；环境部提供程序运行的环境；数据部描述程序处理的绝大部分数据；过程部描述对数据部描述的数据的操作算法:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;Identification Division(标识部)--主要是程序和作者名&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;IDENTIFICATION&lt;/span&gt; &lt;span class="no"&gt;DIVISION&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="no"&gt;PROGRAM&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;ID&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;xxxxxxx&lt;/span&gt;
&lt;span class="no"&gt;AUTHOR&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;xxxxxx&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Environment Division(环境部)--主要是配置节和IO节&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;ENVIRONMENT&lt;/span&gt; &lt;span class="no"&gt;DIVISION&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="no"&gt;CONFIGURATION&lt;/span&gt; &lt;span class="no"&gt;SECTION&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="no"&gt;SOURCE&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;COMPUTER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="no"&gt;IBM&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;390&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="no"&gt;OBJECT&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;COMPUTER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="no"&gt;IBM&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;390&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="no"&gt;SPECIAL&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="no"&gt;NAMES&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="no"&gt;INPUT&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;OUTPUT&lt;/span&gt; &lt;span class="no"&gt;SECTION&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="no"&gt;FILE&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;CONTROL&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;O&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;CONTROL&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Data Division(数据部)--主要是文件节、工作存储节、连接节&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;FILE&lt;/span&gt; &lt;span class="no"&gt;SECTION&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="no"&gt;WORKING&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;STORAGE&lt;/span&gt; &lt;span class="no"&gt;SECTION&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="no"&gt;LINKAGE&lt;/span&gt; &lt;span class="no"&gt;SECTION&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="c1"&gt;####Procedure Division(过程部)--程序员描述程序算法的地方&lt;/span&gt;
&lt;span class="no"&gt;XXXXX&lt;/span&gt; &lt;span class="no"&gt;SECTION&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="no"&gt;XXXXX&lt;/span&gt; &lt;span class="no"&gt;PARAGRAPH&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;过程部自上而下节&lt;code&gt;(SECTION)&lt;/code&gt;、段&lt;code&gt;(PARAGRAPH)&lt;/code&gt;、句子&lt;code&gt;(SENTENCE)&lt;/code&gt;和语句&lt;code&gt;(STATEMENT)&lt;/code&gt;。只有节&lt;code&gt;(SECTION)&lt;/code&gt;不是必须的，在过程部中至少要有一个段，一个句子和一个语句。段名和节名由程序员自定。&lt;/p&gt;</summary><category term="COBOL结构"></category></entry><entry><title>提交JCL的4种方式</title><link href="http://mainframer.github.io/articles/%E6%8F%90%E4%BA%A4JCL%E7%9A%844%E7%A7%8D%E6%96%B9%E5%BC%8F.html" rel="alternate"></link><updated>2011-10-01T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-10-01:articles/提交JCL的4种方式.html</id><summary type="html">&lt;p&gt;总结了下在主机上面提交JCL的四种方式：&lt;/p&gt;
&lt;h4&gt;1.用VIEW或者EDIT打开JOB,在命令行上输入&lt;code&gt;SUBMIT&lt;/code&gt;或者&lt;code&gt;SUB&lt;/code&gt;:&lt;/h4&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/JCL-SUBMIT-01.jpg" /&gt;          &lt;/p&gt;
&lt;h4&gt;2.直接在JOB前面输入&lt;code&gt;SUBMIT&lt;/code&gt;或者&lt;code&gt;SUB&lt;/code&gt;，不用打开:&lt;/h4&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/JCL-SUBMIT-02.jpg" /&gt;          &lt;/p&gt;
&lt;h4&gt;3.命令行模式下输入命令:&lt;/h4&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/JCL-SUBMIT-03.jpg" /&gt;          &lt;/p&gt;
&lt;h4&gt;4.&lt;code&gt;Q;ST&lt;/code&gt;进入SDSF，找到你最近run过的JOB，在它前面输入&lt;code&gt;SJ&lt;/code&gt;，回车，输入&lt;code&gt;SUB&lt;/code&gt;,提交job。&lt;/h4&gt;</summary><category term="提交JCL"></category></entry><entry><title>utility判断dataset是否为空的方法</title><link href="http://mainframer.github.io/articles/utility%E5%88%A4%E6%96%ADdataset%E6%98%AF%E5%90%A6%E4%B8%BA%E7%A9%BA%E7%9A%84%E6%96%B9%E6%B3%95.html" rel="alternate"></link><updated>2011-09-28T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-09-28:articles/utility判断dataset是否为空的方法.html</id><summary type="html">&lt;p&gt;下面介绍四种利用Utility的返回码来判断一个dataset或者member是否为空文件的方法： &lt;/p&gt;
&lt;h4&gt;1.利用&lt;code&gt;IDCAMS&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/IDCAMS-CHECK-EMPTY.jpg" /&gt;          &lt;/p&gt;
&lt;h4&gt;2.利用SORT(DFSORT/SYNCSORT)&lt;/h4&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/SORT-CHECK-EMPTY.jpg" /&gt;          &lt;/p&gt;
&lt;h4&gt;3.利用&lt;code&gt;ICETOOL(SYNCTOOL)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/ICETOOL-CHECK-EMPTY.jpg" /&gt;          &lt;/p&gt;
&lt;h4&gt;4.利用&lt;code&gt;ISRSUPC&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/ISRSUPC-CHECK-EMPTY.jpg" /&gt;          &lt;br /&gt;
方法不止以上四种，还有利用&lt;code&gt;REXX&lt;/code&gt;脚本也可以判断，只是不属于本文讨论的范围。&lt;/p&gt;</summary><category term="z/OS"></category><category term="dataset"></category></entry><entry><title>vmware8下给windows8安装vmware tools</title><link href="http://mainframer.github.io/articles/vmware8%E4%B8%8B%E7%BB%99windows8%E5%AE%89%E8%A3%85vmware%20tools.html" rel="alternate"></link><updated>2011-09-17T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-09-17:articles/vmware8下给windows8安装vmware tools.html</id><summary type="html">&lt;p&gt;昨晚在Vmware8下安装了windows8，今天打开发现没有声音。晕，竟然忘了安装&lt;code&gt;Vmware tool&lt;/code&gt;了！这里先说一下安装&lt;code&gt;VMware tool&lt;/code&gt;有什么好处：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解决windows8在vmware8下没有声音的问题；&lt;/li&gt;
&lt;li&gt;解决不能在自身系统和虚拟机vmware8之间拷贝，粘贴，移动数据和文件的问题；&lt;/li&gt;
&lt;li&gt;解决共享文件夹在vmware8的windows8下不能使用的问题；&lt;/li&gt;
&lt;li&gt;其他好处；&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;下面简单的说说如何在Vmware8下为&lt;code&gt;window8-dev-preview(开发者预览版)&lt;/code&gt;安装&lt;code&gt;vmware tool&lt;/code&gt;。&lt;/h5&gt;
&lt;p&gt;&lt;strong&gt;1、&lt;/strong&gt; 安装完&lt;code&gt;VMware Workstation 8.0.0.471780&lt;/code&gt;之后，在安装目录下自带了适合各个系统的&lt;code&gt;vmware tools&lt;/code&gt;，这里我们当然选用&lt;code&gt;windows.iso&lt;/code&gt;啦！在&lt;em&gt;windows8&lt;/em&gt;虚拟机设置的光盘(CD/DVD)设置里面输入&lt;code&gt;windows.iso&lt;/code&gt;的路径，比如我的是：&lt;code&gt;D:\SOFTWARE\VMWARE\windows.iso&lt;/code&gt;，勾选：&lt;code&gt;Connected at Power on&lt;/code&gt;，启动windows8系统；
&lt;img alt="1" src="./../images/vmware8-install-vmware-tool-for-windows8.jpg" /&gt;          &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、&lt;/strong&gt; 进入windows8--&amp;gt;Desktop--&amp;gt;Computer，发现虚拟光驱以正确加载，你要做的就是双击光盘里面的setup，安装vmware tool就可以了。
&lt;img alt="1" src="./../images/vmware8-install-vmware-tool-for-windows8-preview.jpg" /&gt;     &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、&lt;/strong&gt; 重启系统，发现windows8声音有了，可以自由在虚拟机和电脑之间移动传输数据了，可以自由设置共享文件夹了(&lt;em&gt;如下图所示&lt;/em&gt;)，虚拟机和电脑之间的共享文件夹可以点击图上面的"Map Network Drive"来实现。
&lt;img alt="1" src="./../images/vmware8-install-vmware-tool-for-windows8-share-folder.jpg" /&gt;        &lt;/p&gt;
&lt;p&gt;自此，windows8在vmware虚拟机下面没有声音等系列问题得到解决。&lt;br /&gt;
(如果本文对你有帮助，欢迎收藏转载，谢谢)&lt;/p&gt;</summary><category term="vmware8"></category><category term="win8"></category></entry><entry><title>虚拟机vmware8下安装体验win8开发者预览版</title><link href="http://mainframer.github.io/articles/%E8%99%9A%E6%8B%9F%E6%9C%BAvmware8%E4%B8%8B%E5%AE%89%E8%A3%85%E4%BD%93%E9%AA%8Cwin8%E5%BC%80%E5%8F%91%E8%80%85%E9%A2%84%E8%A7%88%E7%89%88.html" rel="alternate"></link><updated>2011-09-17T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-09-17:articles/虚拟机vmware8下安装体验win8开发者预览版.html</id><summary type="html">&lt;p&gt;这两天微软发布了windows8的开发者预览版本(dev preview edition)提供下载,首日的下载量就突破50万。虽然这是一个被阉割过的windows8版本，我还是想下载下来安装在虚拟机上试试。
首先应该去微软官方网站下载win8的镜像ISO文件，这里是官方下载地址，我下载的是WindowsDeveloperPreview-32bit-English.iso。
&lt;a href="http://msdn.microsoft.com/en-us/windows/apps/br229516"&gt;WindowsDeveloperPreview下载地址&lt;/a&gt;&lt;br /&gt;
原先我的vmware版本是7.1.4，但是在安装win8的时候一开始就碰到了·&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"your pc ran into a problem that it couldn't handle,and now it needs to restart"·
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;正所谓出师不利:&lt;br /&gt;
&lt;img alt="1" src="./../images/win8-dev-pre-blue-screen.jpg" /&gt;       &lt;/p&gt;
&lt;p&gt;解决办法是到vmware官方网站&lt;a href="http://www.vmware.com"&gt;http://www.vmware.com&lt;/a&gt;去下载最新的&lt;code&gt;Vmware Workstation 8 .0 build 471780&lt;/code&gt;。也是这两天才最新发布的，估计是为了迎接&lt;code&gt;win8-dev-pre&lt;/code&gt;的发布。先卸载掉原先的&lt;code&gt;vmware 7.1.4&lt;/code&gt;,下载并安装好&lt;code&gt;Vmware Workstation 8 .0 build 471780&lt;/code&gt;好后，安装&lt;code&gt;win8-dev-pre&lt;/code&gt;就没有出现上面“卡哇伊”的蓝屏画面了，接下来如果不幸运的话你可能还会遇到&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Vmware Workstation 8 Windows Cannot Read the settings from the unattend answer file` 
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;问题，并且不断重启还是老样子，这里，我是通过在虚拟机设置里面把软驱(floppy)移除来解决问题的，因为在floppy的&lt;code&gt;autoinst.flp&lt;/code&gt;文件中包含了product key的信息，所以必须移除。然后，然后当然是出现如下所示的正常系统安装画面了：&lt;br /&gt;
&lt;img alt="1" src="./../images/win8-dev-pre-install.jpg" /&gt;           &lt;/p&gt;
&lt;p&gt;记得系统的版本选择windows7，因为没有windows8的选项可以选。关于接下去如何安装系统，我就不说了。该分区的分区，该下一步的下一步，安装完后该重启的重启，重启之后照例会有一些初始化和&lt;code&gt;Windows Live ID&lt;/code&gt;的设置，只是界面比以前的系统好看了些。重启后使用刚才设置的windows Live账号密码登陆系统。一些在win8发布会上展示的功能如App store在这个开发者预览版本里面还不能用，所以说是被阉割的版本，不过界面体验确实比win7炫多了，可以上几张图为证。点击最左下角的开始按钮可以在不同的应用直接切换。&lt;br /&gt;
(注：以下均为1366x768的全屏截图，只是上传到博客这里才变小的)&lt;br /&gt;
&lt;img alt="1" src="./../images/win8-dev-pre-sample01.jpg" /&gt;    &lt;/p&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/win8-dev-pre-sample02.jpg" /&gt;  &lt;/p&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/win8-dev-pre-sample03.jpg" /&gt;    &lt;/p&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/win8-dev-pre-sample04.jpg" /&gt;    &lt;/p&gt;
&lt;p&gt;是不是很赞？    &lt;/p&gt;
&lt;h3&gt;补充&lt;/h3&gt;
&lt;p&gt;微软与9月20号发布了windows8开发者预览版的密钥。估计是他们前几天发布的时候忘记了这件事所以现在补上。当你需要重装win8开发者预览版的时候就会提示你输入密钥。微软响应中心日前就提供了两个产品密钥，供测试人员使用。  &lt;br /&gt;
第一个产品密钥适用于客户端版本，也就是Windows 8开发者预览版，产品密钥为：&lt;code&gt;6RH4V-HNTWC-JQKG8-RFR3R-36498&lt;/code&gt;。&lt;br /&gt;
第二个产品密钥适用于服务器版本，也就是Windows Server 8开发者预览版，产品密钥为：&lt;code&gt;4Y8N3-H7MMW-C76VJ-YD3XV-MBDKV&lt;/code&gt;。&lt;/p&gt;</summary><category term="vmware8"></category><category term="win8"></category></entry><entry><title>Backtrack5最新版chrome</title><link href="http://mainframer.github.io/articles/Backtrack5%E6%9C%80%E6%96%B0%E7%89%88chrome.html" rel="alternate"></link><updated>2011-09-12T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-09-12:articles/Backtrack5最新版chrome.html</id><summary type="html">&lt;p&gt;在windows下用惯了chrome，受不了chrome的诱惑，还是忍不住想把bt5下的firefox给换了。chrome官网下载安装包放置于&lt;code&gt;/root/software/&lt;/code&gt;路径下，然后安装。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="vi"&gt;@bt&lt;/span&gt;&lt;span class="ss"&gt;:~&lt;/span&gt;&lt;span class="c1"&gt;# cd software/&lt;/span&gt;
&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="vi"&gt;@bt&lt;/span&gt;&lt;span class="ss"&gt;:~&lt;/span&gt;&lt;span class="sr"&gt;/software# dpkg -i google-chrome-stable_current_i386.deb&lt;/span&gt;
&lt;span class="sr"&gt;Selecting previously deselected package google-chrome-stable.&lt;/span&gt;
&lt;span class="sr"&gt;(Reading database ... 220905 files and directories currently installed.)&lt;/span&gt;
&lt;span class="sr"&gt;Unpacking google-chrome-stable (from google-chrome-stable_current_i386.deb) ...&lt;/span&gt;
&lt;span class="sr"&gt;Setting up google-chrome-stable (13.0.782.220-r99552) ...&lt;/span&gt;
&lt;span class="sr"&gt;update-alternatives: using /us&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;chrome&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;provide&lt;/span&gt; &lt;span class="sr"&gt;/usr/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;browser&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="ss"&gt;alternatives&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="sr"&gt;/usr/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;chrome&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;provide&lt;/span&gt; &lt;span class="sr"&gt;/usr/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gnome&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;browser&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gnome&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;Processing&lt;/span&gt; &lt;span class="n"&gt;triggers&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;desktop&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;utils&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="no"&gt;Processing&lt;/span&gt; &lt;span class="n"&gt;triggers&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;gmenu&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="no"&gt;Rebuilding&lt;/span&gt; &lt;span class="sr"&gt;/usr/s&lt;/span&gt;&lt;span class="n"&gt;hare&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;applications&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;desktop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;en_US&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utf8&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="no"&gt;Processing&lt;/span&gt; &lt;span class="n"&gt;triggers&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;menu&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="no"&gt;Processing&lt;/span&gt; &lt;span class="n"&gt;triggers&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;man&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="no"&gt;Processing&lt;/span&gt; &lt;span class="n"&gt;triggers&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;support&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;运行会出现&lt;code&gt;Google Chrome can not be run as root.&lt;/code&gt;错误，解决办法是每次运行的时候手动指定&lt;code&gt;user-data-dir&lt;/code&gt;参数即可，这个是我在网上搜的方法。&lt;br /&gt;
&lt;img alt="1" src="./../images/backtrack5-google-chrome.jpg" /&gt;  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="vi"&gt;@bt&lt;/span&gt;&lt;span class="ss"&gt;:/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;chrome&lt;/span&gt;&lt;span class="c1"&gt;# /opt/google/chrome/google-chrome %U - -user-data-dir=/root/.config/chromium&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;看看是不是可以用了？chrome比firefox清爽多了感觉。&lt;/p&gt;</summary><category term="Backtrack"></category><category term="chrome"></category></entry><entry><title>backtrack5下注册nessus非商用版</title><link href="http://mainframer.github.io/articles/backtrack5%E4%B8%8B%E6%B3%A8%E5%86%8Cnessus%E9%9D%9E%E5%95%86%E7%94%A8%E7%89%88.html" rel="alternate"></link><updated>2011-09-08T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-09-08:articles/backtrack5下注册nessus非商用版.html</id><summary type="html">&lt;p&gt;打开BT5下菜单&lt;code&gt;Backtrack --&amp;gt; Vulnerability Assessment --&amp;gt; Network Assessment --&amp;gt; Vulnerability Scanner --&amp;gt; Nessus start&lt;/code&gt; 会提示插件缺失需要注册。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="vi"&gt;@bt&lt;/span&gt;&lt;span class="ss"&gt;:~&lt;/span&gt;&lt;span class="c1"&gt;# Missing plugins. Attempting a plugin update...&lt;/span&gt;
&lt;span class="no"&gt;Your&lt;/span&gt; &lt;span class="n"&gt;installation&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;missing&lt;/span&gt; &lt;span class="n"&gt;plugins&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="no"&gt;Please&lt;/span&gt; &lt;span class="n"&gt;register&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;try&lt;/span&gt; &lt;span class="n"&gt;again&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="no"&gt;To&lt;/span&gt; &lt;span class="n"&gt;register&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;please&lt;/span&gt; &lt;span class="n"&gt;visit&lt;/span&gt; &lt;span class="ss"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nessus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;register&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;到官网&lt;a href="http://www.nessus.org/register/"&gt;http://www.nessus.org/register&lt;/a&gt;注册，好工具只给注册家用版，填好邮箱注册即可，登陆邮箱会收到一封确认邮件。告诉你在不同系统&lt;code&gt;(windows/linux/bsd/mac os/)&lt;/code&gt;下该如何做。我在&lt;code&gt;BT5&lt;/code&gt;下，按照提示运行命令即可：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Linux and Solaris Users :&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To activate your account, simply execute the following command :
/opt/nessus/bin/nessus-fetch --register 04BB-41FD-A885-94B5-9B50&lt;/p&gt;
&lt;blockquote&gt;&lt;/blockquote&gt;
&lt;p&gt;(这串序列号是每次官网注册随即生成的，这个是我注册的时候提供给我的)
&lt;img alt="1" src="./../images/backtrack5-nessus-register.jpg" /&gt;        &lt;/p&gt;
&lt;p&gt;之后就是正常更新插件，更新完毕你就可以正常使用强大的nessus漏洞扫描工具了，可以看到版本号是最新的4.4.1。只不过这是非商用版的，商用版的一般给企业用的。
&lt;img alt="1" src="./../images/backtrack5-nessus-register-ok.jpg" /&gt;   &lt;/p&gt;
&lt;p&gt;进入菜单&lt;code&gt;Backtrack --&amp;gt; Vulnerability Assessment --&amp;gt; Network Assessment --&amp;gt; Vulnerability Scanner --&amp;gt; Nessus user add&lt;/code&gt;
添加&lt;code&gt;username:root&lt;/code&gt;、 &lt;code&gt;password:toor&lt;/code&gt; (可以随便添加用户名密码) 
更改默认设置: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="vi"&gt;@bt&lt;/span&gt;&lt;span class="ss"&gt;:gedit&lt;/span&gt; &lt;span class="sr"&gt;/opt/nessus&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nessus&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nessusd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;conf&lt;/span&gt;
&lt;span class="n"&gt;listen_address&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;127&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;默认为&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;enable_listen_ipv4&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt; &lt;span class="err"&gt;（默认没有开启&lt;/span&gt;&lt;span class="n"&gt;ipv4&lt;/span&gt;&lt;span class="err"&gt;侦听）&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;登陆浏览器，输入地址：&lt;code&gt;https://127.0.0.1:8834/&lt;/code&gt;, 其中8834为nessus默认的web端口。一段时间的初始化之后，输入刚才添加的用户名root和密码toor即可使用nessus homefeed版本了。可以看到homefeed版本给了5年的试用时间。
&lt;img alt="1" src="./../images/backtrack5-nessus-register-web-about.jpg" /&gt;           &lt;/p&gt;</summary><category term="Backtrack"></category><category term="nessus注册"></category></entry><entry><title>genlist + nmap</title><link href="http://mainframer.github.io/articles/genlist%20+%20nmap.html" rel="alternate"></link><updated>2011-09-07T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-09-07:articles/genlist + nmap.html</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;Usage: genlist [Input Type] [General Options]
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;Input&lt;/span&gt; &lt;span class="ss"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nb"&gt;scan&lt;/span&gt; &lt;span class="no"&gt;Ping&lt;/span&gt; &lt;span class="no"&gt;Target&lt;/span&gt; &lt;span class="no"&gt;Range&lt;/span&gt; &lt;span class="ss"&gt;ex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;Scan&lt;/span&gt; &lt;span class="ss"&gt;Options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;nmap&lt;/span&gt; &lt;span class="no"&gt;Path&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="no"&gt;Nmap&lt;/span&gt; &lt;span class="n"&gt;executable&lt;/span&gt;
&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;inter&lt;/span&gt; &lt;span class="no"&gt;Perform&lt;/span&gt; &lt;span class="no"&gt;Nmap&lt;/span&gt; &lt;span class="no"&gt;Scan&lt;/span&gt; &lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="n"&gt;non&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt; &lt;span class="n"&gt;interface&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;General&lt;/span&gt; &lt;span class="ss"&gt;Options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="no"&gt;Display&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;help&lt;/span&gt; &lt;span class="no"&gt;Display&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Send Comments to Joshua D. Abraham ( jabra@ccs.neu.edu )
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;genlist可以用来生成一个列表，该列表包含一个ip段内所有相应ping的ICMP报文响应的主机ip。生成的ip列表可以给后续的PBNJ或Nmap用。&lt;br /&gt;
下图中,首先先用&lt;code&gt;genlist ping&lt;/code&gt;探测ip段&lt;code&gt;192.168.1.*&lt;/code&gt;查找存活主机，存到列表iplist中备用，接着用nmap来扫描列表中的主机们。
&lt;img alt="1" src="./../images/genlist-nmap.jpg" /&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="vi"&gt;@bt&lt;/span&gt;&lt;span class="ss"&gt;:~&lt;/span&gt;&lt;span class="c1"&gt;# `genlist -s 192.168.1.* &amp;gt; iplist`&lt;/span&gt;
&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="vi"&gt;@bt&lt;/span&gt;&lt;span class="ss"&gt;:~&lt;/span&gt;&lt;span class="c1"&gt;# `cat iplist`           #显示iplist&lt;/span&gt;
&lt;span class="mi"&gt;192&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;168&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;   
&lt;span class="mi"&gt;192&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;168&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;    
&lt;span class="mi"&gt;192&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;168&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;103&lt;/span&gt;    
&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="vi"&gt;@bt&lt;/span&gt;&lt;span class="ss"&gt;:~&lt;/span&gt;&lt;span class="c1"&gt;# `nmap -v -iL iplist`   #从iplist列表输入&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;从图中我们可以看到在nmap的扫描报告中分别列出了这三台存活主机所有开放的端口以及运行在相应端口上的服务。&lt;/p&gt;</summary><category term="genlist"></category><category term="nmap"></category></entry><entry><title>IBM Debug Tool使用</title><link href="http://mainframer.github.io/articles/IBM%20Debug%20Tool%E4%BD%BF%E7%94%A8.html" rel="alternate"></link><updated>2011-09-05T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-09-05:articles/IBM Debug Tool使用.html</id><summary type="html">&lt;p&gt;关于&lt;code&gt;IBM DebugTool&lt;/code&gt;的一些介绍，请参照我的另一篇博文：&amp;lt;&lt;Debug Tool for z/OS&gt;&amp;gt;，这里呢，我是想说说一般我们用&lt;code&gt;IBM Debug Tool&lt;/code&gt;来调试&lt;code&gt;PL/I&lt;/code&gt;或者&lt;code&gt;COBOL&lt;/code&gt;程序的时候都有哪些命令或者说按键可以用，比如说设置断点，运行至断点处，监视变量值啊什么的这种一般不管什么程序的调试都会用到的知识。当然，这本身很简单，写在这里只是为了让新人更快的学会使用，基本上10分钟搞定的那种，这样就节省了大家的时间了。
先上个&lt;code&gt;IBM DebugTool&lt;/code&gt;的截图：
&lt;img alt="1" src="./../images/Debug-tool-screenshot1.jpg" /&gt;  &lt;br /&gt;
可以看到，最上面一行显示了当前debug的程序名字PRGM002以及所用的语言&lt;code&gt;PL/I&lt;/code&gt;,接着是命令行COMMAND,所有的调试命令都在这一行输入。然后是变量监视区域&lt;code&gt;(MONITOR)&lt;/code&gt;，源程序区&lt;code&gt;(SOURCE)&lt;/code&gt;以及调试日志&lt;code&gt;(LOG)&lt;/code&gt;区域。&lt;code&gt;Debug Tool&lt;/code&gt;遵循“七上八下”原则，也就是F7向上翻页，F8向下翻页。&lt;/p&gt;
&lt;h4&gt;执行下一条语句&lt;/h4&gt;
&lt;p&gt;按&lt;code&gt;F2&lt;/code&gt;  &lt;/p&gt;
&lt;h4&gt;查找关键字&lt;/h4&gt;
&lt;p&gt;命令为：
&lt;code&gt;F 关键字&lt;/code&gt;  &lt;br /&gt;
按F5循环查找  &lt;/p&gt;
&lt;h4&gt;设置/取消断点&lt;/h4&gt;
&lt;p&gt;将光标置于你要设置的代码处，按&lt;code&gt;F6&lt;/code&gt;设置断点，再按&lt;code&gt;F6&lt;/code&gt;取消断点设置。  &lt;/p&gt;
&lt;h4&gt;运行到断点&lt;/h4&gt;
&lt;p&gt;按F9即可，中间若有程序段会引起Abend，那么会自动停留在abend处。&lt;/p&gt;
&lt;h4&gt;监视变量&lt;/h4&gt;
&lt;p&gt;命令&lt;code&gt;L(List) 变量名&lt;/code&gt; 为临时监视，只会在Log区域列出变量值。&lt;br /&gt;
命令&lt;code&gt;M List 变量名&lt;/code&gt;为永久监视，会在Monitor区域监视变量值的变化情况。 &lt;br /&gt;
命令&lt;code&gt;SET AUTO ON&lt;/code&gt;会自动列出当前执行到的代码中所有的变量的值。   &lt;/p&gt;
&lt;h4&gt;清除MONITOR区域不想监视的变量&lt;/h4&gt;
&lt;p&gt;在该变量前面的行区域输入命令&lt;code&gt;C&lt;/code&gt; 回车即可。&lt;br /&gt;
在MONITOR区域以十六进制(HEX)/十进制(DECIMAL)形式显示变量。&lt;br /&gt;
在该变量前面的行号区域输入命令&lt;code&gt;H&lt;/code&gt; 或者&lt;code&gt;D&lt;/code&gt;可以在十六进制和十进制之间切换。  &lt;/p&gt;
&lt;h4&gt;放大/缩小 MONITOR或者SOURCE区域&lt;/h4&gt;
&lt;p&gt;将光标置于MONITOR或者SOURCE区域，按&lt;code&gt;F10&lt;/code&gt;。 &lt;/p&gt;
&lt;h4&gt;放大/缩小 LOG区域&lt;/h4&gt;
&lt;p&gt;按&lt;code&gt;F11&lt;/code&gt;  &lt;/p&gt;
&lt;h4&gt;左移 右移&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;LEFT&lt;/code&gt; &lt;br /&gt;
&lt;code&gt;RIGHT&lt;/code&gt;  &lt;/p&gt;
&lt;h4&gt;向上(下)50行&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;UP 50&lt;/code&gt; 
&lt;code&gt;DOWN 50&lt;/code&gt;&lt;/p&gt;</summary><category term="Debug Tool"></category></entry><entry><title>BackTrack5 R1发布</title><link href="http://mainframer.github.io/articles/BackTrack5%20R1%E5%8F%91%E5%B8%83.html" rel="alternate"></link><updated>2011-09-04T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-09-04:articles/BackTrack5 R1发布.html</id><summary type="html">&lt;p&gt;偶然间在逛到&lt;a href="www.backtrack-linux.org"&gt;www.backtrack-linux.org&lt;/a&gt;的时候，发现首页赫然写着：&lt;em&gt;“BackTrack 5 R1 Released! Aug 18th, 2011”，&lt;/em&gt;bt有新版本发布了我竟然还不知道。哎~。
从&lt;a href="http://www.backtrack-linux.org/downloads"&gt;http://www.backtrack-linux.org/downloads&lt;/a&gt;下载了Backtrack5 R1在虚拟机里面试了下，还没有硬盘安装，感觉和BT5几乎没什么区别。   &lt;br /&gt;
不过据说修复了120个bug, 添加了30个新工具,并且升级了70个工具;用命令&lt;em&gt;uname -a&lt;/em&gt;查看了下发现内核也从原来的2.6.38升级到2.6.39.4。看来没什么特别需要的话暂时还是不升级好了,BT5挺好的。&lt;br /&gt;
这里附上BackTrack5R1的BT种子，感兴趣的话请自行移步Backtrack官网下载。&lt;/p&gt;</summary><category term="BackTrack5 R1"></category></entry><entry><title>IBM File Manager for z/os 续(一)</title><link href="http://mainframer.github.io/articles/IBM%20File%20Manager%20for%20zos%20%E7%BB%AD(%E4%B8%80).html" rel="alternate"></link><updated>2011-09-04T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-09-04:articles/IBM File Manager for zos 续(一).html</id><summary type="html">&lt;p&gt;上一次我简单介绍了下大机平台上的一个强大的文件查看/编辑工具，这里我要介绍几个在用&lt;code&gt;FileManager&lt;/code&gt;查看/编辑 QSAM顺序文件的时候的小技巧。
&lt;img alt="1" src="./../images/ibm-file-manager-qsam.jpg" /&gt;  上图显示的是employee的信息文件，比较小，只有几条记录。但是一般在生产环境上，数据都有好几百万条，如果你很傻的直接FIND 关键字来查找，那么抛开CPU耗费不说，你自己也将耗费很长的一段时间来等待搜索结果出来，所以，看看这篇文章，学会几个&lt;code&gt;*File Manager*&lt;/code&gt;的使用技巧还是有必要的(如果你没功夫去看IBM红宝书的话)。&lt;/p&gt;
&lt;h3&gt;1、只查找指定字段(Field)&lt;/h3&gt;
&lt;h5&gt;例：只在ACCT字段查找关键字“IT”&lt;/h5&gt;
&lt;p&gt;命令： &lt;code&gt;F IT #6&lt;/code&gt;     (可以把#6看成ACCT的别名)&lt;/p&gt;
&lt;h5&gt;例：只在ACCT字段和EP_NAME字段查找关键字"IT"&lt;/h5&gt;
&lt;p&gt;命令： &lt;code&gt;F IT #6 #8&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;2、只查找指定几列 (Column)&lt;/h3&gt;
&lt;h5&gt;例：只在第8至20列查找关键字"AN"&lt;/h5&gt;
&lt;p&gt;命令: &lt;code&gt;F AN 8 20&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;3、只查找指定字符串开头的关键字&lt;/h3&gt;
&lt;h5&gt;例：查找以LI开头的关键字&lt;/h5&gt;
&lt;p&gt;命令： &lt;code&gt;F LI Pre&lt;/code&gt;    (注意跟F LI的区别)&lt;/p&gt;
&lt;h3&gt;4、只查找指定字符串结尾的关键字&lt;/h3&gt;
&lt;p&gt;例：查找以LI结尾的关键字
命令： &lt;code&gt;F LI SUF&lt;/code&gt;    (注意跟F LI的区别)&lt;/p&gt;
&lt;h3&gt;5、只查找单词&lt;/h3&gt;
&lt;p&gt;例:查找单词ANAN
命令: &lt;code&gt;F ANAN WORD&lt;/code&gt;  (限定了只查找是单词的，就是两边都是空格隔开的字符串)&lt;/p&gt;</summary><category term="File Manager"></category></entry><entry><title>Debug Tool for z/OS</title><link href="http://mainframer.github.io/articles/Debug%20Tool%20for%20zOS.html" rel="alternate"></link><updated>2011-09-03T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-09-03:articles/Debug Tool for zOS.html</id><summary type="html">&lt;p&gt;作为一个PL/I、COBOL程序猿，调试程序是必须的一项技能。这里我来说说大机上面的调试工具IBM的DebugTool，它支持的环境包括BATCH, TSO, CICS, DB2, DB2存储过程以及UNIX等等。&lt;/p&gt;
&lt;h4&gt;这篇我来说说如何设置让程序可以被Debug&lt;/h4&gt;
&lt;p&gt;首先，你必须在编译程序的时候需要选择以Debug模式编译，这个在changeman里面直接在编译的时候选个&lt;code&gt;IBM Debug Tool="Y"&lt;/code&gt;就可以了。   &lt;/p&gt;
&lt;p&gt;接着，如果是BATCH的，就需要在JCL的PARM中指定TEST运行时的参数，通过VTAM接口来初始化debug模式，VTAM%后面跟着的是userid，就像这样：
&lt;img alt="1" src="./../images/debugtool.jpg" /&gt;    &lt;/p&gt;
&lt;p&gt;是BATCH的话，你还要有一个Debug的session，这个可以参照我的另外一篇博文：&amp;lt;&amp;lt;登陆大型机——Aviva的介绍&amp;gt;&amp;gt;，只需注意在建debug session的时候destination的IP一般和普通大机的物理ip是不一样。填上正确的ip,然后用你的id登陆,这里我的id是IBMUSER，须跟上面设置的一样。&lt;br /&gt;
回到JCL这边，submit，那恭喜你，你就可以看到Debugtool的画面了:
&lt;img alt="1" src="./../images/Debug-tool-screenshot1.jpg" /&gt;     &lt;/p&gt;
&lt;p&gt;但是，如果程序是ONLINE的话，一般我们用CICS上面的DTCN这个工具来debug的。这里我假设你已经在上面“首先”里面正确编译了一个ONLINE的程序PRGM002 (带debug编译选项的)。然后，你登陆CICS，输入DTCN进入DTCN的设置界面:
&lt;img alt="1" src="./../images/Debug-tool-CICS-Control.jpg" /&gt;  &lt;/p&gt;
&lt;p&gt;参照上面，假如一个transaction叫&lt;em&gt;BTAX&lt;/em&gt;  ，调用了你要debug的程序PRGM002，你就按照上图那样正确设置好，然后F4保存，F5激活设置，F3退出回到CICS界面，输入&lt;span style="color: #ff00ff;"&gt;&lt;strong&gt;BTAX&lt;/strong&gt;&lt;/span&gt;，那也恭喜你，你就进入了debugtool的画面了。&lt;/p&gt;</summary><category term="z/OS"></category><category term="Debug Tool"></category></entry><entry><title>dnsdict6获取ipv6地址</title><link href="http://mainframer.github.io/articles/dnsdict6%E8%8E%B7%E5%8F%96ipv6%E5%9C%B0%E5%9D%80.html" rel="alternate"></link><updated>2011-08-30T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-30:articles/dnsdict6获取ipv6地址.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;[dnsdict6 v1.4 (c) 2010 by van Hauser /   THC www.thc.org]&lt;/strong&gt; &lt;br /&gt;
&lt;code&gt;dnsdict6&lt;/code&gt;用来查询网站的ipv6地址，如果存在的话就显示，不存在的话就没有显示。可自定义线程数和字典。用法为： &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Syntax: dnsdict6 [-t THREADS] domain [dictionary-file]  &lt;/p&gt;
&lt;p&gt;root@bt:~# &lt;code&gt;dnsdict6 google.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Starting enumerating google.com. - creating 8 threads for 3001 words...&lt;br /&gt;
Estimated time to completion: 2 to 5 minutes  &lt;br /&gt;
ipv6.google.com. =&amp;gt; 2404:6800:8005::6a&lt;br /&gt;
Found 1 domain name and 1 unique ipv6 address for google.com.  &lt;/p&gt;
&lt;p&gt;root@bt:~# &lt;code&gt;dnsdict6 baidu.com&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;Starting enumerating baidu.com. - creating 8 threads for 3001 words...&lt;br /&gt;
Estimated time to completion: 2 to 5 minutes &lt;br /&gt;
Found 0 domain names and 0 unique ipv6 addresses for baidu.com.&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="dnsdict6"></category><category term="ipv6"></category></entry><entry><title>百度统计少于32个页面报错</title><link href="http://mainframer.github.io/articles/%E7%99%BE%E5%BA%A6%E7%BB%9F%E8%AE%A1%E5%B0%91%E4%BA%8E32%E4%B8%AA%E9%A1%B5%E9%9D%A2%E6%8A%A5%E9%94%99.html" rel="alternate"></link><updated>2011-08-29T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-29:articles/百度统计少于32个页面报错.html</id><summary type="html">&lt;p&gt;今天试了下百度统计里面的"SEO建议"功能，居然神奇般的可以使用了。
&lt;img alt="1" src="./../images/baidu-statistics.jpg" /&gt;    &lt;br /&gt;
还记得前些日子安装了百度统计代码，正想试试最新的“SEO建议”功能的时候，总是出现错误：“可供检查的页面数量过少，建议您至少在检查范围内的32个页面安装百度统计代码”错误.&lt;/p&gt;
&lt;h4&gt;现在分析来可能有几种原因：&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;&amp;lt;1&amp;gt;&lt;/em&gt;. 网站刚安装百度统计代码，比如安装不到一两天时间。我基本在上个月刚开博的时候就安装了，到前几天还是不能使用“SEO建议”功能，所以个人觉得不是这个原因。&lt;br /&gt;
&lt;em&gt;&amp;lt;2&amp;gt;&lt;/em&gt;. 网站本身页面不足。单说静态页面的话，一篇文章就一个页面了，那我的起码也有60个左右了吧。要是不说静态页面的话，那wordpress本身就只有一个页面了，更不可能。所以应该也不是页面不足的原因。&lt;br /&gt;
&lt;em&gt;&amp;lt;3&amp;gt;&lt;/em&gt;. 网站访问量低，PV低。 我估计这个有些可能，因为上个月到前几天为止，基本没什么人访问的。&lt;br /&gt;
&lt;em&gt;&amp;lt;4&amp;gt;&lt;/em&gt;. 百度收录页面少于32个。这个我是最认为有可能的，因为我的博文这几天才被百度正常收录的，所以这个可能性大一点。  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;总结：结合第3、4点，用一句话归纳就是——“内容为王”。百度不是傻子，你网站不是垃圾站，有内容了，百度自然就收录了，PV也就自然上去了。不过话说回来，百度"SEO建议"其实跟谷歌的网站管理员工具webmasters差不多类似的，是没什么必要瞎折腾那么多。  &lt;/p&gt;</summary><category term="百度统计"></category></entry><entry><title>IBM File Manager for z/os</title><link href="http://mainframer.github.io/articles/IBM%20File%20Manager%20for%20zos.html" rel="alternate"></link><updated>2011-08-28T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-28:articles/IBM File Manager for zos.html</id><summary type="html">&lt;p&gt;IBM的&lt;code&gt;File Manger&lt;/code&gt; 在大机平台上是非常强大的文件查看/编辑器，是一个强大的ISPF应用程序。这里先贴上一张IBM2011年最新的关于File Manger的结构图，我认为这张图很好地诠释了File Manager 的强大之处：
&lt;img alt="1" src="./../images/IBM_File_Manager-for-zOS.jpg" /&gt;&lt;br /&gt;
&lt;em&gt;[图片来源于IBM官方网站，仅供学习交流之用]&lt;/em&gt;   &lt;/p&gt;
&lt;p&gt;参照上图，我这里要讲的是当中的第二块内容——&lt;code&gt;File Manager for Z/OS&lt;/code&gt;，关于其它部分如&lt;code&gt;File Manager for DB2&lt;/code&gt;,&lt;code&gt;File Manager for IMS&lt;/code&gt;和&lt;code&gt;File Manager for CICS&lt;/code&gt;，以后再说。(其实更主要是因为平常工作做我用for z/os用的多，db2和cics的用得少，不敢在这瞎说。)。基本的操作原理就不说了，我就说说我在平常工作当中的几个有用的小技巧好了。 以查看/编辑&lt;code&gt;QSAM&lt;/code&gt; (sequential)的dataset为例，选项1是查看(View),选项2是编辑(Edit),我们View进去看到如下图：
&lt;img alt="1" src="./../images/File_Manager_For_zos_01.jpg" /&gt;  &lt;br /&gt;
这里&lt;code&gt;DBAID01.TEST.FILE&lt;/code&gt;是你的ID(DBAID01)开头的一个你要查看的File，不过它只是一个纯的无格式的数据文件，你所做的就是要给它指定一个模板(COPYBOOK)，COPYBOOK规定它该按照什么样的方式显示。&lt;code&gt;DBAID01.TEST.COPY(COPY01)&lt;/code&gt;就是&lt;code&gt;DBAID01.TEST.FILE&lt;/code&gt;的COPYBOOK,它当中规定了&lt;code&gt;DBAID01.TEST.FILE&lt;/code&gt;该如何显示。&lt;/p&gt;</summary><category term="z/OS"></category><category term="File Manager"></category></entry><entry><title>Linux硬件信息目录proc</title><link href="http://mainframer.github.io/articles/Linux%E7%A1%AC%E4%BB%B6%E4%BF%A1%E6%81%AF%E7%9B%AE%E5%BD%95proc.html" rel="alternate"></link><updated>2011-08-28T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-28:articles/Linux硬件信息目录proc.html</id><summary type="html">&lt;p&gt;&lt;code&gt;linux&lt;/code&gt;下面&lt;code&gt;/proc&lt;/code&gt;是一个貌似普通但是功能却非常强大的目录硬件信息目录，包含核心的硬件信息，内存信息，系统运行进程信息，虽然对于用户来说里面的绝大部分内容都是只读的，但是内容还是会随着系统状态的不同而变化的。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="vi"&gt;@bt&lt;/span&gt;&lt;span class="ss"&gt;:/&lt;/span&gt;&lt;span class="c1"&gt;# cd /proc&lt;/span&gt;
&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="vi"&gt;@bt&lt;/span&gt;&lt;span class="ss"&gt;:/&lt;/span&gt;&lt;span class="nb"&gt;proc&lt;/span&gt;&lt;span class="c1"&gt;# ls&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="1" src="./../images/linux-proc.jpg" /&gt;&lt;br /&gt;
图中每一个数字目录都代表着当前运行的一个相应的进程，每个数字都是一个进程号:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="vi"&gt;@bt&lt;/span&gt;&lt;span class="ss"&gt;:/&lt;/span&gt;&lt;span class="nb"&gt;proc&lt;/span&gt;&lt;span class="c1"&gt;#  ps -ax #查看当前进程&lt;/span&gt;
&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="vi"&gt;@bt&lt;/span&gt;&lt;span class="ss"&gt;:/&lt;/span&gt;&lt;span class="nb"&gt;proc&lt;/span&gt;&lt;span class="c1"&gt;# cd 2778 #进入进程2778的目录&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="1" src="./../images/linux-proc-021.jpg" /&gt;&lt;br /&gt;
/proc中另外那些非数字的系统信息文件每个都是有意义的，这里列出一些最重要的： &lt;br /&gt;
&lt;em&gt;1&lt;/em&gt;、/proc/cpuinfo: CPU信息&lt;br /&gt;
&lt;em&gt;2&lt;/em&gt;、/proc/memiinfo: 物理内存，交换空间等信息&lt;br /&gt;
&lt;em&gt;3&lt;/em&gt;、/proc/mounts: 已加载的文件系统的列表&lt;br /&gt;
&lt;em&gt;4&lt;/em&gt;、/proc/devices: 可用的设备列表&lt;br /&gt;
&lt;em&gt;5&lt;/em&gt;、/proc/filesystems: 被支持的文件系统&lt;br /&gt;
&lt;em&gt;6&lt;/em&gt;、/proc/modules: 已加载的模块&lt;br /&gt;
&lt;em&gt;7&lt;/em&gt;、/proc/version: 内核版本&lt;br /&gt;
&lt;em&gt;8&lt;/em&gt;、/proc/cmdline: 系统启动时输入的内核命令行参数&lt;br /&gt;
&lt;em&gt;9&lt;/em&gt;、/proc/dma: 显示当前使用的DMA通道&lt;br /&gt;
&lt;em&gt;10&lt;/em&gt;、/proc/interrupts: 显示使用的中断  &lt;br /&gt;
&lt;em&gt;11&lt;/em&gt;、/proc/imports: 当前使用的I/O端口&lt;br /&gt;
&lt;em&gt;12&lt;/em&gt;、/proc/kmsg: 核心输出的消息&lt;br /&gt;
&lt;em&gt;13&lt;/em&gt;、/proc/version: 内核版本信息&lt;br /&gt;
&lt;em&gt;14&lt;/em&gt;、/proc/net: 网络协议状态信息  &lt;/p&gt;</summary><category term="Linux"></category><category term="proc目录"></category></entry><entry><title>mainframe访问磁带(Tape)</title><link href="http://mainframer.github.io/articles/mainframe%E8%AE%BF%E9%97%AE%E7%A3%81%E5%B8%A6(Tape).html" rel="alternate"></link><updated>2011-08-27T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-27:articles/mainframe访问磁带(Tape).html</id><summary type="html">&lt;p&gt;大机上磁带(tape)一般用来存储大容量的数据的，可以降低成本。我们要访问tape中的数据的时候，一般的做法是用JCL将tape中的记录转存到直接存储访问设备(DASD)中再查看。 下图中，我们通过utility &lt;code&gt;ICEMAN&lt;/code&gt;将&lt;code&gt;IBMUSER.DNS.TAPE&lt;/code&gt;这个tape中的所有记录都转存到&lt;code&gt;IBMUSER.TAPE.TO.DASD&lt;/code&gt;中，这样就能查看了。
&lt;img alt="1" src="./../images/ICEMAN-access-tape.jpg" /&gt;      &lt;/p&gt;
&lt;p&gt;不过，需要注意的是，tape里面的数据量一般都很大，所以更多时候我们再用的时候会指定读取的record的数目，比如这里我们指定读取100条：
&lt;img alt="1" src="./../images/ICEMAN-access-tape-stopaft1.jpg" /&gt;    &lt;/p&gt;
&lt;p&gt;甚至，你还可以用SORT中的语法筛选出你想要的条件。比如&lt;code&gt;(1，4，EQ,'AAAA')&lt;/code&gt;这样子。 &lt;/p&gt;</summary><category term="z/OS"></category><category term="访问tape"></category><category term="ICEMAN"></category></entry><entry><title>用ISRSUPC在PDS所有member中搜索指定字符串</title><link href="http://mainframer.github.io/articles/%E7%94%A8ISRSUPC%E5%9C%A8PDS%E6%89%80%E6%9C%89member%E4%B8%AD%E6%90%9C%E7%B4%A2%E6%8C%87%E5%AE%9A%E5%AD%97%E7%AC%A6%E4%B8%B2.html" rel="alternate"></link><updated>2011-08-27T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-27:articles/用ISRSUPC在PDS所有member中搜索指定字符串.html</id><summary type="html">&lt;p&gt;在一个PDS中搜索名字叫做“snailgo”的member，可以在command line上输入命令&lt;code&gt;mem snailgo&lt;/code&gt;即可。但是，如果想搜索整个PDS下所有的成员(Member)中指定字符串，有没有办法呢？答案是肯定的，我们可以用一个比较的utility &lt;code&gt;ISRSUPC&lt;/code&gt;来实现，同样的，只需submit一个JCL。
&lt;img alt="1" src="./../images/isrsupc-compare.jpg" /&gt;      &lt;/p&gt;
&lt;p&gt;这里，我们在PDS &lt;strong&gt;&lt;code&gt;“IBMUSER.TEST.LIB.JCL”&lt;/code&gt;&lt;/strong&gt;和&lt;strong&gt;&lt;code&gt;“IBMUSER.TEST.LIB.PROC”&lt;/code&gt;&lt;/strong&gt;下的所有member中搜索字符串”SNAILGO”。参数为：&lt;code&gt;PARM=(SRCHCMP,ANYC)&lt;/code&gt;，其中&lt;code&gt;SRCHCMP&lt;/code&gt;指定要搜索的字符串，&lt;code&gt;ANYC&lt;/code&gt;表示ANY Case，即搜索任何符合的情况，要了解更详细的PARM的用法，可以参考IBM红宝书&lt;strong&gt;IBM manual ISPF/PDF Guide and Reference for MVS (SC34-4258&lt;/strong&gt;，这里我只介绍最基本的用法。 当然，您也可以一次搜索多个不同的字符串： 
&lt;img alt="1" src="./../images/isrsupc-multi-compare.jpg" /&gt;    &lt;/p&gt;
&lt;p&gt;最后，在JOB的输出Log里面有个OUTDD，里面就是详细的搜索报告了~&lt;/p&gt;</summary><category term="z/OS"></category><category term="ISRSUPC"></category></entry><entry><title>新建空的GDG generation</title><link href="http://mainframer.github.io/articles/%E6%96%B0%E5%BB%BA%E7%A9%BA%E7%9A%84GDG%20generation.html" rel="alternate"></link><updated>2011-08-26T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-26:articles/新建空的GDG generation.html</id><summary type="html">&lt;p&gt;有时候你不希望GDG的当前generation里面有数据，但GDG又不能没有generation,否则JCL会提示找不到dataset。这时候你可以用IBM的&lt;code&gt;IEFBR14&lt;/code&gt;utility来生成一个空的generation。&lt;code&gt;IEFBR14&lt;/code&gt;它实际上什么也不做的空程序，常常被我们用来生成空的FILE。不只是gdg，普通的dataset也可以生成。  &lt;/p&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/gdg-new-empty-generation.jpg" /&gt;    &lt;br /&gt;
submit，查看，空的generation G0001V00 就生成了:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/gdg-base-generation.jpg" /&gt;  &lt;/p&gt;</summary><category term="z/OS"></category><category term="GDG"></category></entry><entry><title>更改GDG世代数参数</title><link href="http://mainframer.github.io/articles/%E6%9B%B4%E6%94%B9GDG%E4%B8%96%E4%BB%A3%E6%95%B0%E5%8F%82%E6%95%B0.html" rel="alternate"></link><updated>2011-08-26T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-26:articles/更改GDG世代数参数.html</id><summary type="html">&lt;p&gt;建完GDG base后更改GDG的generation。用下面的JCL提交即可。这里我将上次建的GDG base &lt;strong&gt;&lt;code&gt;“IBMUSER.TEST.LIB.GDGBASE”&lt;/code&gt;&lt;/strong&gt; 的世代数更改为5:&lt;br /&gt;
&lt;img alt="1" src="./../images/gdg-update.jpg" /&gt;      &lt;/p&gt;
&lt;p&gt;submit即可。 最后，你可以在GDG base前面用命令&lt;code&gt;“LISTC GDG ENT(/) ALL”&lt;/code&gt;来检查看看是不是参数已经从10改成5了。  &lt;/p&gt;</summary><category term="z/OS"></category><category term="GDG"></category></entry><entry><title>新建GDG世代数据集</title><link href="http://mainframer.github.io/articles/%E6%96%B0%E5%BB%BAGDG%E4%B8%96%E4%BB%A3%E6%95%B0%E6%8D%AE%E9%9B%86.html" rel="alternate"></link><updated>2011-08-25T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-25:articles/新建GDG世代数据集.html</id><summary type="html">&lt;p&gt;如何新建一个GDG base? 一种方法是用IDCAMS utility来建,只需提交一个JCL即可。看图：&lt;br /&gt;
&lt;img alt="1" src="./../images/create-gdg-base.jpg" /&gt;       &lt;/p&gt;
&lt;p&gt;其中，LIMIT(10)指定了生成GDG 的世代数(generation number)，简单吧！&lt;/p&gt;</summary><category term="z/OS"></category><category term="GDG"></category></entry><entry><title>Google Adsense申请</title><link href="http://mainframer.github.io/articles/Google%20Adsense%E7%94%B3%E8%AF%B7.html" rel="alternate"></link><updated>2011-08-24T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-24:articles/Google Adsense申请.html</id><summary type="html">&lt;p&gt;今天打开gmail竟然看到有一封来自adsense-support的信而且开头是“恭喜您！”，着实有点吃惊呐！前段时间百度了一番，都说网站要满6个月才可以申请成功，我这一个月不到就让我通过了，估计看到我博客更新地挺频繁并且大部分都原创的份儿上了。嗯，不错，看来凡事还是得 “尽人事知天命” 啊。
附上邮件内容，都不知道怎么弄，有空在研究了，最近工作也忙啊！  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;恭喜您！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;您的 Google AdSense 申请已获得批准。要启动帐户并开始使用 AdSense，请按以下步骤操作。或者，如果您希望了解新的 AdSense 发布商需要注意的各项相关事宜，请访问“新手中心”：http://www.google.com/adsense/support/as/bin/static.py?page=guide.cs&amp;amp;guide=1045789&amp;amp;sct=app-fe。&lt;/p&gt;
&lt;p&gt;第 1 步：访问您的帐户。&lt;/p&gt;
&lt;p&gt;访问 http://www.google.com/adsense?hl=zh_CN&amp;amp;sct=app-fe，使用您随申请提交的电子邮件地址和密码登录。如果忘记了密码，请访问 http://www.google.com/adsense/support/as/bin/static.py?page=ts.cs&amp;amp;ts=1054302。&lt;/p&gt;
&lt;p&gt;第 2 步：创建 AdSense 广告单元。&lt;/p&gt;
&lt;p&gt;访问“我的广告”标签，确认选择的产品为“内容广告”，然后点击“新广告单元”。&lt;/p&gt;
&lt;p&gt;第 3 步：在您的网页上展示 AdSense 广告。&lt;/p&gt;
&lt;p&gt;在创建好广告单元后，我们会为您提供广告代码，供您粘贴到网站的 HTML 源代码中，这样您才可以展示广告。如在向网页添加代码方面需要帮助，请访问我们的“代码实施指南”：http://www.google.com/adsense/support/as/bin/static.py?page=guide.cs&amp;amp;guide=28893&amp;amp;sct=app-fe。如果您没有修改网页 HTML 源代码的权限，请与您的网站站长或托管公司联系。&lt;/p&gt;
&lt;p&gt;重要注意事项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;请勿点击自己的广告，即便是为了测试也不要这样做。对自己的广告进行点击的行为违反了 AdSense 合作规范：https://www.google.com/adsense/policies。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;我们会密切监控您的新帐户，确保其符合我们的合作规范。如果发现有违反合作规范的情况，我们可能会停止向您的网页投放广告或停用您的帐户。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;您可以随时向新网页或网站添加 AdSense 代码，只要其符合我们的合作规范即可。在添加代码时，您无需通知我们或申请新的帐户。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还有更多问题？请访问我们的帮助中心 (http://www.google.com/adsense/support/as/?sct=app-fe) 或 AdSense 博客 (http://adsense.blogspot.com?sct=app-fe) 寻找答案。此外，您还可以将自己的问题发布到 AdSense 帮助论坛，网址为：http://www.google.com/support/forum/p/AdSense?hl=zh_CN&amp;amp;sct=app-fe。再有，您可以访问以下网址，选择接收相应的电子邮件：https://www.google.com/adsense/lang-change?sct=app-fe。&lt;/p&gt;
&lt;p&gt;此致&lt;/p&gt;
&lt;p&gt;Google AdSense 小组敬上&lt;/p&gt;
&lt;p&gt;本电子邮件地址只作通知用途，不接收回信，因此请勿回复本邮件。&lt;/p&gt;
&lt;blockquote&gt;&lt;/blockquote&gt;</summary><category term="Adsense申请"></category></entry><entry><title>IBM主机技术一本通笔记</title><link href="http://mainframer.github.io/articles/IBM%E4%B8%BB%E6%9C%BA%E6%8A%80%E6%9C%AF%E4%B8%80%E6%9C%AC%E9%80%9A%E7%AC%94%E8%AE%B0.html" rel="alternate"></link><updated>2011-08-21T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-21:articles/IBM主机技术一本通笔记.html</id><summary type="html">&lt;p&gt;这一系列文章将会是从《IBM主机技术一本通》里面选取我个人认为对我有用的部分来记录和阐述。&lt;/p&gt;
&lt;h5&gt;1、LRECL和BLKSIZE&lt;/h5&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/LRECL-BLKSIZE.jpg" /&gt;           &lt;br /&gt;
&lt;strong&gt;LRECL&lt;/strong&gt;:逻辑记录是程序想要处理的一个数据单元，通常由许多连接在一起的区域构成。  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;BLKSIZE：物理单元(又称块)   描述了在一次输入输出操作中需要传送的数据量，如上图所示，你一定发现了BLKSIZE必须是LRECL的整数倍，显然这是因为BLKSIZE是多个LRECL嘛！ 
任何时候发生输入输出时传送的是整个块而不是单个逻辑记录，这样做的好处显而易见，有效地使用空间，提高传送率。&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5&gt;2、I——PDS(分区数据集)信息分析&lt;/h5&gt;
&lt;p&gt;一直对这个知识点一知半解的，今天看了一本通之后，算是明白了。照着图说： &lt;br /&gt;
&lt;img alt="1" src="./../images/PDS-Infor1.jpg" /&gt;   &lt;/p&gt;
&lt;p&gt;呃... 存储介质：标准磁盘；卷名：PRIM03；设备：3390；组织结构：PO(分区数据集)，固定记录长度，记录长度80字节，块大小27920字节，首次分配1 track，用完后每次可扩展分配195个tracks，当前已经分配了2个track，一共分配了1次，最多可以有10个目录块，即最多可以有10x4=40个member，当前已经使用了2个tracks，当前已经分配了1次，已经有6个member，使用了2个目录块(4和2)&lt;/p&gt;
&lt;h5&gt;3、L member&lt;/h5&gt;
&lt;p&gt;将这个命令列在这里不是不会用，恰恰是天天用经常用。只是羞于我一直以为这里L是List的缩写，原来人家吕老师说了，这是Locate的缩写，目的是每次都将PDS下面的你要找的member定位在第一个位置。   &lt;/p&gt;
&lt;h4&gt;4、查看VTOC信息&lt;/h4&gt;
&lt;p&gt;VTOC是系统中的一个顺序数据集，存放在磁盘的0柱面0磁道之后，65535磁道之前。用于记录存储设备上所有数据集的属性，每个磁盘均有一个VTOC。 &lt;br /&gt;
例如，我要查看磁盘卷PRIM02的信息。&lt;br /&gt;
&lt;code&gt;ruby3.4;V&lt;/code&gt;
在Volume Serial上填：   &lt;code&gt;PRIM02&lt;/code&gt;
&lt;img alt="1" src="./../images/MVS-VTOC-Info.jpg" /&gt;    &lt;/p&gt;
&lt;p&gt;PRIM02卷总共有50085 tracks，已经用了51%,1个cyls等于15个tracks，VTOC数据集本身分配了45个tracks,已用的占26%，还有1677个可用的DSCBS(数据集控制块)，PRIM02卷上一共还有24430tracks(即1590个Cyls)未使用，未使用的空间中最大的一块有3600tracks(即240个Cyls)。&lt;/p&gt;</summary><category term="z/OS"></category><category term="主机一本通"></category></entry><entry><title>IBM主机技术一本通笔记续</title><link href="http://mainframer.github.io/articles/IBM%E4%B8%BB%E6%9C%BA%E6%8A%80%E6%9C%AF%E4%B8%80%E6%9C%AC%E9%80%9A%E7%AC%94%E8%AE%B0%E7%BB%AD.html" rel="alternate"></link><updated>2011-08-21T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-21:articles/IBM主机技术一本通笔记续.html</id><summary type="html">&lt;h5&gt;1、JCL每行80列&lt;/h5&gt;
&lt;p&gt;原来这是因为在1960年那个年代，程序员使用的是穿孔卡片来将JCL作业控制语句一个一个的输入系统，构成了批量作业，而当时穿孔卡片只有80列。&lt;/p&gt;
&lt;h5&gt;2、JOB语句的关键字参数&lt;/h5&gt;
&lt;p&gt;ADDRSPC 
&lt;span style="color: #ff00ff;"&gt;REGION&lt;/span&gt; &lt;br /&gt;
&lt;span style="color: #ff00ff;"&gt;MSGCLASS&lt;/span&gt; &lt;br /&gt;
SECLABEL &lt;br /&gt;
&lt;span style="color: #ff00ff;"&gt;PASSWORD&lt;/span&gt;&lt;br /&gt;
BYTES   &lt;br /&gt;
&lt;span style="color: #ff00ff;"&gt;CLASS&lt;/span&gt; &lt;br /&gt;
RD MSGLEVEL &lt;br /&gt;
&lt;span style="color: #ff00ff;"&gt;TIME&lt;/span&gt; &lt;br /&gt;
PERFORM PAGES &lt;br /&gt;
&lt;span style="color: #ff00ff;"&gt;COND&lt;/span&gt; &lt;br /&gt;
LINES &lt;br /&gt;
CARDS &lt;br /&gt;
TYPRUN &lt;br /&gt;
PRTY &lt;br /&gt;
SCHENV &lt;br /&gt;
GROUP &lt;br /&gt;
&lt;span style="color: #ff00ff;"&gt;RESTART&lt;/span&gt; &lt;br /&gt;
&lt;span style="color: #ff00ff;"&gt;NOTIFY&lt;/span&gt; &lt;br /&gt;
&lt;span style="color: #ff00ff;"&gt;USER&lt;/span&gt; CCSID&lt;br /&gt;
标有颜色的几个是我自己比较常用到的。&lt;br /&gt;
上张包含了这9个常用JCL关键字参数的图(当然，平常工作当中一般不可能在单个JCL当中都包含了所有的这9个关键字，我这里只是为了更好的说明才把它们罗列在一个JCL里面的，这点要明白)
&lt;a href="./../images/JCL-keyword1.jpg"&gt;!&lt;/a&gt;  &lt;br /&gt;
&lt;strong&gt;&lt;code&gt;CLASS&lt;/code&gt;&lt;/strong&gt; : 是作业运行队列的优先级，MSGCLASS是作业输出信息的级别，它规定了作业输出信息送往哪里显示。CLASS和MSGCLASS都是公司规定好了的，肯定有文档可以查看具体信息的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;NOTIFY&lt;/code&gt;&lt;/strong&gt;:  是指最终作业运行的结果通知给谁，可以写详细的ID，比如IBMUSER，也可以写通用的参数，比如&lt;code&gt;&amp;amp;SYSUID&lt;/code&gt;，这样的话，谁运行它就显示给谁看。 &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;REGION&lt;/code&gt;&lt;/strong&gt;:  规定作业所需的实存或虚存的大小，在JOB level定义的话就运用到整个JOB的所有STEP，当然，可以每个STEP单独定义REGION的大小。      &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;TIME&lt;/code&gt;&lt;/strong&gt; :   用来限制作业占用CPU的最长时间，当TIME参数达到指定的时间时，作业就会异常终止，用来避免死循环等低级错误。图中我们规定CPU时间为1分30秒。TIME参数还可这么写： &lt;br /&gt;
&lt;code&gt;TIME=l440&lt;/code&gt;               ----1440 mins    &lt;br /&gt;
&lt;code&gt;TIME=NOLIMIT&lt;/code&gt;            ---- nolimit    &lt;br /&gt;
&lt;code&gt;TIME=MAXIMUM&lt;/code&gt;            ----357912 mins          &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;USER&lt;/code&gt;和&lt;code&gt;PASSWORD&lt;/code&gt;&lt;/strong&gt; :一起用，比如你自己的权限比较低，你申请了一个临时的权限比较高地ID来submit作业的时候，你就可以这么指定，系统会认为这个JOB是那个有较高权限的人提交的，而不是你提交的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;RESTART&lt;/code&gt;&lt;/strong&gt;: 用来指定JOB从哪一个STEP开始执行，不然默认就是从第一个STEP开始执行。      &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;COND&lt;/code&gt;&lt;/strong&gt;:    指定了单个STEP执行的前提条件，用法很灵活，这里不展开。    &lt;/p&gt;
&lt;h5&gt;3、PARM参数有100个字符限制&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;PARM&lt;/code&gt;参数用来在JCL的具体STEP中给程序传递变量参数，它用引号括起来，不能超过100个字符。 &lt;/p&gt;
&lt;h5&gt;4、Dummy 哑数据集&lt;/h5&gt;
&lt;p&gt;每个程序需要访问的数据集在作业流中都必须有一个ddname与其对应。如果你在程序里面定义了文件而在JCL中没有定义对应的DD语句，就会ABEND。当有时候输入数据集对程序来说是可选的或者程序要输出地数据集不是必需的时候，我们就用Dummy数据集来跳过它所有的I/O操作。   &lt;/p&gt;
&lt;h5&gt;5、DATASET串联(Concatenation)&lt;/h5&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/dataset-concatenation.jpg" /&gt;&lt;br /&gt;
使用这个特性是很方便的，特别是在一些SORT的场合，把几个DATASET同置于一个SORTIN下面。只是要注意的是这些DATASET的属性要完全一致，就是它们所有的DCB子参数必须一致。包括&lt;strong&gt;RECFM，LRECL，BLKSIZE&lt;/strong&gt;。&lt;/p&gt;</summary><category term="z/OS"></category><category term="主机一本通"></category></entry><entry><title>IBM主机技术一本通</title><link href="http://mainframer.github.io/articles/IBM%E4%B8%BB%E6%9C%BA%E6%8A%80%E6%9C%AF%E4%B8%80%E6%9C%AC%E9%80%9A.html" rel="alternate"></link><updated>2011-08-20T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-20:articles/IBM主机技术一本通.html</id><summary type="html">&lt;p&gt;周末去市图书馆走了一圈，竟然让我看到有本《IBM主机技术一本通》。这本书前两个月同事买了，貌似100多，现在京东报价是96元，淘宝上也差不多。当时我就快速翻了一遍，第一感觉是：书很厚，看了目录，贴近当前我所做的内容，还有就是内容丰富，涵盖的主机技术比较全，但貌似感觉有点罗列的成分，比较适合主机新人，给他们一个整体框架的印象。当然，800多页的书也并不是都是罗列，有很多内容是很详细的，我认为是：每个主机人都可以有针对性的看，你会的，快速过，不会的，详细看，最好要在大机上实践验证，这样记得牢。&lt;br /&gt;
刚拿回来，这么重的书我都背回来了，看来不看是对不住了。更何况是不花钱的好书。只不过没花钱买感觉有些对不住作者了。作者吕新民应该算国内主机界的资深前辈了吧。看人家的工作经历可以追溯到我出生之前好几年呢。&lt;br /&gt;
这是作者的新浪博客：&lt;a href="http://blog.sina.com.cn/newmanworkshop"&gt;http://blog.sina.com.cn/newmanworkshop&lt;/a&gt;,可以多关注下，都是为了学习进步嘛，希望前辈多出书呐！&lt;br /&gt;
好了，我会有一个详细的学习计划，好好把这本书吃透，从中汲取自己目前还欠缺的知识。&lt;/p&gt;</summary><category term="z/OS"></category><category term="主机一本通"></category></entry><entry><title>Ruby分割文件</title><link href="http://mainframer.github.io/articles/Ruby%E5%88%86%E5%89%B2%E6%96%87%E4%BB%B6.html" rel="alternate"></link><updated>2011-08-20T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-20:articles/Ruby分割文件.html</id><summary type="html">&lt;p&gt;自己小试的ruby程序,用于将一个&lt;code&gt;dictionary.txt&lt;/code&gt;分割成多个小一点的子文件，不然每次都操作&lt;code&gt;dictionary.txt&lt;/code&gt;显得很笨重。想把&lt;code&gt;dictionary.txt&lt;/code&gt;按照字母首a~z，每个首字母再按长度分为长度为1~3的比如a_1to3.txt，长度为4的a_4.txt，长度为5的a_5.txt，长度为6的a_6.txt，长度为7的a_7.txt，长度为8的a_8.txt，以及长度大于8的others。这样，dictionary.txt最后被分割成了6x26+1=157个子文件，就不会像处理dictionary.txt那样笨重了，毕竟CPU有限。&lt;br /&gt;
为啥wordpress里面粘贴代码都只有黑乎乎的一片呢，可爱的语法高亮在哪里？还是喜欢五颜六色的代码段啊，上图吧:&lt;br /&gt;
&lt;img alt="1" src="./../images/ruby_spilt_file.jpg" /&gt;     &lt;/p&gt;
&lt;p&gt;只需10秒左右，就生产了157个文件，a_1to3,a_4,a_5...b_1to3,b_4,b_5...z_1to3,z_4,z_5,z_6,z_7,z_8,others&lt;br /&gt;
这样分开来处理好多了。  &lt;/p&gt;
&lt;p&gt;为什么要分割dictionary.txt? 哪来做什么用？你问得太多了。&lt;/p&gt;</summary><category term="ruby"></category><category term="分割大文件"></category></entry><entry><title>常用的linux命令</title><link href="http://mainframer.github.io/articles/%E5%B8%B8%E7%94%A8%E7%9A%84linux%E5%91%BD%E4%BB%A4.html" rel="alternate"></link><updated>2011-08-17T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-17:articles/常用的linux命令.html</id><summary type="html">&lt;h4&gt;Ubuntu启动3D特效:&lt;/h4&gt;
&lt;p&gt;root@bt:~# sudo apt-get install compizconfig-settings-manager emerald fusion-ico&lt;br /&gt;
&lt;strong&gt;&lt;em&gt;注释&lt;/em&gt;&lt;/strong&gt;:&lt;code&gt;compizconfig-settings-manager&lt;/code&gt;是提供3D桌面特效的主程序，安装后出现在屏幕右上角，可以详细设置。emerald是提供窗口装饰的程序，fusion-icon是桌面栏中的图标&lt;/p&gt;
&lt;h5&gt;linux系统图标路径：&lt;/h5&gt;
&lt;p&gt;root@bt: &lt;code&gt;cd /usr/share/icons&lt;/code&gt;&lt;/p&gt;
&lt;h5&gt;查看最近使用的命令&lt;/h5&gt;
&lt;p&gt;root@bt:/# &lt;code&gt;history&lt;/code&gt;  &lt;/p&gt;
&lt;h5&gt;备份更新源文件&lt;/h5&gt;
&lt;p&gt;root@bt:~# &lt;code&gt;sudo cp /etc/apt/sources.list /etc/atp.sources.list.backup&lt;/code&gt;    &lt;br /&gt;
root@bt:~# &lt;code&gt;sudo gedit /etc/apt/sources.list&lt;/code&gt;    &lt;/p&gt;
&lt;h5&gt;软件包管理命令&lt;/h5&gt;
&lt;p&gt;root@bt:~#  &lt;code&gt;sudo apt-get update&lt;/code&gt;                     #刷新源文件列表  &lt;br /&gt;
root@bt:~#  &lt;code&gt;sudo apt-get upgrade&lt;/code&gt;                    #对所有软件自动升级  &lt;br /&gt;
root@bt:~#  &lt;code&gt;sudo apt-get dist-upgrade&lt;/code&gt;               #对系统升级  &lt;br /&gt;
root@bt:~#  &lt;code&gt;sudo apt-get install package&lt;/code&gt;            #安装软件包   &lt;br /&gt;
root@bt:~#  &lt;code&gt;sudo apt-get source package&lt;/code&gt;             #获得软件包源代码  &lt;br /&gt;
root@bt:~#  &lt;code&gt;sudo apt-get -f install&lt;/code&gt;                 #修复安装中的错误  &lt;br /&gt;
root@bt:~#  &lt;code&gt;sudo apt-get remove package&lt;/code&gt;             #卸载软件  &lt;br /&gt;
root@bt:~#  &lt;code&gt;sudo apt-get --purge remove package&lt;/code&gt;     #不仅卸载，还删除配置文件  &lt;br /&gt;
root@bt:~#  &lt;code&gt;sudo apt-get autoremove&lt;/code&gt;                 #自动清理系统中不用的软件包  &lt;br /&gt;
root@bt:~#  &lt;code&gt;sudo apt-get autoclean&lt;/code&gt;                  #自动删除系统中旧版本软件包  &lt;br /&gt;
root@bt:~#  &lt;code&gt;sudo apt-get clean&lt;/code&gt;                      #清除从源服务器上下载的软件包  &lt;br /&gt;
root@bt:~#  &lt;code&gt;sudo apt-get check&lt;/code&gt;                      #更新缓冲区并检查损坏的软件包   &lt;/p&gt;
&lt;h5&gt;dpkg安装deb包&lt;/h5&gt;
&lt;p&gt;root@bt:~#  &lt;code&gt;sudo dpkg -i package.deb&lt;/code&gt;                #安装deb包  &lt;br /&gt;
root@bt:~#  &lt;code&gt;sudo dpkg -s package&lt;/code&gt;                    #查询包信息  &lt;br /&gt;
root@bt:~#  &lt;code&gt;sudo dpkg-query -s package&lt;/code&gt;              #同上&lt;br /&gt;
root@bt:~#  &lt;code&gt;sudo dpkg -r package&lt;/code&gt;                    #卸载包&lt;br /&gt;
root@bt:~#  &lt;code&gt;sudo dpkg -P package&lt;/code&gt;                    #卸载同时删除配置文件  &lt;/p&gt;
&lt;h5&gt;下载资料&lt;/h5&gt;
&lt;p&gt;root@bt:~#  &lt;code&gt;wget  资源地址...&lt;/code&gt;  &lt;/p&gt;</summary><category term="常用linux命令"></category></entry><entry><title>介绍几个在线的资源</title><link href="http://mainframer.github.io/articles/%E4%BB%8B%E7%BB%8D%E5%87%A0%E4%B8%AA%E5%9C%A8%E7%BA%BF%E7%9A%84%E8%B5%84%E6%BA%90.html" rel="alternate"></link><updated>2011-08-16T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-16:articles/介绍几个在线的资源.html</id><summary type="html">&lt;p&gt;在平常，如果嫌麻烦，不想安装软件的话，可以试试在线的。特别是云计算正在慢慢普及，以后估计可能一个网络账号行遍互联网了。拭目以待吧！这里介绍几个我还比较常用到的在线资源。先声明，是本人用过的发现比较好用的，虽然写在这有些广告的嫌疑。&lt;/p&gt;
&lt;h5&gt;在线听歌&lt;/h5&gt;
&lt;p&gt;亦歌：&lt;a href="http://www.1g1g.com"&gt;http://www.1g1g.com&lt;/a&gt;&lt;br /&gt;
一听：&lt;a href="http://www.1ting.com"&gt;http://www.1ting.com&lt;/a&gt;&lt;br /&gt;
就个人来说，我计较倾向于亦歌，因为它的干净，界面简单。  &lt;/p&gt;
&lt;h5&gt;在线改图&lt;/h5&gt;
&lt;p&gt;&lt;a href="http://pixlr.com/editor/"&gt;http://pixlr.com/editor/&lt;/a&gt;&lt;br /&gt;
这个可是号称在线版本的&lt;code&gt;Photoshop&lt;/code&gt;啊。我觉得功能上来说，如果你不是影楼工作追究卓越的，而只是像我一样日常做些照片图片的修改，图片修改尺寸，再上点简单效果什么的，那么&lt;code&gt;pixlr&lt;/code&gt;完全可以胜任你的要求。就我来说，本站所有的图片都是在&lt;code&gt;pixlr&lt;/code&gt;修改的。如果你和我一样，嫌系统自带的画图工具太烂而又不想去安装个庞大的&lt;code&gt;photoshop&lt;/code&gt;或者&lt;code&gt;google picasa&lt;/code&gt;什么的，那么这个在线的&lt;code&gt;pixlr&lt;/code&gt;会是你不错的选择。&lt;/p&gt;
&lt;h5&gt;在线输入法&lt;/h5&gt;
&lt;p&gt;百度在线输入法： &lt;a href="http://www.baidu.com"&gt;http://www.baidu.com&lt;/a&gt;&lt;br /&gt;
搜狗云输入法:   &lt;a href="http://pinyin.sogou.com/cloud/"&gt;http://pinyin.sogou.com/cloud/&lt;/a&gt; &lt;br /&gt;
在线输入法呢，一般我们不会去用它，除非有一天它完善到跟桌面输入法有的媲美的时候。可是，有时候当你系统出毛病了输入法突然不能用了，又或者你新安装了一个linux系统还没来得及学习如何安装中文输入法的时候，你估计就用得上在线输入法了。百度的使用比较简答，虽然它貌似只能在百度首页用。用的时候点击百度搜索框右边的下拉框选择输入法就可以了。  &lt;/p&gt;
&lt;h5&gt;在线QQ&lt;/h5&gt;
&lt;p&gt;&lt;a href="http://web.qq.com"&gt;http://web.qq.com&lt;/a&gt;&lt;br /&gt;
这个不用说了，自从腾讯推出webQQ以来，这个Web平台上面的应用是越来越丰富了。可以看出腾讯在这块花了不少心思。因为是人都会明白未来的机遇在Web，桌面应用软件总会有寿终正寝的一天的。用过webqq的人都会有种感觉就是越来越像一个操作系统了，基本上你能想到的，人家麻花藤都帮你想好了。一句话，用户体验还是不错的。&lt;/p&gt;
&lt;h5&gt;在线翻译&lt;/h5&gt;
&lt;p&gt;&lt;a href="http://translate.google.cn/"&gt;http://translate.google.cn&lt;/a&gt;&lt;br /&gt;
谷歌翻译，这个也不用介绍了。用的也比较经常。 &lt;/p&gt;
&lt;h5&gt;在线杀毒&lt;/h5&gt;
&lt;p&gt;呵呵，几乎所有的在线杀毒厂家都鼓吹自己采用了最先进的云查杀技术，但是道高一尺魔高一丈，稍微有点免杀技术的人都知道，免费的查杀终究是免费的，能不能杀得到自己可以去试一下，金山啊瑞星啊都提供在线的杀毒或者查毒什么的。百度一下就可以了。&lt;/p&gt;
&lt;h5&gt;在线文档&lt;/h5&gt;
&lt;p&gt;&lt;a href="https://docs.google.com"&gt;https://docs.google.com&lt;/a&gt;&lt;br /&gt;
多么强大的东西，可惜被墙了。专门为它翻墙貌似不值得。 &lt;/p&gt;
&lt;h5&gt;在线记事本&lt;/h5&gt;
&lt;p&gt;&lt;a href="http://notepad.cc"&gt;http://notepad.cc&lt;/a&gt;&lt;br /&gt;
&lt;code&gt;notepad.cc&lt;/code&gt;的界面简洁 支持密码保护 讲事情记录在云端 取个你容易记住的名字 加上密码 随时随地都能记录事情。 &lt;br /&gt;
&lt;a href="http://www.google.com/notebook"&gt;http://www.google.com/notebook&lt;/a&gt;&lt;br /&gt;
还好这个没有被墙掉，google的在线记事本挺方便的，每次你新建一个记事本都会在网址后面生成一串字符以唯一标示。你可以用它随时随地的记录一些临时的信息。比如你在公司突然想到有什么需要记录的，你就记在上面，等回家一登陆就查看到了。&lt;/p&gt;
&lt;h5&gt;在线编译器&lt;/h5&gt;
&lt;p&gt;&lt;a href="http://codepad.org"&gt;http://codepad.org/&lt;/a&gt;  &lt;br /&gt;
&lt;a href="http://ideone.com/"&gt;http://ideone.com/&lt;/a&gt; &lt;br /&gt;
网页界面简洁，支持&lt;code&gt;C,C++,D,PHP,JAVA,PYTHON,Perl,Ruby&lt;/code&gt;等你能想到的编程语言。&lt;br /&gt;
嗯，就说这些。&lt;/p&gt;</summary><category term="在线好东西"></category></entry><entry><title>BT5安装openoffice和星际译王stardict</title><link href="http://mainframer.github.io/articles/BT5%E5%AE%89%E8%A3%85openoffice%E5%92%8C%E6%98%9F%E9%99%85%E8%AF%91%E7%8E%8Bstardict.html" rel="alternate"></link><updated>2011-08-14T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-14:articles/BT5安装openoffice和星际译王stardict.html</id><summary type="html">&lt;h3&gt;BT5下安装openoffice&lt;/h3&gt;
&lt;p&gt;上次装了Adobe Reader在BT5下面能看PDF了，后来发现不能看word，ppt，excel也是一件很痛快的事情，虽然安装了vmware-tools之后在windows和BT5直接直接来回拖文件也挺方便，但是也不那么方便，所以今天还是老老实实地把openoffice在BT5下面给安装了。
首先到openoffice官网上下载安装包，因为我选的是deb安装，而不是rpm安装，所以我下载deb包，放在~/software目录下。
root@bt:~#  &lt;code&gt;cd ~/software&lt;/code&gt; &lt;br /&gt;
root@bt:~/software#&lt;br /&gt;
root@bt:~/software#  &lt;code&gt;tar zxvf OOo_3.3.0_Linux_x86_install-deb_zh-CN.tar.gz&lt;/code&gt; &lt;br /&gt;
root@bt:~/software#  &lt;code&gt;cd OOO330_m20_native_packed-1_zh-CN.9567/&lt;/code&gt; &lt;br /&gt;
root@bt:~/software/OOO330_m20_native_packed-1_zh-CN.9567#  &lt;code&gt;ls&lt;/code&gt; &lt;br /&gt;
DEBS licenses readmes update  &lt;/p&gt;
&lt;h5&gt;进入DEBS目录，安装该目录下的所有deb包&lt;/h5&gt;
&lt;p&gt;root@bt:~#  &lt;code&gt;cd ~/DEBS&lt;/code&gt; &lt;br /&gt;
root@bt:~/software/OOO330_m20_native_packed-1_zh-CN.9567/DEBS#  &lt;code&gt;sudo dpkg -i *.deb&lt;/code&gt;   &lt;/p&gt;
&lt;h5&gt;完成后，进入desktop-integration目录，安装此目录下面的desktop integration包&lt;/h5&gt;
&lt;p&gt;root@bt:~/software/OOO330_m20_native_packed-1_zh-CN.9567/DEBS#  &lt;code&gt;cd desktop-integration/&lt;/code&gt; &lt;br /&gt;
root@bt:~/software/OOO330_m20_native_packed-1_zh-CN.9567/DEBS/desktop-integration#  &lt;code&gt;sudo dpkg -i openoffice.org3.3-debian-menus_3.3-9556_all.deb&lt;/code&gt; &lt;br /&gt;
OK，安装完成了，然后，你在左上角菜单：_Application——Office_里面会看到，除了上次我们装的Adobe Reader之外，多了一堆openoffice的东西，这样，我们就可以在BT5下面随便看常见的办公文档了。&lt;/p&gt;
&lt;h3&gt;BT5下安装星际译王stardict&lt;/h3&gt;
&lt;p&gt;在linux下面找到一款好用的词典可不像在windows下面那么简单，在BT5下面就更不用说了。估计除了stardict就不多了吧。在linux下面软件源里面直接有stardict，所以可以直接用&lt;code&gt;apt-get&lt;/code&gt;命令来安装: &lt;br /&gt;
root@bt: &lt;code&gt;apt-get install stardict&lt;/code&gt;   &lt;/p&gt;
&lt;h5&gt;安装完之后星际译王的图标就出现在_application-accessories_里面。&lt;/h5&gt;
&lt;p&gt;用法：只需将下载词典解压到_/usr/share/stardict/dic_，然后在星际译王软件里面配置添加词典即可。&lt;br /&gt;
记得以前词典下载地址是：&lt;code&gt;http://stardict.sourceforge.net/&lt;/code&gt; 
但是最近貌似都没得下了，好像是项目原因，移除了所有的词典。所以我就只能在网上搜些网友以前下载的"个人典藏’版咯！其实有本牛津，朗文，21世纪简明就够了,CSDN上面有得下载。  &lt;/p&gt;</summary><category term="Backtrack"></category><category term="openoffice"></category><category term="stardict"></category></entry><entry><title>Linux目录结构</title><link href="http://mainframer.github.io/articles/Linux%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.html" rel="alternate"></link><updated>2011-08-14T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-14:articles/Linux目录结构.html</id><summary type="html">&lt;p&gt;linux中以树形目录形式来管理的，并且所有的设备都是目录。linux只有一个根目录&lt;code&gt;‘/'&lt;/code&gt;，其余的目录都是根目录的子目录。
root@bt:/# ls /dev/sd*
&lt;code&gt;/dev/sda /dev/sda1 /dev/sda2 /dev/sda5&lt;/code&gt;
&lt;code&gt;注释:&lt;/code&gt;表示只有一块SATA硬盘，有两个主分区&lt;code&gt;(sda1,sda2)&lt;/code&gt;，一个逻辑分区&lt;code&gt;(sda5)&lt;/code&gt;。  &lt;/p&gt;
&lt;h5&gt;下面对根目录&lt;code&gt;'/'&lt;/code&gt;下的子目录来个介绍：&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;/usr&lt;/code&gt;:  包含所有命令，类库，系统帮助手册，即包含了系统运行不会修改的内容&lt;br /&gt;
&lt;code&gt;/var&lt;/code&gt;:  包含系统运行中会修改的内容，如打印队列，邮件列表等，还有系统中软件的日志信息&lt;br /&gt;
&lt;code&gt;/home&lt;/code&gt;: 用户的主目录，比如/home/user1,/home/user2，每个用户在这个目录下面都有一个自己的子目录&lt;br /&gt;
&lt;code&gt;/dev&lt;/code&gt;:  设备文件，如硬盘，光驱，USB设备，内存，总线，声卡等&lt;br /&gt;
&lt;code&gt;/tmp&lt;/code&gt;:  系统临时文件，在每次系统启动的时候都会被删掉&lt;br /&gt;
&lt;code&gt;/boot&lt;/code&gt;: 系统内核所在地，如果安装了启动管理器的话，也在这个目录下&lt;br /&gt;
&lt;code&gt;/mnt&lt;/code&gt;:  临时挂载的文件&lt;br /&gt;
&lt;code&gt;/proc&lt;/code&gt;: 硬件信息和配置文件的地方&lt;br /&gt;
&lt;code&gt;/etc&lt;/code&gt;:  包含了大部分系统配置文件，比如网络配置文件&lt;br /&gt;
&lt;code&gt;/bin&lt;/code&gt;:  引导启动所需的命令及用户在使用过程种可能会用到的程序&lt;br /&gt;
&lt;code&gt;/sbin&lt;/code&gt;: 与/bin类似，但一般是提供给root用户用的&lt;br /&gt;
&lt;code&gt;/root&lt;/code&gt;: root用户的主目录&lt;br /&gt;
&lt;code&gt;/lib&lt;/code&gt;:  根文件系统中程序所需的共享库   &lt;/p&gt;</summary><category term="Linux目录结构"></category></entry><entry><title>Linux下硬件信息查看</title><link href="http://mainframer.github.io/articles/Linux%E4%B8%8B%E7%A1%AC%E4%BB%B6%E4%BF%A1%E6%81%AF%E6%9F%A5%E7%9C%8B.html" rel="alternate"></link><updated>2011-08-13T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-13:articles/Linux下硬件信息查看.html</id><summary type="html">&lt;p&gt;以前linux对硬件的支持不怎么好这是大家普遍的印象，然而现在的linux发行版本对硬件的支持度已经算非常好了，普通的硬件像显卡，声卡等更笨不需要安装任何驱动就可以在linux下直接使用。只不过有时候为了更好地发挥硬件的性能，我们最好还是给硬件安装上驱动。安装驱动首先需要获得硬件的信息，特别是核心芯片的提供厂商。一般的我们都知道CPU的提供厂商有Intel和AMD两个，显卡的提供厂商有ATI,NVIDIA,SIS等。声卡呢，最常见的是创新提供的声卡。一般来说，像显卡，声卡，网卡这样的板卡的制造厂商都只是购买了核心芯片，然后在芯片周围做些外围的电路扩展以实现芯片的功能。这样就可以拿来卖给我们钱了。  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;Linux对硬件支持的原理&lt;/code&gt;linux只是简单的读取硬件的芯片信息用来和自己库里的驱动程序比较，发现有匹配的程序就用该驱动程序来加载硬件，实现各种功能。
当然，linux提供我们各种查询硬件信息的命令:&lt;/p&gt;
&lt;h4&gt;查看PCI设备&lt;/h4&gt;
&lt;p&gt;系统中大多数设置都是PCI设备(网卡，声卡，1394火线接口，集成显卡等)
root@bt:/proc#   &lt;code&gt;lspci -v&lt;/code&gt;        #详细pci状态信息 &lt;br /&gt;
root@bt:/proc#   &lt;code&gt;lspci -vv&lt;/code&gt;       #比上面的更详细 &lt;br /&gt;
root@bt:/proc# l &lt;code&gt;lspci -vvv&lt;/code&gt;      #比上面的更更详细   &lt;br /&gt;
root@bt:/proc#   &lt;code&gt;lspci -n&lt;/code&gt;        #显示设备商和设备代码 &lt;br /&gt;
root@bt:/proc#   &lt;code&gt;lspci -nn&lt;/code&gt;       #比上面的详细，多了名字&lt;br /&gt;
root@bt:/proc#   &lt;code&gt;lspci -nnn&lt;/code&gt;      #比上面的更详细 &lt;br /&gt;
root@bt:/proc#   &lt;code&gt;lspci -x&lt;/code&gt;        #显示硬件基本配置的二进制信息&lt;br /&gt;
root@bt:/proc#   &lt;code&gt;lspci -xxx&lt;/code&gt;      #比上面的详细 &lt;br /&gt;
root@bt:/proc#   &lt;code&gt;lspci -xxxx&lt;/code&gt;     #比上面的更详细 &lt;br /&gt;
root@bt:/proc#   &lt;code&gt;lspci -vvx&lt;/code&gt;      #可以组合着查看 &lt;br /&gt;
root@bt:/proc# l &lt;code&gt;lspci -vvxxx&lt;/code&gt;    #组合着查看   &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;注释&lt;/em&gt;&lt;/strong&gt;:lspci是从pciids数据库读取硬件信息的，如果出现硬件无法识别，可以使用&lt;code&gt;sudo update-pciide&lt;/code&gt;更新pci数据库。上面的命令查询结果在你的pci硬件出现问题的时候将其在网上公布，有热心网友或厂商会帮你解决的。&lt;/p&gt;
&lt;h5&gt;查看内核信息&lt;/h5&gt;
&lt;p&gt;root@bt:/proc#    &lt;code&gt;uname -a&lt;/code&gt;
Linux bt 2.6.38 #1 SMP Thu Mar 17 20:52:18 EDT 2011 i686 GNU/Linux&lt;br /&gt;
root@bt:/proc#     &lt;code&gt;uname --help&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="ss"&gt;Usage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;uname&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="no"&gt;OPTION&lt;/span&gt;&lt;span class="o"&gt;]...&lt;/span&gt;  
&lt;span class="no"&gt;Print&lt;/span&gt; &lt;span class="n"&gt;certain&lt;/span&gt; &lt;span class="nb"&gt;system&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="no"&gt;With&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt; &lt;span class="no"&gt;OPTION&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;same&lt;/span&gt; &lt;span class="n"&gt;as&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;following&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;except&lt;/span&gt; &lt;span class="n"&gt;omit&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ss"&gt;unknown&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;kernel&lt;/span&gt; &lt;span class="nb"&gt;name&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;nodename&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;network&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="n"&gt;hostname&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;release&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;kernel&lt;/span&gt; &lt;span class="n"&gt;release&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;kernel&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;machine&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;machine&lt;/span&gt; &lt;span class="n"&gt;hardware&lt;/span&gt; &lt;span class="nb"&gt;name&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;processor&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;processor&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;unknown&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;hardware&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;platform&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;hardware&lt;/span&gt; &lt;span class="n"&gt;platform&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;unknown&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;operating&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;system&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;operating&lt;/span&gt; &lt;span class="nb"&gt;system&lt;/span&gt;
&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;help&lt;/span&gt; &lt;span class="nb"&gt;display&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt;
&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;查看Ubuntu发行版本&lt;/h5&gt;
&lt;p&gt;root@bt:/proc#   &lt;code&gt;lsb_release -a&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;No&lt;/span&gt; &lt;span class="no"&gt;LSB&lt;/span&gt; &lt;span class="n"&gt;modules&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;available&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="no"&gt;Distributor&lt;/span&gt; &lt;span class="ss"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;Ubuntu&lt;/span&gt;
&lt;span class="ss"&gt;Description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;Ubuntu&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mo"&gt;04&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="no"&gt;LTS&lt;/span&gt;
&lt;span class="ss"&gt;Release&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mo"&gt;04&lt;/span&gt;
&lt;span class="ss"&gt;Codename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;lucid&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="c1"&gt;#发行版本代号&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;查看内核加载模块&lt;/h5&gt;
&lt;p&gt;root@bt:/proc#  &lt;code&gt;lsmod&lt;/code&gt;&lt;/p&gt;
&lt;h5&gt;查看usb设备使用情况&lt;/h5&gt;
&lt;p&gt;root@bt:/proc#    &lt;code&gt;lsusb&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Bus 002 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub
Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;&lt;em&gt;注释&lt;/em&gt;&lt;/strong&gt;:如果usb设备未被占用，ID号会显示:0000:0000
root@bt:/proc#  &lt;code&gt;lsusb -v&lt;/code&gt;            #输出详细的USB信息&lt;/p&gt;
&lt;h5&gt;查看网卡状态&lt;/h5&gt;
&lt;p&gt;root@bt:/proc#  &lt;code&gt;ethtool eth0&lt;/code&gt;        #查看第一个网卡(eth0)的状态信息&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Settings for eth0:
Supported ports: [ TP ]
Supported link modes: 1000baseT/Full  #1000M全双工网卡
Supports auto-negotiation: No         #不支持自协商
Advertised link modes: Not reported
Advertised pause frame use: No
Advertised auto-negotiation: No
Link partner advertised link modes: Not reported
Link partner advertised pause frame use: No
Link partner advertised auto-negotiation: No
Speed: 1000Mb/s
Duplex: Full
Port: Twisted Pair
PHYAD: 0
Transceiver: internal
Auto-negotiation: off
MDI-X: Unknown
Link detected: yes
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;查看CPU信息&lt;/h5&gt;
&lt;p&gt;root@bt:/proc#   &lt;code&gt;cat cpuinfo&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;processor&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt;  #编号&lt;/span&gt;
&lt;span class="n"&gt;vendor_id&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;GenuineIntel&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; #&lt;/span&gt;&lt;span class="n"&gt;intel&lt;/span&gt;&lt;span class="err"&gt;架构&lt;/span&gt;
&lt;span class="n"&gt;cpu&lt;/span&gt; &lt;span class="n"&gt;family&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; #体系编号&lt;/span&gt;
&lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; #型号&lt;/span&gt;
&lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Intel&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;Core&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TM&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="n"&gt;Duo&lt;/span&gt; &lt;span class="n"&gt;CPU&lt;/span&gt; &lt;span class="n"&gt;P8700&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt; &lt;span class="mf"&gt;2.53&lt;/span&gt;&lt;span class="n"&gt;GHz&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; #名称，主频&lt;/span&gt;
&lt;span class="n"&gt;stepping&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt;#倍频&lt;/span&gt;
&lt;span class="n"&gt;cpu&lt;/span&gt; &lt;span class="n"&gt;MHz&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;2534.000&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; #实际速度&lt;/span&gt;
&lt;span class="n"&gt;cache&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3072&lt;/span&gt; &lt;span class="n"&gt;KB&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; #缓存大小&lt;/span&gt;
&lt;span class="n"&gt;fdiv_bug&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt;
&lt;span class="n"&gt;hlt_bug&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt;
&lt;span class="n"&gt;f00f_bug&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt;
&lt;span class="n"&gt;coma_bug&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt;
&lt;span class="n"&gt;fpu&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;span class="n"&gt;fpu_exception&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;span class="n"&gt;cpuid&lt;/span&gt; &lt;span class="n"&gt;level&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;
&lt;span class="n"&gt;wp&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;span class="n"&gt;flags&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;fpu&lt;/span&gt; &lt;span class="n"&gt;vme&lt;/span&gt; &lt;span class="n"&gt;de&lt;/span&gt; &lt;span class="n"&gt;pse&lt;/span&gt; &lt;span class="n"&gt;tsc&lt;/span&gt; &lt;span class="n"&gt;msr&lt;/span&gt; &lt;span class="n"&gt;pae&lt;/span&gt; &lt;span class="n"&gt;mce&lt;/span&gt; &lt;span class="n"&gt;cx8&lt;/span&gt; &lt;span class="n"&gt;apic&lt;/span&gt; &lt;span class="n"&gt;sep&lt;/span&gt; &lt;span class="n"&gt;mtrr&lt;/span&gt; &lt;span class="n"&gt;pge&lt;/span&gt; &lt;span class="n"&gt;mca&lt;/span&gt; &lt;span class="n"&gt;cmov&lt;/span&gt; &lt;span class="n"&gt;pat&lt;/span&gt; &lt;span class="n"&gt;pse36&lt;/span&gt; &lt;span class="n"&gt;clflush&lt;/span&gt; &lt;span class="n"&gt;dts&lt;/span&gt; &lt;span class="n"&gt;acpi&lt;/span&gt; &lt;span class="n"&gt;mmx&lt;/span&gt; &lt;span class="n"&gt;fxsr&lt;/span&gt; &lt;span class="n"&gt;sse&lt;/span&gt; &lt;span class="n"&gt;sse2&lt;/span&gt; &lt;span class="n"&gt;ss&lt;/span&gt; &lt;span class="n"&gt;nx&lt;/span&gt; &lt;span class="n"&gt;lm&lt;/span&gt; &lt;span class="n"&gt;constant_tsc&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt; &lt;span class="n"&gt;arch_perfmon&lt;/span&gt; &lt;span class="n"&gt;pebs&lt;/span&gt; &lt;span class="n"&gt;bts&lt;/span&gt; &lt;span class="n"&gt;xtopology&lt;/span&gt; &lt;span class="n"&gt;tsc_reliable&lt;/span&gt; &lt;span class="n"&gt;aperfmperf&lt;/span&gt; &lt;span class="n"&gt;pni&lt;/span&gt; &lt;span class="n"&gt;ssse3&lt;/span&gt; &lt;span class="n"&gt;cx16&lt;/span&gt; &lt;span class="n"&gt;sse4_1&lt;/span&gt; &lt;span class="n"&gt;hypervisor&lt;/span&gt; &lt;span class="n"&gt;lahf_lm&lt;/span&gt; &lt;span class="n"&gt;ida&lt;/span&gt; &lt;span class="n"&gt;dts&lt;/span&gt;
&lt;span class="n"&gt;bogomips&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;5068.00&lt;/span&gt;
&lt;span class="n"&gt;clflush&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt;
&lt;span class="n"&gt;cache_alignment&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt;
&lt;span class="n"&gt;address&lt;/span&gt; &lt;span class="n"&gt;sizes&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt; &lt;span class="n"&gt;bits&lt;/span&gt; &lt;span class="n"&gt;physical&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt; &lt;span class="n"&gt;bits&lt;/span&gt; &lt;span class="n"&gt;virtual&lt;/span&gt;
&lt;span class="n"&gt;power&lt;/span&gt; &lt;span class="n"&gt;management&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;查看当前硬件信息&lt;/h5&gt;
&lt;p&gt;root@bt:/proc#    &lt;code&gt;lshw&lt;/code&gt;                 #显示完整的系统硬件信息，包括内存，cpu版本...
root@bt:/proc#    &lt;code&gt;lshw -short&lt;/code&gt;          #短格式显示
root@bt:/proc#    &lt;code&gt;lshw -class disk&lt;/code&gt;     #显示磁盘信息
root@bt:/proc#    &lt;code&gt;lshw -class storage&lt;/code&gt;  #显示存储控制设备信息&lt;/p&gt;
&lt;h5&gt;查看当前内存使用情况&lt;/h5&gt;
&lt;p&gt;root@bt:/proc#    &lt;code&gt;free&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;total used free shared buffers cached
Mem: 1025720 373120 652600 0 35052 207464
-/+ buffers/cache: 130604 895116
Swap: 916476 0 916476
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;&lt;em&gt;注释&lt;/em&gt;&lt;/strong&gt;：内存实际使用量看&lt;code&gt;-/+ buffers/cache&lt;/code&gt;这一行，是130604K,Mem行是名义上的使用情况，是加上了缓存和缓冲区使用量之后的。
名义上的内存使用373120K=130604K+35052K+207464K&lt;/p&gt;</summary><category term="Linux硬件"></category></entry><entry><title>Linux分区挂载</title><link href="http://mainframer.github.io/articles/Linux%E5%88%86%E5%8C%BA%E6%8C%82%E8%BD%BD.html" rel="alternate"></link><updated>2011-08-13T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-13:articles/Linux分区挂载.html</id><summary type="html">&lt;p&gt;硬盘的分区分为主分区和逻辑分区，一块硬盘最多只能有4个主分区。主分区是用来存放操作系统引导信息的，但并不要认为一块硬盘最多只能安装4个操作系统，因为只有&lt;code&gt;Windows&lt;/code&gt;和&lt;code&gt;FressBSD&lt;/code&gt;等操作系统才需要将自己安装在硬盘的主分区里面，而&lt;code&gt;Linux&lt;/code&gt;呢，可以被安装在逻辑分区里面。&lt;/p&gt;
&lt;h5&gt;分区编号&lt;/h5&gt;
&lt;p&gt;Linux将所有的存储设备(包括硬盘)都挂载&lt;code&gt;/dev&lt;/code&gt;目录下新建一个子目录来管理，比如下面:&lt;br /&gt;
&lt;code&gt;/dev/hda1&lt;/code&gt; 第一块IDE硬盘的第一个主分区  &lt;br /&gt;
&lt;code&gt;/dev/hda2&lt;/code&gt; 第一块IDE硬盘的第二个主分区  &lt;br /&gt;
&lt;code&gt;/dev/hda5&lt;/code&gt; 第一块IDE硬盘的第一个逻辑分区(逻辑分区从5开始，1~4一定不会是逻辑分区)  &lt;br /&gt;
&lt;code&gt;/dev/sda1&lt;/code&gt; 第一块SATA硬盘的第一个主分区(USB设备也用sd表示)   &lt;/p&gt;
&lt;h5&gt;挂载点&lt;/h5&gt;
&lt;p&gt;所谓挂载点，就是将分区挂到一个以&lt;code&gt;“/”&lt;/code&gt;开头的目录中。  &lt;br /&gt;
&lt;code&gt;/&lt;/code&gt;:      根目录，必须挂载的目录，是所有其他目录的基础。现在安装ubuntu都有桌面系统，所以大概分配10~20G给根目录。   &lt;br /&gt;
&lt;code&gt;swap&lt;/code&gt;:   交换分区，相当于windows当中的虚拟内存，在linux中将其单独分离出来，直接放在独立的分区上。这个分区一般大小为内存大小的2倍即可。  &lt;br /&gt;
&lt;code&gt;/home&lt;/code&gt;:  用户的主目录 ，是我们存放文件的地方。应当为其独立分配一个分区，这样的话重装系统就不会破坏这个分区里面的文件，并且很多软件的配置信息都存在这里面，重装系统之后就不用再花费精力去重新配置。  &lt;br /&gt;
&lt;code&gt;/usr&lt;/code&gt;:   应用程序目录 ，大部分软件都安装在这里，普通用户可不再划分这个分区。  &lt;br /&gt;
&lt;code&gt;/var&lt;/code&gt;:   安装的是服务器方面的应用，作为桌面个人用户的话，大可不必划分这个分区。  &lt;br /&gt;
&lt;code&gt;/boot&lt;/code&gt;:  存放系统启动所需要的内核文件，包括启动管理器，建议用户划分这个分区。当然，由于内核不大，所以划分500M到1个G给这个分区足够了。  &lt;/p&gt;</summary><category term="Linux分区"></category><category term="Linux挂载"></category></entry><entry><title>CICS应用编程接口</title><link href="http://mainframer.github.io/articles/CICS%E5%BA%94%E7%94%A8%E7%BC%96%E7%A8%8B%E6%8E%A5%E5%8F%A3.html" rel="alternate"></link><updated>2011-08-12T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-12:articles/CICS应用编程接口.html</id><summary type="html">&lt;h3&gt;开发语言&lt;/h3&gt;
&lt;p&gt;可以用COBOL,C,C++,Assembler,PL/I等来编写CICS应用程序的主要的大部分逻辑处理功能，而只有少数的一部分功能需要用到CICS命令。&lt;/p&gt;
&lt;h5&gt;CICS命令格式&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;EXEC CICS SEND FROM (MSG-AREA) LENGTH(5) END-EXEC&lt;/code&gt;                                         ——向终端发送长度为5的MSG-AREA信息       &lt;br /&gt;
&lt;code&gt;EXEC CICS READ FILE('FILEA') INTO (CUSTOMER-REC) RIDFLD(CUSTOMER-NUM)&lt;/code&gt;                     ——读和修改VSAM文件       &lt;br /&gt;
&lt;code&gt;EXEC SQL SELECT colum_names INTO program_variables From Table_name WHERE ... END-EXEC&lt;/code&gt;     ——读和修改关系型数据库&lt;br /&gt;
&lt;code&gt;EXEC CICS READ ... RESP(RESPONSE-FIELD)&lt;/code&gt;  或  &lt;code&gt;EXEC CICS HANDLE CONDITION&lt;/code&gt;                 ——处理异常条件   &lt;/p&gt;
&lt;h5&gt;CICS API主要服务&lt;/h5&gt;
&lt;p&gt;CICS API主要服务：访问和修改文件；访问和修改关系、层次性数据库；终端的输入和输出；用户定义的数据队列；在一个事务中的多程序间的控制操纵；启动另一个事务;&lt;/p&gt;
&lt;h5&gt;CICS程序控制的3种方式&lt;/h5&gt;
&lt;p&gt;&lt;strong&gt;RETURN&lt;/strong&gt;:  释放控制于上一高层程序。    &lt;br /&gt;
&lt;strong&gt;LINK&lt;/strong&gt;:    链接出去执行后返回，就像执行一个子程序。  &lt;br /&gt;
&lt;strong&gt;XCTL&lt;/strong&gt;:    传递控制于制定程序，但不再返回程序，而返回本层。  &lt;/p&gt;
&lt;h5&gt;CICS程序的安装&lt;/h5&gt;
&lt;p&gt;&lt;strong&gt;1、&lt;/strong&gt; 预编译，即翻译，将&lt;code&gt;EXEC CICS&lt;/code&gt;语句翻译成编程语言的源语句。当然，如果源程序中还是用了&lt;code&gt;EXEC SQL&lt;/code&gt;嵌套数据库功能，那么在此之前必须先进行关系数据库的预编译。
&lt;strong&gt;2、&lt;/strong&gt; 编译源程序，生成二进制代码。
&lt;strong&gt;3、&lt;/strong&gt; 链接，将链接生成的结果放到装载库(load lib)当中。
我用word简单画了个图，丑了点。&lt;br /&gt;
&lt;img alt="1" src="./../images/CICS-Compile.jpg" /&gt;    &lt;/p&gt;</summary><category term="z/OS"></category><category term="CICS接口"></category></entry><entry><title>外企email常见英语缩写</title><link href="http://mainframer.github.io/articles/%E5%A4%96%E4%BC%81email%E5%B8%B8%E8%A7%81%E8%8B%B1%E8%AF%AD%E7%BC%A9%E5%86%99.html" rel="alternate"></link><updated>2011-08-11T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-11:articles/外企email常见英语缩写.html</id><summary type="html">&lt;p&gt;说几个在外企工作跟老外email或者聊天工具中常用的英语缩写： 
&lt;code&gt;AFAIK&lt;/code&gt;：as far as I know&lt;br /&gt;
&lt;code&gt;APP&lt;/code&gt;： application    &lt;br /&gt;
&lt;code&gt;ASAP&lt;/code&gt;： As soon as possible    &lt;br /&gt;
&lt;code&gt;ATB&lt;/code&gt;：all the best &lt;br /&gt;
&lt;code&gt;BTW&lt;/code&gt;： by the way    &lt;br /&gt;
&lt;code&gt;Biz&lt;/code&gt;： business    &lt;br /&gt;
&lt;code&gt;B4&lt;/code&gt;：before  &lt;br /&gt;
&lt;code&gt;CC&lt;/code&gt;：carbon copy(抄送)    &lt;br /&gt;
&lt;code&gt;CUZ&lt;/code&gt;： because    &lt;br /&gt;
&lt;code&gt;FAQ&lt;/code&gt;：frequently asked questions    &lt;br /&gt;
&lt;code&gt;FE&lt;/code&gt;： for example  &lt;br /&gt;
&lt;code&gt;FTF&lt;/code&gt;： face to face    &lt;br /&gt;
&lt;code&gt;FYI&lt;/code&gt;： for your information     &lt;br /&gt;
&lt;code&gt;F2T&lt;/code&gt;：free to talk  &lt;br /&gt;
&lt;code&gt;GR8&lt;/code&gt;：great  &lt;br /&gt;
&lt;code&gt;IDK&lt;/code&gt;：I don't know  &lt;br /&gt;
&lt;code&gt;JK&lt;/code&gt;：just kidding  &lt;br /&gt;
&lt;code&gt;KIT&lt;/code&gt;：keep in touch  &lt;br /&gt;
&lt;code&gt;MSG&lt;/code&gt;：message    &lt;br /&gt;
&lt;code&gt;NP&lt;/code&gt;： no problem    &lt;br /&gt;
&lt;code&gt;NRN&lt;/code&gt;： no reply necessary  &lt;br /&gt;
&lt;code&gt;OFCZ&lt;/code&gt;：of course    &lt;br /&gt;
&lt;code&gt;OIC&lt;/code&gt;：oh I see  &lt;br /&gt;
&lt;code&gt;OMG&lt;/code&gt;： oh my god  &lt;br /&gt;
&lt;code&gt;Pic&lt;/code&gt;： picture  &lt;br /&gt;
&lt;code&gt;PLS&lt;/code&gt;：please    &lt;br /&gt;
&lt;code&gt;THX&lt;/code&gt;: thanks    &lt;br /&gt;
&lt;code&gt;TMR&lt;/code&gt;: tomorrow    &lt;br /&gt;
&lt;code&gt;TTYL&lt;/code&gt;：talk to you later  &lt;br /&gt;
&lt;code&gt;TY&lt;/code&gt;： Thank you  &lt;br /&gt;
今天就记起这么多，以后遇到了再补上！&lt;/p&gt;</summary><category term="外企email"></category></entry><entry><title>Backtrack一些基本配置</title><link href="http://mainframer.github.io/articles/Backtrack%E4%B8%80%E4%BA%9B%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE.html" rel="alternate"></link><updated>2011-08-09T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-09:articles/Backtrack一些基本配置.html</id><summary type="html">&lt;h5&gt;查看网络配置信息&lt;/h5&gt;
&lt;p&gt;root@bt:/#  &lt;code&gt;ifconfig -a&lt;/code&gt;     &lt;/p&gt;
&lt;h5&gt;手动激活未使用的网卡eth0&lt;/h5&gt;
&lt;p&gt;root@bt:/#  &lt;code&gt;ifconfig eth0 up&lt;/code&gt;     &lt;/p&gt;
&lt;h5&gt;通过DHCP自动为eth0网卡分配ip地址&lt;/h5&gt;
&lt;p&gt;root@bt:/#  &lt;code&gt;dhclient eth0&lt;/code&gt;    &lt;/p&gt;
&lt;h5&gt;也可手动为eth0网卡分配ip&lt;/h5&gt;
&lt;p&gt;root@bt:/#  &lt;code&gt;ifconfig eth0 192.168.1.105 netmask 255.255.255.0&lt;/code&gt;     &lt;/p&gt;
&lt;h5&gt;添加网关&lt;/h5&gt;
&lt;p&gt;root@bt:/#  &lt;code&gt;route add default gw 192.168.1.1&lt;/code&gt;     &lt;/p&gt;
&lt;h5&gt;查看dns配置信息:&lt;/h5&gt;
&lt;p&gt;root@bt:/#  &lt;code&gt;cat /etc/resolv.conf&lt;/code&gt;    &lt;/p&gt;
&lt;h5&gt;编辑dns配置信息:&lt;/h5&gt;
&lt;p&gt;root@bt:/#  &lt;code&gt;sudo geit /etc/resolv.conf&lt;/code&gt;     &lt;/p&gt;
&lt;h5&gt;编辑你的dns:&lt;/h5&gt;
&lt;p&gt;nameserver xx.xx.xx.xx&lt;br /&gt;
nameserver xx.xx.xx.xx&lt;br /&gt;
domain domain&lt;br /&gt;
search domain  &lt;/p&gt;
&lt;h5&gt;升级backtrack工具和软件&lt;/h5&gt;
&lt;p&gt;root@bt:/#  &lt;code&gt;sudo apt-get upgrade&lt;/code&gt;  &lt;/p&gt;</summary><category term="Backtrack"></category></entry><entry><title>ISPF中通配符%和*的使用</title><link href="http://mainframer.github.io/articles/ISPF%E4%B8%AD%E9%80%9A%E9%85%8D%E7%AC%A6%%E5%92%8C*%E7%9A%84%E4%BD%BF%E7%94%A8.html" rel="alternate"></link><updated>2011-08-08T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-08:articles/ISPF中通配符%和*的使用.html</id><summary type="html">&lt;p&gt;在日常的操作过程中，发现通配符__%&lt;strong&gt;和_&lt;strong&gt;&lt;em&gt;_使用的场合还是很多的，而且重要的是，如果使用好的话，真的是会很大程度上提高工作效率的。
和其他系统的通配符没什么区别，在大机上也是这么定义的：  &lt;br /&gt;
&lt;/em&gt;_%&lt;/strong&gt;：任意一位字符  &lt;br /&gt;
&lt;/strong&gt;*__：任意一至多位字符  &lt;br /&gt;
下面举两个例子： &lt;br /&gt;
输入：&lt;code&gt;IBMUSER.TEST.LIB%&lt;/code&gt;&lt;br /&gt;
&lt;img alt="1" src="./../images/wild_character01.jpg" /&gt;    &lt;/p&gt;
&lt;p&gt;输入：&lt;code&gt;IBMUSER.*.LIB&lt;/code&gt;  &lt;br /&gt;
&lt;img alt="1" src="./../images/wild_character02.jpg" /&gt;       &lt;/p&gt;
&lt;p&gt;当然，两者可以根据你的需要任意组合使用，这个是没问题的。就像：&lt;code&gt;IBMUSER.*.LIB%&lt;/code&gt;这样。&lt;/p&gt;</summary><category term="ISPF通配符"></category></entry><entry><title>OLTP和CICS</title><link href="http://mainframer.github.io/articles/OLTP%E5%92%8CCICS.html" rel="alternate"></link><updated>2011-08-07T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-07:articles/OLTP和CICS.html</id><summary type="html">&lt;h3&gt;OLTP:联机事务处理&lt;/h3&gt;
&lt;p&gt;事务的ACID属性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原子性(Atomicity) &lt;/li&gt;
&lt;li&gt;一致性(Consistency) &lt;/li&gt;
&lt;li&gt;孤立性(Isolation) &lt;/li&gt;
&lt;li&gt;持久性(Durability)
关于OLTP的完整性和可恢复机制,这里举两种情况: 
&lt;strong&gt;&lt;em&gt;a)、&lt;/em&gt;&lt;/strong&gt; 某人从ATM取200块钱，ATM向银行的主机递交请求(主机存储着客户的账户信息)，主机批准且从该人账户上扣去200元，此时ATM发生故障不工作了，此人没拿到钱。&lt;br /&gt;
&lt;strong&gt;&lt;em&gt;b)、&lt;/em&gt;&lt;/strong&gt; 某人从ATM取200块钱，ATM向主机递交请求，主机批准并且从客户帐上减去200元，ATM付200元给此人，此时主机保存取款记录的磁盘坏了，取款信息丢失。&lt;br /&gt;
此类问题层出不穷，增加了程序员代码逻辑处理的难度。我们需要一个环境，它能自动处理事务处理中所有可能的失败，使应用开发人员可以集中于商务的应用开发，而不必编写失败处理程序，不必关心通信和硬件等引起的问题。再来看一个问题： &lt;br /&gt;
&lt;strong&gt;&lt;em&gt;c)、&lt;/em&gt;&lt;/strong&gt; 航班订票，如果有两个客户在先后时间都要预定某一航班的同一座位，如何避免同一座位被售两次？
通过锁住记录的方法，使得第二个请求必须等待第一个请求完成，而此时，该座位已经变成已预订状态，自然不会被再次预定。
各大公司相应地采用事务管理器，如IBM公司的CICS和IMS,EBA Systems的TUXEDO，DEC的ACMS，Transara的Encina灯来实现这些功能，解放应用开发人员以集中处理商务逻辑。我们可以认为事务管理器是对应用程序提供服务的，将应用程序于复杂系统软硬件分离开来的一层软件，亦称&lt;code&gt;中间件&lt;/code&gt;。自下而上的顺序为：&lt;code&gt;硬件——操作系统——中间件——应用程序&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;CICS:客户信息管理系统&lt;/h3&gt;
&lt;p&gt;CICS是IBM最流行的事务管理系统，从1968年到现在，成为事务处理环境中的佼佼者。CICS现在有从桌面到主机环境各种不同平台和操作系统的产品。如CICS/VSE,CICS/MVS,CICS/400（for AS/400),CICS/6000(for Rs/6000),CICS for OS2,CICS for Windows/NT等等。各种CICS产品通过提供以下服务而提高了生产力：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;向上提供一致性的应用程序编程接口API;&lt;/li&gt;
&lt;li&gt;向下提供透明访问操作系统的功能；  &lt;/li&gt;
&lt;li&gt;系统管理的辅助工具；&lt;br /&gt;
&lt;code&gt;CICS/ESA&lt;/code&gt;用来处理大型机OS/390上的巨量事务，近期版本增加了许多特性：建立了再OLTP下的标准，增加了子系统存储的保护，分布式程序连接，前端编程接口(FEPI)。&lt;/li&gt;
&lt;/ul&gt;</summary><category term="z/OS"></category><category term="OLTP"></category><category term="CICS"></category></entry><entry><title>Backtrack5安装Adobe reader看PDF</title><link href="http://mainframer.github.io/articles/Backtrack5%E5%AE%89%E8%A3%85Adobe%20reader%E7%9C%8BPDF.html" rel="alternate"></link><updated>2011-08-06T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-06:articles/Backtrack5安装Adobe reader看PDF.html</id><summary type="html">&lt;p&gt;Linux下的办公软件Openoffice和Libreoffice都很不错，小巧的foxit reader也很好，不过我还是习惯用adobe reader，所以还是决定在bt5下安装adobe reader。&lt;/p&gt;
&lt;h3&gt;1、下载压缩包到/tmp&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="vi"&gt;@bt&lt;/span&gt;&lt;span class="ss"&gt;:~&lt;/span&gt;&lt;span class="c1"&gt;#  cd /tmp   &lt;/span&gt;
&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="vi"&gt;@bt&lt;/span&gt;&lt;span class="ss"&gt;:/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="c1"&gt;#  wget -c http://221.1.222.15:82/down/AdbeRdr9.4.2-1_i486linux_enu.tar.bz2 &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;2、下载好之后解压:&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="vi"&gt;@bt&lt;/span&gt;&lt;span class="ss"&gt;:/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="c1"&gt;#  tar jxvf AdbeRdr9.4.2-1_i486linux_enu.tar.bz2  &lt;/span&gt;
&lt;span class="ss"&gt;tar&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;Record&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="n"&gt;blocks&lt;/span&gt;  
&lt;span class="no"&gt;AdobeReader&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;   
&lt;span class="no"&gt;AdobeReader&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;INSTALL&lt;/span&gt;   
&lt;span class="no"&gt;AdobeReader&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;ReadMe&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;htm&lt;/span&gt;  
&lt;span class="no"&gt;AdobeReader&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;COMMON&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TAR&lt;/span&gt;  
&lt;span class="no"&gt;AdobeReader&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;ILINXR&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TAR&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;解压后在/tmp路径下生成了AdobeReader的文件夹  &lt;/p&gt;
&lt;h3&gt;3、安装&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="vi"&gt;@bt&lt;/span&gt;&lt;span class="ss"&gt;:/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="c1"&gt;#  cd AdobeReader    &lt;/span&gt;
&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="vi"&gt;@bt&lt;/span&gt;&lt;span class="ss"&gt;:/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;AdobeReader&lt;/span&gt;&lt;span class="c1"&gt;#  ls  &lt;/span&gt;
&lt;span class="no"&gt;COMMON&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TAR&lt;/span&gt; &lt;span class="no"&gt;ILINXR&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TAR&lt;/span&gt; &lt;span class="no"&gt;INSTALL&lt;/span&gt; &lt;span class="no"&gt;ReadMe&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;htm&lt;/span&gt;  
&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="vi"&gt;@bt&lt;/span&gt;&lt;span class="ss"&gt;:/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;AdobeReader&lt;/span&gt;&lt;span class="c1"&gt;#  ./INSTALL   &lt;/span&gt;
&lt;span class="no"&gt;This&lt;/span&gt; &lt;span class="n"&gt;installation&lt;/span&gt; &lt;span class="n"&gt;requires&lt;/span&gt; &lt;span class="mi"&gt;145&lt;/span&gt; &lt;span class="no"&gt;MB&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;free&lt;/span&gt; &lt;span class="n"&gt;disk&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  
&lt;span class="no"&gt;Enter&lt;/span&gt; &lt;span class="n"&gt;installation&lt;/span&gt; &lt;span class="n"&gt;directory&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="no"&gt;Adobe&lt;/span&gt; &lt;span class="no"&gt;Reader&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;/opt]  #直接回车  &lt;/span&gt;
&lt;span class="sr"&gt;/o&lt;/span&gt;&lt;span class="n"&gt;pt&lt;/span&gt;  
&lt;span class="no"&gt;Installing&lt;/span&gt; &lt;span class="n"&gt;platform&lt;/span&gt; &lt;span class="n"&gt;independent&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="no"&gt;Done&lt;/span&gt;  
&lt;span class="no"&gt;Installing&lt;/span&gt; &lt;span class="n"&gt;platform&lt;/span&gt; &lt;span class="n"&gt;dependent&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="no"&gt;Done&lt;/span&gt;  
&lt;span class="no"&gt;Setting&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt; &lt;span class="n"&gt;libraries&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="no"&gt;Done&lt;/span&gt;  
&lt;span class="no"&gt;Setting&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt; &lt;span class="n"&gt;desktop&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;menu&lt;/span&gt; &lt;span class="n"&gt;icons&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="no"&gt;Done&lt;/span&gt;  
&lt;span class="no"&gt;Setting&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;browser&lt;/span&gt; &lt;span class="n"&gt;plugin&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="no"&gt;Done&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;好了，安装到/opt了，这时桌面右上角Applications——Office里面就多了Adobe Reade 9，就可以看pdf了。  &lt;/p&gt;</summary><category term="Backtrack"></category></entry><entry><title>QW命令——MVS/QuickRef帮助文档</title><link href="http://mainframer.github.io/articles/QW%E5%91%BD%E4%BB%A4%E2%80%94%E2%80%94MVSQuickRef%E5%B8%AE%E5%8A%A9%E6%96%87%E6%A1%A3.html" rel="alternate"></link><updated>2011-08-05T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-05:articles/QW命令——MVSQuickRef帮助文档.html</id><summary type="html">&lt;p&gt;大机平台上有一个很了不起的帮助文档系统，名字叫做MVS/QuickRef，是一款强大的在线查询系统。用过微软的MSDN的童鞋都知道MSDN的强大。大机上面的MVS/QuickRef几乎可以查到所有你想查的资料，因为这款查询工具号称超过5k万行，以简单易懂著称。最主要的是查询特别方便，使用ISPF直接调用命令QW即可查询内容。&lt;br /&gt;
MVS/QuickRef现在最新的版本是2011年4月份新出的MVS/QuickRef 7.4 ，我们公司还在用的是7.0的版本。这款强大的查询工具是由一家名叫Chicago-Soft的公司生产的，主页在:&lt;a href="http://quickref.com"&gt;MVS/QuickRef主页&lt;/a&gt;，可以去看看。&lt;br /&gt;
在大机上，MVS/QuickRef能查询许多方面的。这是官网上关于MVS/QuickRef强大的一段文字描述：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"MVS/QuickRef's simple, easy to understand information helps you resolve 97% of the problems affecting z/OS, CICS, DB/2, IDMS, ADABAS, JCL, JES, COBOL. It has the answers to MVS abend codes, z/OS error messages plus 1,260 software products from IBM, CA, BMC and 72 other independent software vendors."
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;好了，我举几个例子说明QW能用来做什么：&lt;/p&gt;
&lt;h5&gt;想知道JOB log里面的输出信息IEF404I是什么意思？&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;QW IEF404I
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/MVS_QuickRef_01.jpg" /&gt;           &lt;/p&gt;
&lt;h4&gt;在编译/Bind DB2程序的时候返回-805不知道什么意思？&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;QW -805
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/MVS_QuickRef_02.jpg" /&gt;            &lt;/p&gt;
&lt;h4&gt;在提交job的时候abend，返回&lt;code&gt;S04C&lt;/code&gt;系统错误码不知道什么原因？&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;QW S04C
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/MVS_QuickRef_03.jpg" /&gt;           &lt;br /&gt;
这里只是举几个例子抛砖引玉，实际工作中当然会遇到各种各样的返回码什么的，这时候就是体现QW命令的价值的时候了。&lt;/p&gt;</summary><category term="z/OS"></category><category term="QW命令"></category></entry><entry><title>如何用键盘按出人民币符号</title><link href="http://mainframer.github.io/articles/%E5%A6%82%E4%BD%95%E7%94%A8%E9%94%AE%E7%9B%98%E6%8C%89%E5%87%BA%E4%BA%BA%E6%B0%91%E5%B8%81%E7%AC%A6%E5%8F%B7.html" rel="alternate"></link><updated>2011-08-04T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-04:articles/如何用键盘按出人民币符号.html</id><summary type="html">&lt;p&gt;偶然发现的，写在这记一下：&lt;br /&gt;
如果你现在按下键盘 Shift+数字键4出来的是美元"$"符号的话，&lt;br /&gt;
你可以先按一次Shift,再接着按Shift+数字键4,出来的就是人民币"￥"的符号了。&lt;br /&gt;
要变回美元"$"的符号的话同理，先按一次Shift，再接着按Shift+数字键4,出来的就是人民币"$"的符号了。&lt;/p&gt;</summary></entry><entry><title>如何提交网站到Alexa</title><link href="http://mainframer.github.io/articles/%E5%A6%82%E4%BD%95%E6%8F%90%E4%BA%A4%E7%BD%91%E7%AB%99%E5%88%B0Alexa.html" rel="alternate"></link><updated>2011-08-03T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-03:articles/如何提交网站到Alexa.html</id><summary type="html">&lt;p&gt;大家都知道网站的Alexa全球排名是一项权威的数据，那么如何将自己的网站信息提交到Alexa呢？&lt;br /&gt;
&lt;strong&gt;1、&lt;/strong&gt;登陆Alexa主页&lt;a href="http://www.alexa.com/"&gt;http://www.alexa.com/&lt;/a&gt;点击右上角的&lt;code&gt;Register&lt;/code&gt;注册一个自己的账号。&lt;br /&gt;
&lt;strong&gt;2、&lt;/strong&gt;注册好之后登陆，点击&lt;code&gt;Your Site&lt;/code&gt;(你的站点)，提示你没有申明过任何站点。这时点击&lt;code&gt;“Add a site now”&lt;/code&gt;来添加你的站点。&lt;br /&gt;
&lt;img alt="1" src="./../images/alexa_01.jpg" /&gt;    &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、&lt;/strong&gt;在输入框中输入你的站点名称，比如我的就输入：&lt;a href="http://flyuphigh.com"&gt;http://flyuphigh.com&lt;/a&gt;然后点击&lt;code&gt;"Claim your site"&lt;/code&gt;来声明你的站点。&lt;br /&gt;
&lt;img alt="1" src="./../images/alexa_02.jpg" /&gt;    &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4、&lt;/strong&gt;Alexa需要验证你对输入的站点确实有所有权，不然你随便瞎输网址了都可以了。右击&lt;code&gt;“this file”&lt;/code&gt;,把此验证文件下载到本地，然后通过FTP传到你网站的根目录下。比如我的话上传完之后就是&lt;code&gt;flyuphigh.com/BTcj7U4QWU9rex4HiGWNv5rF7IY.html&lt;/code&gt;S,上传完点击看看有没有，有的话会提示的：
&lt;img alt="1" src="./../images/alexa_03.jpg" /&gt;      &lt;/p&gt;
&lt;p&gt;点击&lt;code&gt;“Verify my file”&lt;/code&gt;来验证，一般只要你争取将此文件上传到根目录就能验证成功的，没有成功的话请检查是不是传对了。验证完之后出现如下页面：
&lt;img alt="1" src="./../images/alexa_04.jpg" /&gt;     &lt;/p&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/alexa_05.jpg" /&gt;    &lt;/p&gt;
&lt;p&gt;回到&lt;code&gt;your site&lt;/code&gt;,是不是发现你的站点已经被加进去了?
&lt;img alt="1" src="./../images/alexa_06.jpg" /&gt;        &lt;/p&gt;
&lt;p&gt;点击&lt;code&gt;“Edit info”&lt;/code&gt;来编辑你的站点的信息：对应着把你网站的信息录上去就可以了，提交信息，告诉你你的信息将在2个工作日内更新到Alexa数据库。咋就耐心等吧！可以到&lt;a href="http://alexa.chinaz.com"&gt;站长工具&lt;/a&gt;输入你的网站来查询你的网站信息是否被录入Alexa数据库了。
&lt;img alt="1" src="./../images/alexa_07.jpg" /&gt;   &lt;/p&gt;
&lt;p&gt;提示提交成功！
&lt;img alt="1" src="./../images/alexa_08.jpg" /&gt;  &lt;/p&gt;
&lt;p&gt;好了，希望有帮助！  &lt;/p&gt;</summary><category term="提交Alexa"></category></entry><entry><title>非常好的学英语的网站</title><link href="http://mainframer.github.io/articles/%E9%9D%9E%E5%B8%B8%E5%A5%BD%E7%9A%84%E5%AD%A6%E8%8B%B1%E8%AF%AD%E7%9A%84%E7%BD%91%E7%AB%99.html" rel="alternate"></link><updated>2011-08-03T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-03:articles/非常好的学英语的网站.html</id><summary type="html">&lt;p&gt;在国内，我认为最好的学英语的方式就是看英语视频，今天来推荐几个我觉得很不错的网站！ &lt;/p&gt;
&lt;h5&gt;1、爱布谷CCTV-NEWS&lt;/h5&gt;
&lt;p&gt;这个是中国网络电视CNTV，上面有丰富的节目资源，网址是&lt;a href="http://bugu.cntv.cn"&gt;爱布谷CNTV&lt;/a&gt;。需要学英语的话可以看&lt;a href="http://bugu.cntv.cn/live_channelcctv_news/index.shtml"&gt;CCTV-NEWS&lt;/a&gt;。不得不说这里面有很多不错的节目，比如海客谈(crossover)，China24和Asia Today，Culture Express，Biz Talk,还有很多不错的主持人，比如邹悦,季小军,杨锐,田薇，爱华，James Chau，芮成钢等等。从我去年底开始看到现在，我是感觉到这个网站在不断的提升档次的，感觉得到大家都很用心在做节目，是不错的学习英语的途径之一。&lt;/p&gt;
&lt;h5&gt;2、网易公开课&lt;/h5&gt;
&lt;p&gt;不得不说，网易公开课是我今年发现的少数好网站之一，网址是&lt;a href="http://v.163.com/open"&gt;网易公开课&lt;/a&gt;。这个网站几乎手机了现在世界名校的主流课程，有哈佛，牛津，斯坦福，耶鲁等等，课程涵盖范围也是非常的广，包括计算机领域，伦理心理学领域，医学建筑学领域，法律领域，经济金融等等，让你在家就能感受到世界顶级大学教授的授课风采，听原汁原味的英语学习。网易为此专门有一个翻译团队来翻译这些课程，我看了不少，翻译质量确实很不错。网上多数对此评价较高，更有甚者说是开创了全民上大学全民上名校的先锋。不可否认网易确实干了一件值得赞扬的事儿。&lt;/p&gt;
&lt;h5&gt;3、国外的视频网站&lt;/h5&gt;
&lt;p&gt;到了这个阶段，你可以去看国外的纯正的网站视频了，那才是真正的原汁原味的。不过，有两个尴尬的问题就是国外的视频网站要么是被屏蔽了(如youtube)，要么就是在你兴高采烈地看完广告后提示:  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"You appear to be outside the United States or its territories offer this video to viewers located within the United States and its territories."
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不过这些都可以通过翻墙来解决，去注册一个服务器在美国的SSH账号就可以了。具体怎么翻墙，请参照我的另外两篇博文，一片是讲windows下的翻墙《ssh+myEntunnel+chrome+proxy switchy翻墙》，另一篇是讲linux下的翻墙《Linux+ssh+chrome(chromium)+proxy switchy+gSTM翻墙》，都很简单的。 
国外几个比较著名的视频网站有：&lt;br /&gt;
&lt;strong&gt;&lt;em&gt;www.hulu.com&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;&lt;em&gt;www.abc.com&lt;/em&gt;&lt;/strong&gt;  &lt;br /&gt;
&lt;strong&gt;&lt;em&gt;www.cnn.com&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;&lt;em&gt;www.fox.com&lt;/em&gt;&lt;/strong&gt; &lt;br /&gt;
&lt;strong&gt;&lt;em&gt;www.youtube.com&lt;/em&gt;&lt;/strong&gt; &lt;br /&gt;
&lt;strong&gt;&lt;em&gt;www.yahoo.com&lt;/em&gt;&lt;/strong&gt; &lt;br /&gt;
&lt;strong&gt;&lt;em&gt;tv.msn.com&lt;/em&gt;&lt;/strong&gt; &lt;br /&gt;
&lt;strong&gt;&lt;em&gt;www.nbc.com&lt;/em&gt;&lt;/strong&gt; &lt;br /&gt;
每个都很不错，我个人最经常在&lt;strong&gt;&lt;em&gt;hulu.com&lt;/em&gt;&lt;/strong&gt;上面看美剧，感觉这上面的资源丰富，高清，速度快，而且有英文字幕，看截图：
&lt;img alt="1" src="./../images/hulu.jpg" /&gt;        &lt;/p&gt;</summary><category term="学英语网站"></category></entry><entry><title>Linux+ssh+chrome(chromium)+proxy switchy + gSTM翻墙</title><link href="http://mainframer.github.io/articles/Linux+ssh+chrome(chromium)+proxy%20switchy%20+%20gSTM%E7%BF%BB%E5%A2%99.html" rel="alternate"></link><updated>2011-08-01T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-01:articles/Linux+ssh+chrome(chromium)+proxy switchy + gSTM翻墙.html</id><summary type="html">&lt;p&gt;上一篇讲到的是windows下的利用&lt;code&gt;ssh+chrome(chromium)+proxy switchy + Myentunnel&lt;/code&gt;翻墙，其实在linux下和windows下没什么区别，都是用ssh代理，只是利用的客户端软件不一样而已。windows下用Myentunnel，linux下我们一般用&lt;code&gt;gSTM&lt;/code&gt;。 &lt;/p&gt;
&lt;p&gt;gSTM (Gnome SSH Tunnel Manager) 是一款图形化的 SSH 隧道端口重定向管理工具 点击&lt;a href="http://sourceforge.net/projects/gstm/files"&gt;这里&lt;/a&gt;下载后安装，设置和之前讲得Myentunnel差不多.也是必填的几个：&lt;code&gt;SSH服务器地址&lt;/code&gt;,&lt;code&gt;SSH用户名&lt;/code&gt;，&lt;code&gt;SSH密码&lt;/code&gt;，&lt;code&gt;SSH端口3022&lt;/code&gt;，&lt;code&gt;本地端口7070&lt;/code&gt;。
Proxy switchy的设置请参照我的另一篇文章 &amp;lt;&lt;ssh+myEntunnel+chrome+proxy switchy翻墙&gt;&amp;gt;&lt;/p&gt;</summary><category term="gSTM"></category><category term="ssh"></category><category term="proxy switchy"></category><category term="翻墙"></category></entry><entry><title>ssh+myEntunnel+chrome+proxy switchy翻墙</title><link href="http://mainframer.github.io/articles/ssh+myEntunnel+chrome+proxy%20switchy%E7%BF%BB%E5%A2%99.html" rel="alternate"></link><updated>2011-08-01T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-01:articles/ssh+myEntunnel+chrome+proxy switchy翻墙.html</id><summary type="html">&lt;p&gt;在windows/win7下如何翻墙？告诉你答案：&lt;code&gt;ssh+myEntunnel+chrome+proxy switchy&lt;/code&gt;插件翻墙。&lt;/p&gt;
&lt;h4&gt;1、注册SSH账号&lt;/h4&gt;
&lt;p&gt;SSH是建立在应用层和传输层基础上的提供可靠传输的安全协议。在这里您首先需要去注册一个SSH代理的账号，一般是几块钱一个月的就挺好的了，当然也有免费注册的，不过免费的可能速度不是很快或者连接不稳定。注册SSH的网址我就不发了，不然就有广告的嫌疑了。自己到网上一搜一堆的那种。要是实在找不到的可以通过邮箱&lt;code&gt;54xiaowoniu@sina.cn&lt;/code&gt;跟我联系，我告诉你怎么注册。基本上15分钟搞定。 &lt;/p&gt;
&lt;h4&gt;2、下载MyEntunnel&lt;/h4&gt;
&lt;p&gt;MyEntunnel是用来登录SSH服务器并在本机自动架设一个socks5代理的软件，下载并安装Myentunnel运行。
在桌面右下角任务栏上出现了黄色的锁，说明还没连接上。右击显示，作如下设置：&lt;br /&gt;
&lt;img alt="1" src="./../images/myentunnel.jpg" /&gt;     &lt;/p&gt;
&lt;p&gt;这里，SSH服务器栏填你在上一步中注册SSH账号的服务器地址。一般你注册好SSH账号后服务器地址，SSH端口，用户名和密码都是知道了的，相应地填上就可以了。本地端口填7070,这个要和浏览器Chrome，Proxy switchy的一致，这个下面会讲到。&lt;br /&gt;
另外，记得勾上图中的那几个选项，比如失败自动重连什么的。设置好后再重新连接，黄色的锁就会变成绿色的，说明已经连接上了。好，下面设置浏览器。 &lt;/p&gt;
&lt;h4&gt;3、下载谷歌浏览器Chrome&lt;/h4&gt;
&lt;p&gt;如果你不是使用谷歌浏览器的话。其他的浏览器像Firefox也可以的，只是要使用的插件不一样而已。IE估计不行，我没用过，因为我印象中IE只能全局设置代理的，没有像Chrome和FireFox一样丰富的插件资源。还有，如果你不想用Chrome或Firefox的话，可以试试Chromium，这是Chrome的开发版本，也很好用。也有proxy switchy插件的。 &lt;/p&gt;
&lt;h4&gt;4、安装proxy switch&lt;/h4&gt;
&lt;p&gt;打开Chrome浏览器，在谷歌网上应用商店搜索proxy switchy,点击安装即可。有中文版的proxy switchy。这里附上下载地址：
&lt;a href="https://chrome.google.com/webstore/detail/caehdcpeofiiigpdhbabniblemipncjj?hl=zh-CN"&gt;https://chrome.google.com/webstore/detail/caehdcpeofiiigpdhbabniblemipncjj?hl=zh-CN"&lt;/a&gt;&lt;br /&gt;
安装完成后重启Chrome，您会发现地址栏邮编多了个地球一样的插件，这个就是proxy switchy插件了。右击——&amp;gt;选项，打开设置：
在&lt;strong&gt;Proxy Profiles&lt;/strong&gt;标签栏中，新建一个名为SSH的profile,设置如下：
这里端口是&lt;strong&gt;7070&lt;/strong&gt;，跟上面的一致。代理选&lt;strong&gt;SOCKS v5&lt;/strong&gt;
&lt;img alt="1" src="./../images/ssh_01.jpg" /&gt;   &lt;/p&gt;
&lt;p&gt;可以按照下图中添加自己想要的URL规则，这里我只加了google和youtube的两个规则。
在线的RUL规则栏填：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;http://autoproxy-gfwlist.googlecode.com/svn/trunk/gfwlist.txt
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;频率选15min，Profile选刚才建的SSH。&lt;br /&gt;
&lt;img alt="1" src="./../images/ssh_02.jpg" /&gt;         &lt;/p&gt;
&lt;p&gt;好了，保存一下先。左击地址栏右边的proxy switcyh插件，选择SSH。在地址栏上输入:&lt;span style="color: #ff00ff;"&gt;www.youtube.com&lt;/span&gt;，回车，你看到了什么？对的，你已经翻越了神奇的GFW了。
&lt;img alt="1" src="./../images/youtube1.jpg" /&gt;   &lt;/p&gt;</summary><category term="proxy switchy"></category><category term="myEntunnel"></category><category term="ssh"></category><category term="翻墙"></category></entry><entry><title>继续介绍世代数据集GDG</title><link href="http://mainframer.github.io/articles/%E7%BB%A7%E7%BB%AD%E4%BB%8B%E7%BB%8D%E4%B8%96%E4%BB%A3%E6%95%B0%E6%8D%AE%E9%9B%86GDG.html" rel="alternate"></link><updated>2011-07-15T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-07-15:articles/继续介绍世代数据集GDG.html</id><summary type="html">&lt;p&gt;上篇文章我简单介绍了下大机平台上用到的一种叫做世代数据集(GDG)的文件，在这一篇里，我来比较详细地说明下GDG的用法和注意事项。&lt;/p&gt;
&lt;h4&gt;1、新建GDG base&lt;/h4&gt;
&lt;p&gt;一般我们可以用Job来新建一个GDG base，下面，我利用utility IDCAMS来生成一个名为IBMUSER.MYGDG.BASE并且可以有10个generation的GDG base。只要提交这个job马上就生成了GDG base了。 &lt;br /&gt;
&lt;img alt="1" src="./../images/GDG01.jpg" /&gt;      &lt;/p&gt;
&lt;h4&gt;2、新建GDG generation&lt;/h4&gt;
&lt;p&gt;那么GDG base生成以后，如何生成一个generation呢，要怎么规定生成的generation的文件属性呢？这些都在你的Job里面做的，比如下面的JCL语句：  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;EXTRACT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MYGDG&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BASE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="sr"&gt;//&lt;/span&gt; &lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;NEW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;CATLG&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DELETE&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="sr"&gt;//&lt;/span&gt; &lt;span class="no"&gt;UNIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SYSDA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="sr"&gt;//&lt;/span&gt; &lt;span class="no"&gt;SPACE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;CYL&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
&lt;span class="sr"&gt;//&lt;/span&gt; &lt;span class="no"&gt;DCB&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SYS1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MODEL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;RECFM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;FB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;LRECL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;125&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DSORG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;PS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样，就生成了一个IBMUSER.MYGDG.BASE.G0001V001的generation了。&lt;/p&gt;
&lt;h4&gt;3、引用已存在的GDG generation&lt;/h4&gt;
&lt;p&gt;这个要怎么引用呢，首先你要明白，括号()里面的数字是有意义的，如下：  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;XXXXX&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MYGDG&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BAS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;  &lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="err"&gt;使用当前最新的&lt;/span&gt;&lt;span class="n"&gt;generation&lt;/span&gt;&lt;span class="o"&gt;*//&lt;/span&gt;
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;XXXXX&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MYGDG&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BAS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt; &lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="err"&gt;使用当前次新的&lt;/span&gt;&lt;span class="n"&gt;generation&lt;/span&gt;&lt;span class="o"&gt;*//&lt;/span&gt;
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;XXXXX&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MYGDG&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BAS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt; &lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="err"&gt;使用当前第三新&lt;/span&gt;&lt;span class="n"&gt;generation&lt;/span&gt;&lt;span class="o"&gt;*//&lt;/span&gt;
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以此类推  &lt;/p&gt;
&lt;h4&gt;4、查看GDG的属性&lt;/h4&gt;
&lt;p&gt;要查看GDG的属性，可以在GDG base的左边用命令 &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;LISTC&lt;/span&gt; &lt;span class="no"&gt;GDG&lt;/span&gt; &lt;span class="no"&gt;ENT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/) ALL &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;回车，就会返回GDG的属性信息。比如什么时候建的，比如一共支持多少个generationden等。另一种方法是在ISPF；6 命令行里面输入:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;LISTC&lt;/span&gt; &lt;span class="no"&gt;GDG&lt;/span&gt; &lt;span class="no"&gt;ENT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;IBMUSER.MYGDG.BASE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;ALL&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;来查询IBMUSER.MYGDG.BASE的属性信息。  &lt;/p&gt;
&lt;h5&gt;5、删除GDG&lt;/h5&gt;
&lt;p&gt;对于一般的Dataset，我们在它前面打一个"D"就删掉了。但是GDG比较特殊，你必须至少输DEL才可以删掉。而且一定要记住顺序：先删除所有的generation，才可以允许你删除GDG base，否则会提示错误。&lt;/p&gt;
&lt;h5&gt;6、修改GDG属性&lt;/h5&gt;
&lt;p&gt;同样，要修改GDG的属性(如generation数目)，你仍然可以使用系统utiliti IDCAMS来修改，下图中，我用IDCAMS将IBMUSER.MYGDG.BASE的generation数量从原来的10个改到20个，只需提交job即可。
&lt;img alt="1" src="./../images/GDG02.jpg" /&gt;   &lt;/p&gt;
&lt;h5&gt;7、注意事项&lt;/h5&gt;
&lt;p&gt;这里，说一点特别需要注意的地方。GDG是在一个JOB执行完毕之后才被CATALOG的。假如你需要在一个JOB当中有两次需要生成新的GDG generation，那么你必须一次用(+1)，一次用(+2)，不能两次都用(+1)，因为在你Job执行完之前，系统不知道你前面已经生成了一个新的generation的。&lt;br /&gt;
还有，比如在同一个job里面，你前面一个step用(+1)生成了一个新的generation，名字叫IBMUSER.TEST.GDG，后面某个step紧接着要使用这个新生成的generation，你觉得这时候你是使用&lt;span style="color: #ff00ff;"&gt;DSN=IBMUSER.TEST.GDG(0),DISP=SHR&lt;/span&gt;呢还是使用&lt;span style="color: #ff00ff;"&gt;DSN=IBMUSER.TEST.GDG(+1),DISP=SHR&lt;/span&gt;呢？ 告诉你，这种情况下你必须用后者，因为在这个Job执行完之前，系统并不知道你在前面的step已经生成了这个generation。也就是说，gdg的catalog是在job层面上的，不是在step层面上的。好了，关于GDG就介绍到这里。&lt;/p&gt;</summary><category term="z/OS"></category><category term="GDG"></category></entry><entry><title>世代数据集—GDG介绍</title><link href="http://mainframer.github.io/articles/%E4%B8%96%E4%BB%A3%E6%95%B0%E6%8D%AE%E9%9B%86%E2%80%94GDG%E4%BB%8B%E7%BB%8D.html" rel="alternate"></link><updated>2011-06-25T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-06-25:articles/世代数据集—GDG介绍.html</id><summary type="html">&lt;p&gt;跟大机打交道，一定对大机上面的一种特殊文件gdg不会陌生。gdg又称世代数据集，在大机上面是用来组织彼此相关联的文件。比如你需要一年12个月每个月的报表数据，则可以定义一个有12个generation（世代）的GDG，每个generation存一个月的数据，这样就保证了彼此关联的信息能被更方便地管理和维护。它会保证任何时候都只保留最新的12个月的数据。&lt;br /&gt;
要使用GDG，你必须先有一个GDG base，有了GDG base才可以不断地产生generation。GDG文件是用GDG base名字+generation number来唯一区别的。比如你新建了一个GDG base的名字叫做:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PROD.CLIENT.ACCOUNT.NUMBER
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;则一般你以此产生的第一个generation的名字就叫做:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PROD.CLIENT.ACCOUNT.NUMBER.G0001V00
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以此类推，第二个就叫做：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PROD.CLIENT.ACCOUNT.NUMBER.G0002V00
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;直到&lt;code&gt;G9992V00&lt;/code&gt;为止。G000,G001等等叫做世代编号，V00叫做版本号，据我所知，平常用到的基本都是V00，可以这么说，除非极特殊的情况，否则你这辈子不会用到V01，所以，记住V00就可以了。 &lt;br /&gt;
关于要怎么建立GDG，如何查看GDG属性，如何更改GDG属性，在使用GDG过程中需要注意什么，我在以后的文章中会慢慢讲到，今天先说到这里。&lt;/p&gt;</summary><category term="z/OS"></category><category term="GDG"></category></entry><entry><title>介绍几个比较有用的ISPF命令(续一)</title><link href="http://mainframer.github.io/articles/%E4%BB%8B%E7%BB%8D%E5%87%A0%E4%B8%AA%E6%AF%94%E8%BE%83%E6%9C%89%E7%94%A8%E7%9A%84ISPF%E5%91%BD%E4%BB%A4(%E7%BB%AD%E4%B8%80).html" rel="alternate"></link><updated>2011-06-14T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-06-14:articles/介绍几个比较有用的ISPF命令(续一).html</id><summary type="html">&lt;p&gt;接上次讲的，这里继续介绍几个常用的有用的命令。&lt;/p&gt;
&lt;h5&gt;COMP&lt;/h5&gt;
&lt;p&gt;这是比较文件的命令，功能类似于&lt;code&gt;ISPF 3.13&lt;/code&gt;选项。如果你正打开自己PDS下面的&lt;code&gt;DMSID01.TESTLIB.PRGM(MYPGM01)&lt;/code&gt;编辑，你想跟你同事(DMSID02)PDS下面的一个MYPGM02比较看看有什么不同的话，你可以直接在Command栏上输入命令：
&lt;code&gt;COMP 'DMSID02.TESTLIB.PRGM(MYPGM02)'&lt;/code&gt;&lt;/p&gt;
&lt;h5&gt;COMP EXC&lt;/h5&gt;
&lt;p&gt;这是&lt;code&gt;COMP&lt;/code&gt;的高级选项，再后面加上EXC让比较结果中只显示不同的行。当然，为了不失关联性和便于理解，它还额外保留了不同处的前后各5行，显得特别人性化。可以简化成&lt;code&gt;'COMP X'&lt;/code&gt;  &lt;/p&gt;
&lt;h5&gt;F1 twice&lt;/h5&gt;
&lt;p&gt;很经常会有你想编辑某个DATASET或者Member的时候提示&lt;code&gt;"Member in use"&lt;/code&gt;,这时候你可以连续按两次F1，就能知道谁当前正在使用这个DATASET或者Member了。&lt;/p&gt;
&lt;h5&gt;HEX ON/OFF&lt;/h5&gt;
&lt;p&gt;文件中经常有些字符在普通的&lt;code&gt;View/Browse/Edit&lt;/code&gt;下要么不显示要么显示"乱码"，通常是为了节约存储空间和方便计算，数据类型经常定义成Fixed类型的，比如日期啊数值啊什么的，这时候你可以用命令&lt;code&gt;HEX ON&lt;/code&gt;来查看显示16进制内容，不用的时候用HEX OFF取消。当然，想更方便地查看的话用FileManager或File Aid吧。&lt;/p&gt;
&lt;h5&gt;RES&lt;/h5&gt;
&lt;p&gt;这个也经常用到，你新打开一个Dataset，经常默认的会显示些提示信息在文件的顶端，显得很烦，你可以打个&lt;code&gt;RES&lt;/code&gt;去掉这些提示信息。还有就是，在用&lt;code&gt;JEM/JSCAN&lt;/code&gt;检查完JCL语法的时候，也用RES消去所有的展开信息。在你用&lt;code&gt;XX&lt;/code&gt;隐藏无关的代码之后如何恢复显示呢，也是用&lt;code&gt;RES&lt;/code&gt;。  &lt;/p&gt;
&lt;h5&gt;REC ON——&amp;gt;UNDO&lt;/h5&gt;
&lt;p&gt;大机上可没有&lt;code&gt;"Cntl+Z"&lt;/code&gt;的，要想撤销最新一步的修改，你必须打上&lt;code&gt;UNDO&lt;/code&gt;的命令，当然前提是&lt;code&gt;REC ON&lt;/code&gt;的情况下才行，默认情况下是&lt;code&gt;REC OFF&lt;/code&gt;的，所以你要先&lt;code&gt;REC ON&lt;/code&gt;,然后才可以正常用&lt;code&gt;UNDO&lt;/code&gt;。&lt;/p&gt;</summary><category term="ISPF"></category></entry><entry><title>3390 volume,cylinder,track</title><link href="http://mainframer.github.io/articles/3390%20volume,cylinder,track.html" rel="alternate"></link><updated>2011-05-03T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-05-03:articles/3390 volume,cylinder,track.html</id><summary type="html">&lt;p&gt;通常我们用的是3390盘卷(Volume)，一个Volume有多大呢？可以这么计算：&lt;br /&gt;
一个3390盘卷有3339+1=3340个柱面(Cylinder);&lt;br /&gt;
一个柱面(Cylinder)有15个磁道(track);&lt;br /&gt;
一个磁道(track)大概可以保存56KB数据;&lt;br /&gt;
一个G=1024M;&lt;br /&gt;
综上可以得到：一个3390判卷(Volume)=3340x15x56=2805600KB，约等于&lt;strong&gt;2.6756G&lt;/strong&gt;
因为在大机上处理的数据基本都是文本，所以这样的量还是够用的，以至于我到现在也很少遇到需要跨卷的情况。&lt;/p&gt;</summary><category term="cylinder"></category><category term="track"></category></entry><entry><title>介绍几个有用的ISPF命令(续二)</title><link href="http://mainframer.github.io/articles/%E4%BB%8B%E7%BB%8D%E5%87%A0%E4%B8%AA%E6%9C%89%E7%94%A8%E7%9A%84ISPF%E5%91%BD%E4%BB%A4(%E7%BB%AD%E4%BA%8C).html" rel="alternate"></link><updated>2011-04-24T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-04-24:articles/介绍几个有用的ISPF命令(续二).html</id><summary type="html">&lt;h4&gt;M+F7 和 M+F8&lt;/h4&gt;
&lt;p&gt;命令行上输&lt;code&gt;M&lt;/code&gt;,接着按&lt;code&gt;F7&lt;/code&gt;, 表示回到文件最顶端&lt;br /&gt;
命令行上输&lt;code&gt;M&lt;/code&gt;,接着按&lt;code&gt;F8&lt;/code&gt;, 表示回到文件最低端  &lt;/p&gt;
&lt;h4&gt;COL&lt;/h4&gt;
&lt;p&gt;显示列号，这个命令特别是在对齐的时候很有用。因为在JCl语法中，很多关键字必须规定从第几列开始写，不然会出错的，比如JCLLIB ORDER一定要从第四列开始写，所以用&lt;code&gt;COL&lt;/code&gt;命令显示行号是很有必要的。&lt;/p&gt;
&lt;h4&gt;HI&lt;/h4&gt;
&lt;p&gt;语法高亮用HI，比如可以用&lt;code&gt;HI PLI&lt;/code&gt;来高亮PL/I代码，用&lt;code&gt;HI COBOl&lt;/code&gt;高亮COBOl代码，用&lt;code&gt;HI JCL&lt;/code&gt;来高亮JCL语法，用&lt;code&gt;HI REXX&lt;/code&gt;来高亮REXX语法，用HI ASM来高亮汇编代码，一共支持18种语言。可以&lt;code&gt;HI&lt;/code&gt;直接回车来查看和选择支持高亮的语言种类。当然，很多时候，我们直接用&lt;code&gt;HI ON&lt;/code&gt;或者&lt;code&gt;HI AUTO&lt;/code&gt;来让系统自动选择语法高亮的语言。&lt;/p&gt;
&lt;h4&gt;RETP&lt;/h4&gt;
&lt;p&gt;在3.4里输入命令&lt;code&gt;RETP&lt;/code&gt;就能查询得到你最近使用的十多个命令。&lt;/p&gt;
&lt;h4&gt;REFLIST&lt;/h4&gt;
&lt;p&gt;在3.4的菜单栏上有个&lt;code&gt;REFLIST&lt;/code&gt;的选项，里面可以列出你最近访问的30个DATASET&lt;/p&gt;
&lt;h4&gt;SORT&lt;/h4&gt;
&lt;p&gt;在PDS里面，可以用&lt;code&gt;SORT&lt;/code&gt;来对所有的MEMBER排序。可以配合参数来满足你的要求，比如：&lt;br /&gt;
&lt;code&gt;SORT CHANGED A&lt;/code&gt;: 按修改时间升序排列&lt;br /&gt;
&lt;code&gt;SORT ID A&lt;/code&gt;:      按ID升序排列 &lt;br /&gt;
&lt;code&gt;SORT SIZE D&lt;/code&gt;:    按SIZE降序排列 &lt;br /&gt;
&lt;code&gt;SORT CREATE A&lt;/code&gt;:  按创建时间升序排列   &lt;/p&gt;
&lt;h4&gt;PROFILE&lt;/h4&gt;
&lt;p&gt;在你编辑某个DATASET的时候用命令&lt;code&gt;PROFILE&lt;/code&gt;可以显示出所有当前的设置参数，然后你可以自行根据需要针对性的修改。如下图所示：
&lt;img alt="1" src="./../images/profile.jpg" /&gt;       &lt;/p&gt;
&lt;h4&gt;CO和S *&lt;/h4&gt;
&lt;p&gt;用来一次性拷贝PDS下面所有的member。在你要拷贝的PDS面前输入&lt;code&gt;CO&lt;/code&gt;，回车。这里，我们要拷贝&lt;code&gt;IBMUSER.TEST.LIB.COPY&lt;/code&gt;下面所有的member
&lt;img alt="1" src="./../images/PDS-COPY-ALL.jpg" /&gt;         &lt;/p&gt;
&lt;p&gt;接着输入&lt;code&gt;S *&lt;/code&gt;回车即可让你拷贝该PDS下面所有的member，当然，你也可以不拷贝所有的，而是有选择的拷贝。 &lt;br /&gt;
&lt;img alt="1" src="./../images/PDS-COPY-ALL02.jpg" /&gt;      &lt;/p&gt;
&lt;p&gt;好了，命令就介绍到这里，以后再补充。  &lt;/p&gt;</summary><category term="ISPF"></category></entry><entry><title>常见的TSO ISPF命令</title><link href="http://mainframer.github.io/articles/%E5%B8%B8%E8%A7%81%E7%9A%84TSO%20ISPF%E5%91%BD%E4%BB%A4.html" rel="alternate"></link><updated>2011-04-21T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-04-21:articles/常见的TSO ISPF命令.html</id><summary type="html">&lt;h3&gt;几个概念&lt;/h3&gt;
&lt;h4&gt;&lt;code&gt;TSO&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;TSO(Time Sharing Option)，时分操作，可以同时让多个用户登录到大机上。一般我们认为的TSO是命令行模式，像一些LOGON，LOGOFF，之类的命令与大机交互。&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;ISPF&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;ISPF(Interactive System Programming Facility)，它提供了一个menu菜单系统来与大机交互，可以说就是一个简单的menu system。&lt;br /&gt;
好了，言归正传。下面是必须知道的ISPF命令:  &lt;/p&gt;
&lt;h5&gt;ISPF功能键&lt;/h5&gt;
&lt;p&gt;PF1： HELP帮助键&lt;br /&gt;
PF2： SPLIT键，改变分屏位置&lt;br /&gt;
PF3： END键，结束并退回上级菜单&lt;br /&gt;
PF4： RETURN键，结束并退回主菜单&lt;br /&gt;
PF5： REFIND键，重复最近一次FIND命令&lt;br /&gt;
PF6： RECHANGE键，重复最近一次CHANGE命令&lt;br /&gt;
PF7： UP键，向上滚屏&lt;br /&gt;
PF8： DOWN键，向下滚屏&lt;br /&gt;
PF9： SWAP键，在分屏间切换&lt;br /&gt;
PF10： LEFT键，屏幕左滚&lt;br /&gt;
PF11： RIGHT键，屏幕右滚&lt;br /&gt;
PF12： RETRIVE键，显示上次输入的命令或CANCEL键，取消操作  &lt;/p&gt;
&lt;h5&gt;ISPF数据集列表操作命令（P.3.4)&lt;/h5&gt;
&lt;p&gt;Cat：Catalog编目数据集&lt;br /&gt;
C：  COpy拷贝数据集&lt;br /&gt;
D:   Delete删除数据集 
E:   Edit编辑数据集&lt;br /&gt;
I：  Information显示数据集详细信息&lt;br /&gt;
MO： MOve移动数据集&lt;br /&gt;
P：  Print打印数据集&lt;br /&gt;
R：  Rename更名数据集&lt;br /&gt;
S：  Select显示数据集基本信息&lt;br /&gt;
U：  Uncatalog撤销编目&lt;br /&gt;
V/B：View/Browse浏览数据集&lt;br /&gt;
Z：  Zip压缩数据集&lt;br /&gt;
=：  重复上一命令&lt;br /&gt;
/：  显示命令菜单  &lt;/p&gt;
&lt;h5&gt;ISPF数据集列表命令行命令&lt;/h5&gt;
&lt;p&gt;CONFIRM ON/OFF： 删除数据集是是否需要确认&lt;br /&gt;
EXCLUDE：  不显示名称中含有指定字符串的数据集
FIND：     查找名称中有指定字符串的数据集&lt;br /&gt;
LOCATE：   定位名称中有指定字符串的数据集&lt;br /&gt;
REFRESH：  刷新显示&lt;br /&gt;
RESET：    重设显示（清除命令行，重显隐藏数据集）
SORT：     按要求对数据集排序显示&lt;br /&gt;
VA： 列表中显示数据集属性  &lt;br /&gt;
VS： 列表中显示数据集空间使用情况&lt;br /&gt;
VT： 列表中显示数据集详细属性  &lt;br /&gt;
VV： 列表中显示数据集所在卷的信息&lt;/p&gt;
&lt;h5&gt;ISPF编辑命令行命令&lt;/h5&gt;
&lt;p&gt;CANCEL： 取消所做编辑并退出编辑环境&lt;br /&gt;
CAPS ON/OFF： 开启/关闭自动大写转换&lt;br /&gt;
CHANGE： 替换指定字符串，如“CHANGE OLD NEW ALL”把文件中所有“OLD”字符串替换为“NEW”串，(命令为 C A B ALL)&lt;br /&gt;
COPY： 从其它数据集拷贝文档到指定位置，该命令要与屏幕编辑命令结合使用，使用屏幕编辑命令指定插入位置。&lt;br /&gt;
CREATE： 创建一个新的成员。该命令要与屏幕编辑命令结合使用，先用屏幕编辑命令拷贝一个区域，然后使用CREATE命令把拷贝区域保存到一个新的成员数据集里去。
FIND： 查找指定字符串，按PF5重复查找。&lt;br /&gt;
RECOVERY ON/OFF：设置编辑方式，ON表示可以用UNDO命令取消上一次操作。
RESET： 重置编辑器，刷新屏幕，清除不必要的信息。
SAVE： 保存当前做的修改，继续编辑。&lt;br /&gt;
SORT： 文档按字典顺序排序。&lt;br /&gt;
SUBMIT： 提交作业&lt;br /&gt;
UNDO： 取消最近一次编辑  &lt;/p&gt;
&lt;h5&gt;ISPF编辑屏幕命令&lt;/h5&gt;
&lt;p&gt;A： 定位于当前行之后。&lt;br /&gt;
B： 定位于当前行之前。&lt;br /&gt;
C： 拷贝一行进内存拷贝区。&lt;br /&gt;
CC： 把两个CC间部分内容拷贝进内存拷贝区。&lt;br /&gt;
Cxx： xx是一个数字，该命令把当前行及一下一共xx行拷贝入拷贝区。&lt;br /&gt;
I： 在当前行下面插入一个新行&lt;br /&gt;
Ixx： 在当前行下面插入xx个新行&lt;br /&gt;
D： 删除当前行&lt;br /&gt;
DD： 删除用一对DD标记过的中间的行&lt;br /&gt;
Dxx： 删除xx行&lt;br /&gt;
R： 复制当前行&lt;br /&gt;
RR： 复制两个RR之间的行&lt;br /&gt;
Rxx： 复制xx行&lt;br /&gt;
X: 隐藏当前行不显示&lt;br /&gt;
XX: 隐藏两个XX之间的所有行不显示&lt;br /&gt;
Xxx: xx是一个数字，隐藏当前开始的xx行不显示&lt;br /&gt;
UC： 当前行转换成大写
UCxx： xx行转换成大写
LC： 当前行转换成小写
LCxx： xx行转换成小写
TS： 一行文本切分成两行
TF： 多行文本合并成一行  &lt;/p&gt;
&lt;p&gt;需要注意的是，这些命令并不是隔离开来的，很多时候必须彼此互相关联着使用才能达到效果，当然，这要靠熟能生巧来保证了，祝君好运!&lt;/p&gt;</summary><category term="TSO"></category><category term="ISPF"></category></entry><entry><title>BT5开机自动启动ibus</title><link href="http://mainframer.github.io/articles/BT5%E5%BC%80%E6%9C%BA%E8%87%AA%E5%8A%A8%E5%90%AF%E5%8A%A8ibus.html" rel="alternate"></link><updated>2011-03-06T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-03-06:articles/BT5开机自动启动ibus.html</id><summary type="html">&lt;p&gt;BT5下安装中文输入法：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;scim&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;BT5下安装ibus输入法管理器:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;ibus&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在&lt;code&gt;System——&amp;gt;IBUS Preferences&lt;/code&gt; 选择&lt;code&gt;Chinese——&amp;gt;Pin yin&lt;/code&gt; 输入法 &lt;br /&gt;
怎么让BT5 开机自动启动IBUS呢，不然每次开机手动启动确实很麻烦的。这里是方法:&lt;br /&gt;
开机自动启动ibus输入法管理器:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;System&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="no"&gt;Preferences&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="no"&gt;Startup&lt;/span&gt; &lt;span class="no"&gt;Applications&lt;/span&gt;
     &lt;span class="no"&gt;Click&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="ss"&gt;button&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;Add&lt;/span&gt;
     &lt;span class="ss"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ibus&lt;/span&gt; &lt;span class="n"&gt;daemon&lt;/span&gt;
     &lt;span class="ss"&gt;Command&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/usr/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ibus&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;daemon&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;好了，重启就可以了。&lt;br /&gt;
按Ctrl+空格调出输入法。按&lt;code&gt;Shift+Ctrl&lt;/code&gt;切换输入法。&lt;/p&gt;</summary><category term="Backtrack"></category><category term="ibus"></category></entry><entry><title>介绍几个比较有用的ISPF命令</title><link href="http://mainframer.github.io/articles/%E4%BB%8B%E7%BB%8D%E5%87%A0%E4%B8%AA%E6%AF%94%E8%BE%83%E6%9C%89%E7%94%A8%E7%9A%84ISPF%E5%91%BD%E4%BB%A4.html" rel="alternate"></link><updated>2011-03-02T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-03-02:articles/介绍几个比较有用的ISPF命令.html</id><summary type="html">&lt;p&gt;上一篇讲的是常见的TSO/ISPF命令，这篇来讲讲我收集到的日常比较有用的ISPF命令。&lt;/p&gt;
&lt;h4&gt;HRECALL&lt;/h4&gt;
&lt;p&gt;大机上的Dataset比较久了没有被访问的话会自动被迁移(migrate)到tape中保存的，根据时间的长短，Dataset会被migrate到不同的level，比如MIGRAT1,MIGRAT2等等。这时，如果你想把这个Dataset 召(Recall)回来的话，平常我们都在这个Dataset前面打个&lt;code&gt;Call&lt;/code&gt;命令。这样做有个不好的地方，就是如果这个Dataset需要很长时间才能被RECALL回来的话(比如30分钟)，那这30分钟之内你只能看着屏幕发呆而啥都干不了了。所以这种情况下你可以试试后台Call的命令&lt;code&gt;HRECALL&lt;/code&gt;，它在后台操作，结束后会有提示，完全不影响你做其他事情&lt;/p&gt;
&lt;h4&gt;NUM OFF&lt;/h4&gt;
&lt;p&gt;有时你在编辑一个Dataset的行末尾的时候，每次保存都会提示:&lt;code&gt;Some input data&lt;/code&gt;ignored。这时因为默认情况下末尾的行号显示是开着占了8位，这8位是不可修改的，这时你可以试试在命令行上打个&lt;code&gt;NUM OFF&lt;/code&gt;把行号显示关了。&lt;/p&gt;
&lt;h4&gt;XDC&lt;/h4&gt;
&lt;p&gt;这是一个SDSF(&lt;em&gt;系统显示与查询工具&lt;/em&gt; 的命令，如果你想把一个JOB的输出Log保存到某个地方，比如自己的PDS，那么你可以在SDSF里面在这个JOB的Log前面打上XDC，然后写上你要保存的地方即可。(在ISPF面板输入&lt;code&gt;Q;ST&lt;/code&gt;查看JOBs运行信息，输&lt;code&gt;‘?’&lt;/code&gt;具体查看)&lt;/p&gt;
&lt;h4&gt;JEM/JSCAN&lt;/h4&gt;
&lt;p&gt;这两个命令都是用来检查JCL语法的，具体两个什么区别？最大的区别就是JEM之后所有被它展开的信息都只能看，不能被&lt;code&gt;FIND&lt;/code&gt;命令找到，&lt;code&gt;JSCAN&lt;/code&gt;就可以的，但&lt;code&gt;JSCAN&lt;/code&gt;的缺点是检查结果的提示信息不如JEM来的丰富和友好。只能说各有千秋，如果能合并到一起就好了。&lt;/p&gt;
&lt;h4&gt;MEM&lt;/h4&gt;
&lt;p&gt;是不是经常忘记自己的某个member在哪个PDS里面了？尝试下命令MEM吧，比如在命令行上打上MEM MYMEMBER 就能知道MYMEMBER在哪个PDS了。&lt;/p&gt;</summary><category term="z/OS"></category><category term="ISPF"></category></entry><entry><title>BT5如何安装VMware Tools</title><link href="http://mainframer.github.io/articles/BT5%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85VMware%20Tools.html" rel="alternate"></link><updated>2011-02-25T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-02-25:articles/BT5如何安装VMware Tools.html</id><summary type="html">&lt;p&gt;虚拟机安装VMwareTools有什么好处呢？我认为安装了VMwareTools之后最大的好处莫过于可以支持文件拖放拷贝和鼠标可以自由出入了，你可以很方便地将你Windows里面的东西拷到BT5里面，也可以很方便地将BT5里面的东西拷贝到Windows里面来。下面说说如何安装VMwareTools。  &lt;br /&gt;
首先，你在启动虚拟机BT5之前你必须将CD/DVD(IDE) 设置里将包含vmware-tools的Iso启动文件选上。这里，我的是&lt;code&gt;D:\DOCUMENT\linux&lt;/code&gt;.iso，大小116M。接着设置开机连接CD/DVD，启动BT5。
&lt;img alt="1" src="./../images/bt5-vmtools-1.jpg" /&gt;   &lt;br /&gt;
还是老规矩：输入用户名&lt;em&gt;root&lt;/em&gt;；密码&lt;em&gt;toor&lt;/em&gt;；启动图形界面:&lt;em&gt;startx&lt;/em&gt;; 这时你会发现桌面上多了个光驱自动加载的VMWare tools文件:&lt;/p&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/bt5-vmtools-2.jpg" /&gt;   &lt;br /&gt;
先将文件夹里面的文件vmware-tools-distrib 拷贝到目录~/root下，然后照着下面这张图做就可以了。&lt;br /&gt;
记得一定要先改变先&lt;code&gt;sudo chmod 755 vmware-install.pl&lt;/code&gt;不然可能会出现 &lt;code&gt;no such file or directory&lt;/code&gt;。这会让你很崩溃的，明明有vmware-install.pl竟然提示不存在？！  &lt;/p&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/bt5-vmtools-3.jpg" /&gt;  &lt;br /&gt;
接着按照提示做就可以了。遇到没有权限访问xxx.pl文件，提示permission denied的,就用sudo chmod 755 xxx.pl修改下权限，然后继续。&lt;br /&gt;
安装完之后输入 sudo /etc/init.d/vmware-tools 会提示vmware-tools的开关重启命令:&lt;br /&gt;
&lt;code&gt;rubyusage:vmware-tools {start|stop|status|restart|}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;执行：&lt;code&gt;/usr/bin/vmware-toolbox&lt;/code&gt; 调出vmware-toolbox可以设置的。&lt;br /&gt;
重新启动系统，记得在CD/DVD(IDE)设置里面将vmware-tools的Iso启动文件去掉哦！&lt;br /&gt;
后记:安装VMWare-tools的本意是想能够自由地在windows和BT5之间拷数据拷数据，不过装完发现还是没办法拷数据或文件，不过鼠标倒是可以自由出入了，再也不用按Ctrl+Alt这么麻烦了。好吧，这也不错，关于拷数据的那个问题，有空再研究了~ &lt;/p&gt;
&lt;h4&gt;今天终于完美了&lt;/h4&gt;
&lt;p&gt;非常重要：研究了下，终于让我发现什么原因不能在windows和BT5直接互相拷贝和移动文件了。原来是我的vmware-tools安装文件linux.iso不是最新的。上面我用的是D:\DOCUMENT\linux.iso，看了下这个是2008年的，不知道我什么时候下载的保存在D盘里面，害人不浅呐！ 
废话少说，我虚拟机装的是VMware 7.1.4,在它自己的安装目录下面本身就自带一个vmware-tools安装文件，有适合各种系统的，这里我们当然选择linux.iso啦！好了，在BT5虚拟机设置CD/DVD里面把这个路径填好，选择开机连接CD/DVD,BT5启动后桌面上自动出现了VMware-tools安装光盘，然后按照上面说得一步一步做，之后重启，发现可以直接用鼠标在windows和BT5直接拖文件啦。&lt;/p&gt;</summary><category term="Backtrack"></category><category term="渗透测试"></category></entry><entry><title>Backtrack初探</title><link href="http://mainframer.github.io/articles/Backtrack%E5%88%9D%E6%8E%A2.html" rel="alternate"></link><updated>2011-01-29T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-01-29:articles/Backtrack初探.html</id><summary type="html">&lt;p&gt;一般你去网上一搜Backtrack，出来一堆都是说用backtrack来破解无线网络密码的，似乎强大的backtrack俨然给我们的第一印像就是一个蹭网的工具而已，扫扫Wifi，破解破解&lt;code&gt;WEP/WPA/WPA2&lt;/code&gt;加密什么的,实属不该~
Backtrack,中文不知道该翻译成啥，回溯？Backtrack是基于Slackware和SLAX的自启动运行的操作系统，它的初衷是给计算机安全领域用的。包含安全审计和渗透测试。Backtrack(简称BT)，现在最新的是今年5月份发布的Backtrack5,我现在用的就是BT5,Ubuntu gnome桌面的，你可以选KDE桌面，因为之前我用惯了ubuntu，所以选了gnome的。 在BT5之前还有BT2,BT3,BT4,BT4R2什么的，我接触的比较晚，只接触过BT4R2和BT5。就这两个来说，BT5界面上面确实比BT4R2眩多了。上靓图:
&lt;img alt="1" src="./../images/BackTrack51.jpg" /&gt;  &lt;br /&gt;
其实呢，Backtrack之所以吸引我的原因是因为它上面集成了无数无比强大的黑客工具（渗透工具），其中包含大家非常熟悉的强大的扫描工具nmap，Nessus等等，强大的Sniff工具Wireshark等，可以说是当前渗透测试人员和网络安全专家必备的测试平台。可不仅仅是蹭网的哦。&lt;/p&gt;</summary><category term="Backtrack"></category><category term="渗透测试"></category></entry><entry><title>Dataset View和Browse的区别</title><link href="http://mainframer.github.io/articles/Dataset%20View%E5%92%8CBrowse%E7%9A%84%E5%8C%BA%E5%88%AB.html" rel="alternate"></link><updated>2011-01-13T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-01-13:articles/Dataset View和Browse的区别.html</id><summary type="html">&lt;p&gt;在大机上，View和Browse都能查看dataset/member，它们有什么区别呢？下面是我在平常的工作当中找到的三点区别，欢迎补充！ &lt;/p&gt;
&lt;h4&gt;1、Browse默认显示80列，而View默认显示72列，当然两者都可以用PF11向右翻页。&lt;/h4&gt;
&lt;h4&gt;2、Browse不允许修改，尝试修改会马上锁屏，而View可以修改，但不能保存成当前同名的，就是说有"另存为"的功能。&lt;/h4&gt;
&lt;h4&gt;3、Browse下许多命令不能用，比如语法高亮HI ON,比如JCL语法检查JEM，而View下都可以用。&lt;/h4&gt;
&lt;p&gt;你在view一个Member，若尝试做任何更改，会跳出这样的一段提示的话:
&lt;img alt="1" src="./../images/browse_view_01.jpg" /&gt;  &lt;br /&gt;
当你在View一个member的时候，可以在左边列用两个&lt;code&gt;CC&lt;/code&gt;选择你要另存为的范围，然后在command栏上输入&lt;code&gt;CREATE&lt;/code&gt;，回车即可另存为了:
&lt;img alt="1" src="./../images/browse_view_02.jpg" /&gt; &lt;/p&gt;
&lt;p&gt;个人认为View最有用的就是可以提交别人的JCL。下图中，假设你的ID是&lt;code&gt;USERID02&lt;/code&gt;,而&lt;code&gt;USERID01&lt;/code&gt;是你同事的ID，你自然是没有权限去sub他/他的JCL，这时，你要么可以把这个JCL拷到你自己的LIB下面改成你的ID再sub，要么直接View进去，改成你的ID，sub完之后无需保存即可。对于这种别人的JCL又不想麻烦地copy到自己lib时，是不是方便多了呢？
&lt;img alt="1" src="./../images/browse_view_03.jpg" /&gt;  &lt;/p&gt;</summary><category term="z/OS"></category><category term="Dataset"></category></entry><entry><title>Linux桌面系统KDE和GNOME</title><link href="http://mainframer.github.io/articles/Linux%E6%A1%8C%E9%9D%A2%E7%B3%BB%E7%BB%9FKDE%E5%92%8CGNOME.html" rel="alternate"></link><updated>2010-12-18T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2010-12-18:articles/Linux桌面系统KDE和GNOME.html</id><summary type="html">&lt;p&gt;Windows的成功告诉我们，用户体验很重要。因为并不是所有人都希望能只能对着一个黑乎乎的shell来进行所有的操作。至少大多数人是不喜欢这样的操作方式的。当前linux上得桌面系统主要可以分为&lt;code&gt;KDE&lt;/code&gt;和&lt;code&gt;GNOME&lt;/code&gt;。&lt;/p&gt;
&lt;h4&gt;KDE&lt;/h4&gt;
&lt;p&gt;特点是界面美观，设置和使用相对复杂。KDE在UNIX，许多Linux发行版，FreeBSD上都得到应用。使用KDE作为默认桌面管理系统的linux发行版本大概有：Debian GNU/Linux，Fedora Core，Gentoo Linux，Kubuntu,SUSE Linux，FreeBSD以及纯正的UNIX等。&lt;/p&gt;
&lt;h4&gt;GNOME&lt;/h4&gt;
&lt;p&gt;以前说GNOME没有KDE漂亮还可以接受，但现在Ubuntu的强势发展，使得GNOME也不断完善。特别是GNOME的3D桌面动态效果是很吸引新人使用的。可以说，GNOME现在已经是一种非常成熟的桌面系统，具有易用性，稳定性等特点。现在，越来越多的linux发行版本都开始支持GNOME桌面系统了，连BACKTRACK这样的非主流linux系统，在BT5发行里面就有GNOME的桌面，这一点足以证明GNOME的市场成功了。&lt;/p&gt;</summary><category term="KDE"></category><category term="GNOME"></category></entry><entry><title>Linux包管理系统RPM和Deb</title><link href="http://mainframer.github.io/articles/Linux%E5%8C%85%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9FRPM%E5%92%8CDeb.html" rel="alternate"></link><updated>2010-12-12T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2010-12-12:articles/Linux包管理系统RPM和Deb.html</id><summary type="html">&lt;p&gt;本质上来说，包也是linux应用软件的一种。用过一段时间linux的人都知道，一般linux中安装软件都是通过包的形式安装的。目前最流行的两种包的管理系统是Red Hat的RPM包和基于Debian发行版本的Deb包。&lt;/p&gt;
&lt;h3&gt;RPM包管理系统&lt;/h3&gt;
&lt;p&gt;Linux家族中有五十多种发行版本是基于Red Hat的RPM包管理系统的。有欧洲最流行的发行版SUSE/OpenSUSE，有著名的Red Hat企业版，我国发行的红旗linux等等。由于Red Hat在linux业界的领导地位，使得RPM包管理方式俨然成了linux业界的工业标准。   &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;rpm -vih file.rpm&lt;/em&gt;            #安装RPM包   &lt;/li&gt;
&lt;li&gt;&lt;em&gt;rpm -e file.rpm&lt;/em&gt;              #卸载RPM包    &lt;/li&gt;
&lt;li&gt;&lt;em&gt;rpm -qpR file.rpm&lt;/em&gt;            #查看RPM包依赖关系    &lt;/li&gt;
&lt;li&gt;&lt;em&gt;rpm -q file.rpm&lt;/em&gt;              #查看系统已经安装的rpm包  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Deb包管理系统&lt;/h3&gt;
&lt;p&gt;RPM包管理系统应用虽然广泛，但本身具有很难解决包依赖关系的问题，这点上，基于Deb的包管理系统俨然是一种更好地选择。使用Deb包管理系统的linux发行版本有Debian和近几年很火的Ubuntu。现在，Ubuntu可以说在linux个人桌面市场上是一枝独秀，这也是的基于Deb包的管理方式被更多人所熟悉。跟RPM包不同的的是，Deb包里面包含的是二进制文件和一些config文件，也可以直接打开来看。但是Deb包管理系统提供了丰富的安装/管理方法，比较著名的有：&lt;/p&gt;
&lt;h4&gt;apt(advanced package tool):高级包管理工具，这个很经常在shell下面用到，比如&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;sudo apt-get update&lt;/em&gt;   &lt;/li&gt;
&lt;li&gt;&lt;em&gt;sudo apt-get install&lt;/em&gt;  &lt;/li&gt;
&lt;li&gt;&lt;em&gt;sudo apt-get update&lt;/em&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;dpkg:通过数据库来管理系统中的软件,软件信息保存在目录：&lt;code&gt;/var/lib/dpkg&lt;/code&gt;，常用命令有：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;dpkg -i package.deb&lt;/em&gt;          #安装包  &lt;/li&gt;
&lt;li&gt;&lt;em&gt;dpkg -r package.deb&lt;/em&gt;          #删除包  &lt;/li&gt;
&lt;li&gt;&lt;em&gt;dpkg -P package.deb&lt;/em&gt;          #删除包和配置文件  &lt;/li&gt;
&lt;li&gt;&lt;em&gt;dpkg -L package.deb&lt;/em&gt;          #列出与该包关联的文件  &lt;/li&gt;
&lt;li&gt;&lt;em&gt;dpkg -l package.deb&lt;/em&gt;          #显示版本  &lt;/li&gt;
&lt;li&gt;&lt;em&gt;dpkg --unpack package.deb&lt;/em&gt;    #解压deb内容  &lt;/li&gt;
&lt;li&gt;&lt;em&gt;dpkg -c package.deb&lt;/em&gt;          #列出deb包内容  &lt;/li&gt;
&lt;li&gt;&lt;em&gt;dpkg --configure package.deb&lt;/em&gt; #配置包&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;synaptic(新立得软件包管理器:运行在_x-windows_环境中，可以简单的搜索软件，安装，删除，升级等等，很方便，用惯了windows的人可以用这个。可以选择在菜单打开，也可以直接在shell输入命令：&lt;code&gt;synaptic&lt;/code&gt; 启动。&lt;/h4&gt;
&lt;p&gt;另外，还有gdebi，dselect等,不熟。&lt;/p&gt;</summary><category term="RPM"></category><category term="Deb"></category></entry><entry><title>Watir重新连接路由器</title><link href="http://mainframer.github.io/articles/Watir%E9%87%8D%E6%96%B0%E8%BF%9E%E6%8E%A5%E8%B7%AF%E7%94%B1%E5%99%A8.html" rel="alternate"></link><updated>2010-12-12T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2010-12-12:articles/Watir重新连接路由器.html</id><summary type="html">&lt;p&gt;有些网站对IP有所限制，如果你不想用代理IP的话，那么有一个看起来有点傻但却很简单的办法可以起到更换IP的效果——将路由器断线重连。因为家用宽带路由器的IP基本上是由运营商动态分配的，所以你只要登陆路由器，点击断线，等内网发送数据包请求至外网的时候，路由器重新连接上，IP也随之改变了。这方法虽然笨，但也实用。下面是用Watir脚本实现的，仅供参考。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#encoding: UTF-8                                          #添加这一行才可以处理中文&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rubygems&amp;#39;&lt;/span&gt;                                        &lt;span class="c1"&gt;#gem install xxx --no-ri --no-rdoc&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;timeout&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;watir-webdriver&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Watir&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Browser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://admin:admin@192.168.1.1&amp;#39;&lt;/span&gt;   &lt;span class="c1"&gt;#用此方法可以避开用户密码登陆框 用户名密码这里都是admin&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;bottomLeftFrame&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;click&lt;/span&gt;     &lt;span class="c1"&gt;#点击“运行状态”&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;mainFrame&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Disconnect&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;click&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以上代码本人在TP-Link R406型号的路由器上测试通过。&lt;/p&gt;</summary><category term="Watir"></category></entry><entry><title>DATACOM数据库介绍</title><link href="http://mainframer.github.io/articles/DATACOM%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BB%8B%E7%BB%8D.html" rel="alternate"></link><updated>2010-11-29T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2010-11-29:articles/DATACOM数据库介绍.html</id><summary type="html">&lt;p&gt;CA Datacom听过么？它是CA(Computer Associates)公司的企业级数据库。以能承受高负荷和较强的容错性著称，在mainframe平台上有比较广泛地应用，不过最近几年Datacom公司貌似不怎么行了，大家都换上了IBM的DB2数据库了。&lt;br /&gt;
Datacom不是关系型数据库，它是通过KEY来访问记录的，可以说是具备了基本的文件系统特征。通常KEY是某个或某几个字段的组合，一个table可以有多个KEY。在PL/I或COBOL程序中访问Datacom是通过调用接口DBNTRY来实现的(&lt;span style="color: #ff00ff;"&gt;XXX&lt;/span&gt;是table名字)。 在COBOL中是这样call的(&lt;span style="color: #ff00ff;"&gt;XXX&lt;/span&gt;是table名字)：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;CALL&lt;/span&gt; &lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="no"&gt;DBNTRY&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt; &lt;span class="no"&gt;USING&lt;/span&gt; &lt;span class="no"&gt;USER&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;ID&lt;/span&gt;
      &lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;REQ&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;AREA&lt;/span&gt;
      &lt;span class="no"&gt;XXXF0&lt;/span&gt;
      &lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;ELEMENT&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;LIST&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;而在这之前，要先声明：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="mo"&gt;01&lt;/span&gt; &lt;span class="no"&gt;USER&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;ID&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;PROGRAM&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;NAME&lt;/span&gt; &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;VALUE&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;MYPGM00 &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;FILLER&lt;/span&gt; &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;VALUE&lt;/span&gt; &lt;span class="no"&gt;SPACES&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="mo"&gt;01&lt;/span&gt; &lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;REQ&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;AREA&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;REQ&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;COMMAND&lt;/span&gt; &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mo"&gt;05&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;VALUE&lt;/span&gt; &lt;span class="no"&gt;SPACES&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;REQ&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;FILENAME&lt;/span&gt; &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mo"&gt;03&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;VALUE&lt;/span&gt; &lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;REQ&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;KEYNAME&lt;/span&gt; &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mo"&gt;05&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;VALUE&lt;/span&gt; &lt;span class="no"&gt;SPACES&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;REQ&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;RETURNCD&lt;/span&gt; &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mo"&gt;02&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;VALUE&lt;/span&gt; &lt;span class="no"&gt;SPACES&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;REQ&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;DBID&lt;/span&gt; &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mo"&gt;02&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;VALUE&lt;/span&gt; &lt;span class="no"&gt;SPACES&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;REQ&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;REC&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;ID&lt;/span&gt; &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mo"&gt;07&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;REQ&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;KEY&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;VALUE&lt;/span&gt; &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="mo"&gt;01&lt;/span&gt; &lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;WORK&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;AREA&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;WORK&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;AREA&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;274&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;WORK&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;AREA&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="mo"&gt;01&lt;/span&gt; &lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;ELEMENT&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;LIST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;ELM&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mo"&gt;05&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;VALUE&lt;/span&gt; &lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="no"&gt;XXXA0&lt;/span&gt;&lt;span class="err"&gt;′&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;FILLER&lt;/span&gt; &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mo"&gt;01&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;ELM&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mo"&gt;05&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;VALUE&lt;/span&gt; &lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="no"&gt;XXXA6&lt;/span&gt;&lt;span class="err"&gt;′&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;FILLER&lt;/span&gt; &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mo"&gt;01&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;FILLER&lt;/span&gt; &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mo"&gt;05&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;VALUE&lt;/span&gt; &lt;span class="no"&gt;SPACES&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;接着在程序中要分别对进行必要的赋值：  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;REQ&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;AREA&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;&lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;WORK&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;AREA&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;ELEMENT&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;LIST&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;赋完值后就能执行 &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;CALL&lt;/span&gt; &lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="no"&gt;DBNTRY&lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;来对Datacom数据库表进行操作了。&lt;/p&gt;</summary><category term="z/OS"></category><category term="DATACOM"></category></entry><entry><title>Linux压缩命令</title><link href="http://mainframer.github.io/articles/Linux%E5%8E%8B%E7%BC%A9%E5%91%BD%E4%BB%A4.html" rel="alternate"></link><updated>2010-11-26T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2010-11-26:articles/Linux压缩命令.html</id><summary type="html">&lt;p&gt;在平常的Linux接触过程中，各种压缩文件经常遇到。使用压缩文件的好处显而易见，可以节省空间并且节约网络流量传输的开销，所以学会各种压缩文件的使用是不可避免的一项技能。自己平常使用的再加上一些网上搜集的，估计够全了，简单地写在这记下，方便查阅： 
压缩文件 (解释: x——解压 c——压缩 v——显示过程 f——压缩包名字)  &lt;br /&gt;
&lt;code&gt;tar格式&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;tar&lt;/span&gt; &lt;span class="n"&gt;xvf&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt;
&lt;span class="n"&gt;tar&lt;/span&gt; &lt;span class="n"&gt;cv&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt; &lt;span class="n"&gt;directory&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;gz格式&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;gunzip&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gz&lt;/span&gt;
&lt;span class="err"&gt;也可用&lt;/span&gt; &lt;span class="n"&gt;gzip&lt;/span&gt;&lt;span class="err"&gt;——&lt;/span&gt;&lt;span class="n"&gt;gzip&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gz&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;tar.gz/tgz格式&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;tar&lt;/span&gt; &lt;span class="n"&gt;zxvf&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gz&lt;/span&gt; &lt;span class="err"&gt;解压至当前目录&lt;/span&gt;
&lt;span class="n"&gt;tar&lt;/span&gt; &lt;span class="n"&gt;zcvf&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gz&lt;/span&gt; &lt;span class="n"&gt;orderFolder&lt;/span&gt; &lt;span class="err"&gt;压缩&lt;/span&gt;&lt;span class="n"&gt;orderFoler&lt;/span&gt;&lt;span class="err"&gt;里面的文件至&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gz&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;bz2格式&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;bzip2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bz2&lt;/span&gt;
&lt;span class="n"&gt;bzip2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bz2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;tar.bz2格式&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;tar&lt;/span&gt; &lt;span class="n"&gt;jxvf&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bz2&lt;/span&gt;
&lt;span class="n"&gt;tar&lt;/span&gt; &lt;span class="n"&gt;jcvf&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bz2&lt;/span&gt; &lt;span class="n"&gt;orderFolder&lt;/span&gt; &lt;span class="err"&gt;压缩&lt;/span&gt;&lt;span class="n"&gt;orderFoler&lt;/span&gt;&lt;span class="err"&gt;里面的文件至&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bz2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;bz格式&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;bzip2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bz&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;tar.bz格式&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;tar&lt;/span&gt; &lt;span class="n"&gt;jxvf&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bz&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;tar.z格式&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;tar&lt;/span&gt; &lt;span class="no"&gt;Zxvf&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="n"&gt;tar&lt;/span&gt;
&lt;span class="no"&gt;Zcvf&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Z&lt;/span&gt; &lt;span class="no"&gt;Folder&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;zip格式&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;unzip&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zip&lt;/span&gt;
&lt;span class="n"&gt;zip&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zip&lt;/span&gt; &lt;span class="n"&gt;folder&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;rar格式&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;rar&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rar&lt;/span&gt;
&lt;span class="n"&gt;rar&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rar&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;deb格式&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;arp&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;deb&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;bundle类型安装&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;chmod&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bundle&lt;/span&gt;  &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n-Operator"&gt;/&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bundle&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Linux压缩"></category></entry><entry><title>大机平台的版本控制工具Changeman</title><link href="http://mainframer.github.io/articles/%E5%A4%A7%E6%9C%BA%E5%B9%B3%E5%8F%B0%E7%9A%84%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E5%B7%A5%E5%85%B7Changeman.html" rel="alternate"></link><updated>2010-10-30T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2010-10-30:articles/大机平台的版本控制工具Changeman.html</id><summary type="html">&lt;p&gt;在主机上面有好几个比较常见的版本控制工具，比如changeman和Endevor。我介绍下changeman。 &lt;/p&gt;
&lt;h4&gt;ISPF面板上输入C;1&lt;/h4&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/changeman-1.jpg" /&gt;      &lt;/p&gt;
&lt;h5&gt;changeman的界面，这里装的版本是5.6.2c，&lt;/h5&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/changeman-21.jpg" /&gt;      &lt;/p&gt;
&lt;h4&gt;我介绍下各个常用选项&lt;/h4&gt;
&lt;h5&gt;1.&lt;/h5&gt;
&lt;p&gt;用来新建，更新一个package的，你需要新建一个package来放置你的PL/I，COBOL程序和JCL等等&lt;/p&gt;
&lt;h5&gt;2.&lt;/h5&gt;
&lt;p&gt;将package freeze或unfreeze，在你觉得package里面的所有东西都测试得差不多了，可以准备上线安装之前，你要先freeze冻结掉这个package，然后等待相关项目管理人的approve，这样这个package才能被合法地安装。当然，如果你冻结了package之后，发现还有程序需要被修改什么的，这时候你可以反冻结(unfreeze)它，最好在package还没被approve之前。&lt;/p&gt;
&lt;h5&gt;3.&lt;/h5&gt;
&lt;p&gt;promote 或 demote。promote就是把你修改的程序版本提升到更高的level去。举个例子，一般PL/I或COBOL等写的程序在进入生产环境之前都会经过开发(Dev)——&amp;gt;系统集成测试(Sys)——&amp;gt;用户接收测试(UAT)——&amp;gt;生产环境(Prod)，promote就是可以把你的程序从较低的level提升到较高的level，慢慢接近prod，而demote反之就可以了。&lt;/p&gt;
&lt;h5&gt;4.&lt;/h5&gt;
&lt;p&gt;给项目管理人员用的，用来批准或拒绝你已经冻结(freeze)掉的package&lt;/p&gt;
&lt;h5&gt;5.&lt;/h5&gt;
&lt;p&gt;列出package，这个比较常用。比如你建了个package,在这个package里面改程序，下次登录的时候你只要把你的package ID在list里面输入就可以了。&lt;/p&gt;
&lt;h5&gt;Q.&lt;/h5&gt;
&lt;p&gt;很实用的一个功能。可以查到package,components，最重要的是它可以查到所有的components之间的依赖关系。比如你要查某个component的编译信息，你要查程序A都被那些Proc调用到，你要查Proc A都被哪些JCL调用到。&lt;/p&gt;
&lt;h6&gt;Query的菜单&lt;/h6&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/changeman-31.jpg" /&gt; &lt;br /&gt;
先介绍到这里好了，给个印象.&lt;/p&gt;</summary><category term="z/OS"></category><category term="Changeman"></category></entry><entry><title>登陆大型机——Aviva的介绍</title><link href="http://mainframer.github.io/articles/%E7%99%BB%E9%99%86%E5%A4%A7%E5%9E%8B%E6%9C%BA%E2%80%94%E2%80%94Aviva%E7%9A%84%E4%BB%8B%E7%BB%8D.html" rel="alternate"></link><updated>2010-10-28T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2010-10-28:articles/登陆大型机——Aviva的介绍.html</id><summary type="html">&lt;p&gt;一般我们日常用PC机工作拿什么软件来跟大型机(以下简称大机)交互呢? 理论上说几乎所有的终端登陆软件都可以的。而且一般每种终端登陆软件都支持多种协议连接到大机上，比如最常见的&lt;code&gt;TCP/IP，FTP,TELNET,SSL&lt;/code&gt;等等。这些软件有很多，外面比较常用的是&lt;code&gt;PCOMM，putty，SecCRT&lt;/code&gt;等等，我只用过PCOMM，稍微配置下IP啥的就可以连大机了。这个百度下就出来一堆。 
我们公司比较另类，用的终端软件叫Aviva，一般我们读作"鹅vi哇"，希伯来词，意为“美丽的春天”, 产自美国美国(Eicon)公司。谷歌能下载到，不过只有试用版的貌似。 
下面我说下Aviva的一些基本概念和使用。  &lt;/p&gt;
&lt;h3&gt;Destination和Session的配置:&lt;/h3&gt;
&lt;p&gt;所谓Destination 就是大型机的物理IP，你要连接到大型机上，就必须得配置下大型机的IP。装好aviva后，开始——&amp;gt;程序——&amp;gt;Eicon Aviva——&amp;gt;Create New Destination
这里destination的名字就取：My Destination&lt;br /&gt;
Connection type:TN3270   &lt;br /&gt;
&lt;img alt="1" src="./../images/aviva-1.jpg" /&gt; &lt;/p&gt;
&lt;p&gt;大型机的物理IP:&lt;br /&gt;
&lt;img alt="1" src="./../images/aviva-2.jpg" /&gt;      &lt;br /&gt;
&lt;img alt="1" src="./../images/aviva-3.jpg" /&gt;    &lt;br /&gt;
&lt;img alt="1" src="./../images/aviva-4.jpg" /&gt;    &lt;br /&gt;
这样，Destination就配置好了！ 
下面是Sesstion的配置。Session就是用来连到Destination交互的，你可以建很多个不同名字的Session，都指向同一个Destination 
因为平常的工作当中，经常需要建好几个session，比如可以一个用来登陆ONLINE CICS的，一个用来BATCH操作的，这个随便你建几个。这里，我建一个session名字就叫:My First Session &lt;br /&gt;
&lt;img alt="1" src="./../images/aviva-5.jpg" /&gt;   &lt;/p&gt;
&lt;p&gt;这里可以是默认的 &lt;br /&gt;
&lt;img alt="1" src="./../images/aviva-6.jpg" /&gt;      &lt;br /&gt;
有时候公司会有两台大型机(两个IP)，这时候可以选择一个Destination用做Primary,另一个用作backup的。因为我们前面只建了一个Destination,所以这里就选Single Destination only好了：  &lt;/p&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/aviva-7.jpg" /&gt;     &lt;br /&gt;
选中我们上面建的Destination:My Destination    &lt;/p&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/aviva-8.jpg" /&gt;      &lt;br /&gt;
&lt;img alt="1" src="./../images/aviva-9.jpg" /&gt;    &lt;br /&gt;
这样，运行这个session，点击连接，你就能看到那大机那熟悉的黑屏画面了！
(一般公司都会将大机的默认登陆画面改成包含公司logo的画面，所以不截图了)&lt;/p&gt;</summary><category term="z/OS"></category><category term="Aviva"></category></entry><entry><title>Watir收集最快的代理服务器ip列表</title><link href="http://mainframer.github.io/articles/Watir%E6%94%B6%E9%9B%86%E6%9C%80%E5%BF%AB%E7%9A%84%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8ip%E5%88%97%E8%A1%A8.html" rel="alternate"></link><updated>2010-09-10T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2010-09-10:articles/Watir收集最快的代理服务器ip列表.html</id><summary type="html">&lt;p&gt;这个脚本所做的事情是从www.cnproxy.com网站上取得最新的10页代理服务器的ip，将它们写到proxy_ip_list.txt文本文件中去。包括每一个代理服务器的响应时间。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#encoding: UTF-8                       #添加这一行才可以处理中文&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rubygems&amp;#39;&lt;/span&gt;                     &lt;span class="c1"&gt;#gem install xxx --no-ri --no-rdoc&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;timeout&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;watir-webdriver&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;time1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;
&lt;span class="n"&gt;proxy_ip_lists&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;proxy_ip_lists.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;char2int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]==&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;z&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;3&amp;#39;&lt;/span&gt;
      &lt;span class="k"&gt;elsif&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]==&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt; 
      &lt;span class="k"&gt;elsif&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]==&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;8&amp;#39;&lt;/span&gt; 
      &lt;span class="k"&gt;elsif&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]==&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;d&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; 
      &lt;span class="k"&gt;elsif&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]==&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;k&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;2&amp;#39;&lt;/span&gt; 
      &lt;span class="k"&gt;elsif&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]==&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;m&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;4&amp;#39;&lt;/span&gt; 
      &lt;span class="k"&gt;elsif&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]==&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;l&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;9&amp;#39;&lt;/span&gt; 
      &lt;span class="k"&gt;elsif&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]==&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;5&amp;#39;&lt;/span&gt; 
      &lt;span class="k"&gt;elsif&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]==&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;i&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;7&amp;#39;&lt;/span&gt; 
      &lt;span class="k"&gt;elsif&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]==&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;w&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;6&amp;#39;&lt;/span&gt; 
      &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;str&lt;/span&gt;
 &lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;page_no&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;                  &lt;span class="c1"&gt;#一共有10页&lt;/span&gt;
   &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://www.cnproxy.com/proxy&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;page_no&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.html&amp;quot;&lt;/span&gt;
   &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Net&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;URI&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
   &lt;span class="n"&gt;regex&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sr"&gt;/&amp;lt;td&amp;gt;(.*?)&amp;lt;SCRIPT type=text\/javascript&amp;gt;document.write\(&amp;quot;:&amp;quot;(.*?)\)&amp;lt;\/SCRIPT&amp;gt;&amp;lt;\/td&amp;gt;/&lt;/span&gt;   &lt;span class="c1"&gt;#http://www.rubular.com&lt;/span&gt;
   &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    
     &lt;span class="c1"&gt;#puts &amp;quot;proxy ip is : &amp;quot; + array[0] + &amp;#39;port is : &amp;#39; + char2int(array[1].delete(&amp;#39;+&amp;#39;))&lt;/span&gt;
     &lt;span class="n"&gt;proxy_ip_lists&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;:&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;char2int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
 &lt;span class="k"&gt;end&lt;/span&gt;

 &lt;span class="n"&gt;pf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;proxy_ip_lists.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;www.google.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I have value&amp;#39;&lt;/span&gt;
 &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;\n&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kp"&gt;nil&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="k"&gt;begin&lt;/span&gt;
  &lt;span class="no"&gt;Timeout&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;timeout_length&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="c1"&gt;#until (line ==&amp;#39;\n&amp;#39; || line == nil) do line=pf.gets; end;&lt;/span&gt;
    &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gets&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;\n&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kp"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gets&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="n"&gt;proxy_addr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;proxy_port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;to_i&lt;/span&gt;
    &lt;span class="n"&gt;proxy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Net&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;HTTP&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Proxy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;proxy_addr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;proxy_port&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;start_at&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/index.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;end_at&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt; 
    &lt;span class="n"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;end_at&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;start_at&lt;/span&gt;                                            &lt;span class="c1"&gt;# 响应时间&lt;/span&gt;
    &lt;span class="c1"&gt;#puts response.body&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rstrip&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; accessing &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; using &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_s&lt;/span&gt;      &lt;span class="c1"&gt;#观察各个代理服务器的响应时间各是多少&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;rescue&lt;/span&gt; &lt;span class="no"&gt;Errno&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;EADDRNOTAVAIL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;Errno&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;ECONNREFUSED&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;Errno&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;ECONNRESET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;Errno&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;EOPNOTSUPP&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;Timeout&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;EOFError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;SocketError&lt;/span&gt; 
      &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;exception raised !&amp;quot;&lt;/span&gt;
     &lt;span class="k"&gt;retry&lt;/span&gt;   
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="n"&gt;time2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;这个程序运行了一共 &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;time1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_s&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; 秒&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Watir"></category></entry><entry><title>Watir设置代理</title><link href="http://mainframer.github.io/articles/Watir%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86.html" rel="alternate"></link><updated>2010-08-20T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2010-08-20:articles/Watir设置代理.html</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#encoding: UTF-8                       #添加这一行才可以处理中文&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rubygems&amp;#39;&lt;/span&gt;                     &lt;span class="c1"&gt;#gem install xxx --no-ri --no-rdoc&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;timeout&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;watir-webdriver&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;profile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Selenium&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;WebDriver&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Firefox&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Profile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;
&lt;span class="n"&gt;profile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;proxy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Selenium&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;WebDriver&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Proxy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="ss"&gt;:http&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;my.proxy.com:8080&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:ssl&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;my.proxy.com:8080&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;browser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Watir&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Browser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="ss"&gt;:firefox&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:profile&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;profile&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Watir"></category></entry><entry><title>Hercules搭建z/OS虚拟机遇到的问题及解决办法</title><link href="http://mainframer.github.io/articles/Hercules%E6%90%AD%E5%BB%BAzOS%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95.html" rel="alternate"></link><updated>2010-08-14T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2010-08-14:articles/Hercules搭建zOS虚拟机遇到的问题及解决办法.html</id><summary type="html">&lt;p&gt;初学，在windows上搭建z/OS虚拟机，遇到不少问题，找到解决方法，记在这里。  &lt;/p&gt;
&lt;h5&gt;PCOMM每次都提示打印，怎么去掉这个烦人的窗口？&lt;/h5&gt;
&lt;h5&gt;解决办法：&lt;/h5&gt;
&lt;p&gt;PCOMM去掉每次连接提示打印的烦人窗口的方法：在&lt;code&gt;D:\SOFTWARE\IBMPCOMM\private\*.ws&lt;/code&gt;文件里面添加：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="no"&gt;LT&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="no"&gt;IgnoreWCCStartPrint&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;
&lt;span class="no"&gt;UndefinedCode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;
&lt;span class="no"&gt;UndefinedDBCSChar&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;如何为每一个磁盘建立shadow？&lt;/h5&gt;
&lt;h5&gt;解决办法：&lt;/h5&gt;
&lt;p&gt;比如：&lt;code&gt;sf+0A80&lt;/code&gt;:  为设备号为0A80的设备建立shadow (设备号只是个临时的概念)&lt;/p&gt;
&lt;h5&gt;IEE038E AMOUNT OF EXPANDED STORAGE EXCEEDS 0G MAXIMUM&lt;/h5&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/zosmoni_1.png" /&gt;      &lt;/p&gt;
&lt;h5&gt;解决办法：&lt;/h5&gt;
&lt;p&gt;在zOS1.9.cnf配置文件中删掉下面一行即可：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;XPNDSIZE  6
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;&lt;code&gt;HHCLC042E Port 00: Read error: Bad file descriptor&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;HerculesGUI界面一直提示 &lt;code&gt;HHCLC042E Port 00: Read error: Bad file descriptor&lt;/code&gt; 并且MVS主控台端有几行大红字：&lt;br /&gt;
&lt;img alt="1" src="./../images/zosmoni_2.png" /&gt;      &lt;/p&gt;
&lt;h5&gt;解决办法：&lt;/h5&gt;
&lt;p&gt;一直提示是老版本CTCI的bug，不用管。或者下载最新版的CTCI。&lt;/p&gt;
&lt;h5&gt;MVS主控台端出现大红字&lt;/h5&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/zosmoni_3.png" /&gt;      &lt;/p&gt;
&lt;h5&gt;解决办法：&lt;/h5&gt;
&lt;p&gt;等待，取决你机器速度。
 + 绿色信息代表正常
 + 红色的表示有错误或者警告
 + 白色的信息如果有一个编号&lt;/p&gt;
&lt;h5&gt;错误&lt;code&gt;IRA200E AUXILIARY STORAGE SHORTAGE&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/zosmoni_4.png" /&gt;      &lt;/p&gt;
&lt;h5&gt;解决办法：&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;OS/390&lt;/code&gt;自动记录硬件 (和某些软件) 的错误数据和一些统计数据于PDS &lt;code&gt;SYS1.LOGREC&lt;/code&gt;中，最终此数据集会被装满数据，系统会在 &lt;em&gt;CONSOLE&lt;/em&gt; 上发一条信息。
使用下述作业会打印 LOGREC 中的简要信息，同时会清空 &lt;code&gt;SYS1.LOGREC&lt;/code&gt; 数据集：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;STEP1&lt;/span&gt;   &lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IFCEREP1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;PARM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;CARD&amp;#39;&lt;/span&gt;
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SERLOG&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SYS1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOGREC&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;OLD&lt;/span&gt;
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;ACCDEV&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DUMMY&lt;/span&gt;
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;EREPPT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;TOURIST&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSIN&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="no"&gt;SYSUM&lt;/span&gt;
&lt;span class="no"&gt;ACC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;
&lt;span class="no"&gt;ZERO&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;
&lt;span class="sr"&gt;/*&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;参照原链接：&lt;a href="http://blog.sina.com.cn/s/blog_6c45bc400100x1uf.html"&gt;http://blog.sina.com.cn/s/blog_6c45bc400100x1uf.html&lt;/a&gt;  &lt;/p&gt;
&lt;h5&gt;如何规范地正常关闭大机虚拟机？&lt;/h5&gt;
&lt;h5&gt;解决办法：&lt;/h5&gt;
&lt;p&gt;完整的停机，在停止VTAM之前, 要先停掉DB2，CICS等作业：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="n"&gt;CICSA&lt;/span&gt; 
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;DB8G&lt;/span&gt; &lt;span class="n"&gt;STOP&lt;/span&gt; &lt;span class="n"&gt;DB2&lt;/span&gt; 
&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;CSQ1&lt;/span&gt; &lt;span class="n"&gt;STOP&lt;/span&gt; &lt;span class="n"&gt;QMGR&lt;/span&gt; 
&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="n"&gt;DLF&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;MODE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;DRAIN&lt;/span&gt; 
&lt;span class="n"&gt;P&lt;/span&gt; &lt;span class="n"&gt;DLF&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;先使用下面的命令停掉一般的任务：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;S&lt;/span&gt; &lt;span class="n"&gt;SHUTDOWN&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;使用&lt;code&gt;D A,L&lt;/code&gt;确认仍然在运行的任务，不记得是不是VTAM是否会自动停掉，如果没有，使用下面的命令：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Z&lt;/span&gt; &lt;span class="n"&gt;NET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;QUICK&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;最后使用下面的命令停掉JES2：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;P&lt;/span&gt; &lt;span class="n"&gt;JES2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;TERM&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;之后在&lt;code&gt;Hercules&lt;/code&gt;上输入&lt;code&gt;STOP&lt;/code&gt;停止模拟机。 
之后,可以使用下面的几个命令： &lt;br /&gt;
&lt;em&gt;1、&lt;/em&gt; 输入&lt;code&gt;EXIT&lt;/code&gt;退出Hercules, 可能要等一会儿。 &lt;br /&gt;
&lt;em&gt;2、&lt;/em&gt; 输入&lt;code&gt;LOADPARM&lt;/code&gt;来改变IPL 参数，以便以不同的配置重新起动系统。 &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;LOADPARM 0A82ACM1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;3、&lt;/em&gt; 使用命令&lt;code&gt;IPL A80&lt;/code&gt;来重新启动系统。  &lt;br /&gt;
你的3270仿真软件(MVS Console)应该不需要重新连接。 &lt;/p&gt;
&lt;h5&gt;输入命令&lt;code&gt;L CICS&lt;/code&gt;欲登陆CICS出现错误:&lt;code&gt;LCL701 UNABLE TO ESTABLISH SESSION - INIT SELF FAILED WITH SENSE 08570002&lt;/code&gt;&lt;/h5&gt;
&lt;h5&gt;解决办法：&lt;/h5&gt;
&lt;p&gt;要正常登录，三个软件必须正常运行：&lt;code&gt;JES2&lt;/code&gt;,&lt;code&gt;VTAM&lt;/code&gt;和&lt;code&gt;TSO&lt;/code&gt;,多半原因是因为&lt;code&gt;VTAM&lt;/code&gt;还没正常启动好。只需等待一会儿问题解决。(&lt;code&gt;LCL701&lt;/code&gt;为&lt;code&gt;VTAM&lt;/code&gt;终端编号)&lt;/p&gt;
&lt;h5&gt;TSO默认USER/PASS&lt;/h5&gt;
&lt;p&gt;（0A82CSM1登陆TSO可以，CICS不行；0A82ACM1反之)&lt;/p&gt;
&lt;h5&gt;默认用户　　　   密码　　　        权限&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;ADCDMST -         SYS1 or ADCDMST  - (RACF special authority)    &lt;/li&gt;
&lt;li&gt;IBMUSER  -        SYS1 or IBMUSER  - (RACF special authority)&lt;/li&gt;
&lt;li&gt;SYSADM   -        SYS1 or SYSADM   - (DB2 and RACF special auth)     &lt;/li&gt;
&lt;li&gt;SYSOPR   -        SYS1 or SYSOPR   - (DB2 and RACF special auth)     &lt;/li&gt;
&lt;li&gt;ADCDA ~ ADCDZ -    TEST&lt;/li&gt;
&lt;li&gt;WEBADM        -   WEBADM&lt;/li&gt;
&lt;li&gt;OPEN1 - OPEN3 -    SYS1&lt;br /&gt;
&lt;img alt="1" src="./../images/zosmoni_5.png" /&gt;   &lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;code&gt;Master console&lt;/code&gt; 不显示&lt;/h5&gt;
&lt;h5&gt;解决办法：&lt;/h5&gt;
&lt;p&gt;Master console 的窗口要在IPL 之前就打开 否则无法显示内容&lt;/p&gt;
&lt;h5&gt;&lt;code&gt;Master console&lt;/code&gt;显示：&lt;code&gt;*IRA200E AUXILIARY STORAGE SHORTAGE&lt;/code&gt;, 并且登陆‘L TSO’显示：&lt;code&gt;IKT00203I ADDRESS SPACE CREATION FAILED&lt;/code&gt;&lt;/h5&gt;
&lt;h5&gt;解决办法：&lt;/h5&gt;
&lt;p&gt;原因是Page Dataset空间不够，可试试增大hercules.cnf中的MAINSIZE&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;D ASM                
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;查看page dataset使用情况  （Local Page Dataset 在70%以下才可以登录TSO.&lt;br /&gt;
为系统增加page。
PAGE DATASET在IPL的PARMLIB下SYS1.PARMLIB(IEASYS00)，Z/os1.9的是在ADCD.Z19.PARMLIB。&lt;br /&gt;
参照链接：&lt;a href="http://blog.sina.com.cn/s/blog_6c45bc400100x1uf.html 
http://fandezhi.efglobe.com/modules.php?name=Forums&amp;amp;file=viewtopic&amp;amp;t=1489&amp;amp;highlight=SYS1.LOCAL&amp;amp;sid=1af7e969c97a9531533932f689ac7b5c"&gt;RA200E AUXILIARY STORAGE SHORTAGE解决办法&lt;/a&gt; &lt;/p&gt;</summary><category term="z/OS"></category><category term="Hercules"></category></entry><entry><title>Watir登陆谷歌搜索关键字</title><link href="http://mainframer.github.io/articles/Watir%E7%99%BB%E9%99%86%E8%B0%B7%E6%AD%8C%E6%90%9C%E7%B4%A2%E5%85%B3%E9%94%AE%E5%AD%97.html" rel="alternate"></link><updated>2010-07-31T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2010-07-31:articles/Watir登陆谷歌搜索关键字.html</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#encoding: UTF-8    #添加这一行才可以处理中文&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rubygems&amp;#39;&lt;/span&gt;  &lt;span class="c1"&gt;#gem install xxx --no-ri --no-rdoc&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;timeout&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;watir-webdriver&amp;#39;&lt;/span&gt;

&lt;span class="k"&gt;begin&lt;/span&gt;
 &lt;span class="no"&gt;Timeout&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;timeout_length&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="c1"&gt;#在国内，google经常被墙导致连接超时&lt;/span&gt;
  &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;goto&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://www.google.com.hk/webhp?hl=zh-CN&amp;amp;sourceid=cnhp&amp;#39;&lt;/span&gt;
 &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;rescue&lt;/span&gt; &lt;span class="no"&gt;Timeout&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Error&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;
   &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;page is not completed loaded, program will go on procesing .&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text_field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;q&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;focus&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text_field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;q&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;flyuphigh&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;btnK&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;click&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;当前的网址是:&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;
&lt;span class="nb"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Watir"></category></entry><entry><title>Watir登陆163邮箱</title><link href="http://mainframer.github.io/articles/Watir%E7%99%BB%E9%99%86163%E9%82%AE%E7%AE%B1.html" rel="alternate"></link><updated>2010-07-29T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2010-07-29:articles/Watir登陆163邮箱.html</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#encoding: UTF-8    #添加这一行才可以处理中文&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rubygems&amp;#39;&lt;/span&gt;  &lt;span class="c1"&gt;#gem install xxx --no-ri --no-rdoc&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;watir-webdriver&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Watir&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Browser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:firefox&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:profile&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;goto&lt;/span&gt;  &lt;span class="s2"&gt;&amp;quot;http://mail.163.com/&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text_field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text_field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;your_username&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text_field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;your_password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;click&lt;/span&gt;
&lt;span class="nb"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Watir"></category></entry><entry><title>z/OS虚拟机各Volume的解释</title><link href="http://mainframer.github.io/articles/zOS%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%90%84Volume%E7%9A%84%E8%A7%A3%E9%87%8A.html" rel="alternate"></link><updated>2010-06-28T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2010-06-28:articles/zOS虚拟机各Volume的解释.html</id><summary type="html">&lt;h3&gt;Volume的内容 (z/OS 1.6)&lt;/h3&gt;
&lt;h5&gt;VOLUME         UCB           Contents&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;Z6RES1&lt;/code&gt;  - A80 - Res Volume 1 - Required for IPL&lt;br /&gt;
&lt;code&gt;Z6RES2&lt;/code&gt;  - A81 - Res Volume 2 - Required for IPL&lt;br /&gt;
&lt;code&gt;Z6SYS1&lt;/code&gt;  - A82 - IPLPARM, JES2 Spool, Public Work Volume, Mastercat required for IPL&lt;br /&gt;
&lt;code&gt;Z6USS1&lt;/code&gt;  - A83 - USS Root and accompanying HFS files - required for IPL&lt;br /&gt;
&lt;code&gt;Z6USS2&lt;/code&gt;  - A84 - Supplemental HFS files - required for IPL&lt;br /&gt;
&lt;code&gt;Z6DIS1&lt;/code&gt;  - A85 - Distribution Lib volume 1&lt;br /&gt;
&lt;code&gt;Z6DIS2&lt;/code&gt;  - A86 - Distribution Lib volume 2&lt;br /&gt;
&lt;code&gt;Z6DIS3&lt;/code&gt;  - A87 - Distribution Lib volume 3&lt;br /&gt;
&lt;code&gt;Z6DIS4&lt;/code&gt;  - A88 - Distribution Lib volume 4&lt;br /&gt;
&lt;code&gt;Z6DIS5&lt;/code&gt;  - A89 - Distribution Lib volume 5&lt;br /&gt;
&lt;code&gt;Z6WAS1&lt;/code&gt;  - A8A - Websphere Application Server Distribution Libs&lt;br /&gt;
&lt;code&gt;Z6WAS2&lt;/code&gt;  - A8B - Websphere Application Server Target Libs&lt;br /&gt;
&lt;code&gt;Z6DB81&lt;/code&gt;  - A8C - DB2 V8.1 Target Libs&lt;br /&gt;
&lt;code&gt;Z6DB82&lt;/code&gt;  - A8D - DB2 V8.1 Distribution Libs&lt;br /&gt;
&lt;code&gt;Z6CIC1&lt;/code&gt;  - A8E - CICS TS 2.3 Target and Dlibs&lt;br /&gt;
&lt;code&gt;Z6IMS1&lt;/code&gt;  - A8F - IMS 8.1 Target and Dlibs&lt;br /&gt;
&lt;code&gt;SARES1&lt;/code&gt;  - A90 - Stand Alone IPL volume   &lt;/p&gt;</summary><category term="z/OS"></category><category term="Volume"></category></entry><entry><title>搭建z/OS虚拟机常用的LoadParm</title><link href="http://mainframer.github.io/articles/%E6%90%AD%E5%BB%BAzOS%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%B8%B8%E7%94%A8%E7%9A%84LoadParm.html" rel="alternate"></link><updated>2010-06-04T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2010-06-04:articles/搭建zOS虚拟机常用的LoadParm.html</id><summary type="html">&lt;h3&gt;LOADPARM  Description(z/OS 1.6)&lt;/h3&gt;
&lt;p&gt;在启动z/OS虚拟机的时候选择的LoadParm不同，意味着大机将启动不同的服务，说明如下：&lt;br /&gt;
&lt;code&gt;CS&lt;/code&gt;         CLPA and cold start of JES2. Base z/OS system functions i.e. no CICS, DB2, IMS, WAS, etc. &lt;br /&gt;
&lt;code&gt;00&lt;/code&gt;         Warm start of JES2. Base z/OS system functions i.e. no CICS, DB2, IMS, WAS, etc. &lt;br /&gt;
&lt;code&gt;WS&lt;/code&gt;         Warm start of JES2. Base z/OS system functions i.e. no CICS, DB2, IMS, WAS, etc. &lt;br /&gt;
&lt;code&gt;DC&lt;/code&gt;         CLPA, brings in CICS LPA modules, cold start of JES2, starts up DB2 and CICS. &lt;br /&gt;
&lt;code&gt;DB&lt;/code&gt;         Warmstart of JES2 and starts the DB2 and CICS. &lt;br /&gt;
&lt;code&gt;DI&lt;/code&gt;         CLPA and cold start of JES2 and loads the IMS Libraries. IMS must be manually started. &lt;br /&gt;
&lt;code&gt;CC&lt;/code&gt;         CLPA and cold start of JES2, loads the CICS Libraries, starts up CICS, no DB2. &lt;br /&gt;
&lt;code&gt;CW&lt;/code&gt;         Warm start of JES2, and starts up CICS. &lt;br /&gt;
&lt;code&gt;7C&lt;/code&gt;         CLPA, cold start of JES2, starts up DB2 V7, no CICS. &lt;br /&gt;
&lt;code&gt;7W&lt;/code&gt;         Warm start of JES2, starts up DB2 V7, no CICS. &lt;br /&gt;
&lt;code&gt;8C&lt;/code&gt;         CLPA, cold start of JES2, starts up DB2 v8, no CICS. &lt;br /&gt;
&lt;code&gt;8W&lt;/code&gt;         Warm start of JES2, starts up DB2 v8, no CICS. &lt;br /&gt;
&lt;code&gt;IC&lt;/code&gt;         CLPA and cold start of JES2 and load the IMS Libraries, start IMS, no DB2 or CICS. &lt;br /&gt;
&lt;code&gt;IW&lt;/code&gt;         Warm start of JES2 start IMS, no DB2 or CICS. &lt;br /&gt;
&lt;code&gt;AC&lt;/code&gt;         CLPA and cold start of JES2 load IMS and CICS libraries, start IMS, DB/2, and CICS. &lt;br /&gt;
&lt;code&gt;AW&lt;/code&gt;         Warmstart of JES2. start IMS, DB/2, and CICS. &lt;br /&gt;
&lt;code&gt;BC&lt;/code&gt;         CLPA and cold start of JES2, load WAS libraries, WAS is manually started &lt;br /&gt;
&lt;code&gt;BW&lt;/code&gt;         Warmstart of JES2. WAS is manually started. &lt;br /&gt;
&lt;code&gt;99&lt;/code&gt;         Points to IODF99 for IPL on MP3000. Reply 00,SYSP=xx were xx is any of the above options i.e. for cics only xx=cc or cw.   &lt;/p&gt;
&lt;h5&gt;Device number: &lt;strong&gt;0A80&lt;/strong&gt; 　Load Parm: &lt;strong&gt;0A82CSM1&lt;/strong&gt;&lt;/h5&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/zosmoni_loadparm_1.png" /&gt;     &lt;/p&gt;
&lt;h5&gt;Device number: &lt;strong&gt;0A80&lt;/strong&gt; 　Load Parm: &lt;strong&gt;0A82DBM1&lt;/strong&gt;&lt;/h5&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/zosmoni_loadparm_2.png" /&gt;     &lt;/p&gt;</summary><category term="z/OS"></category><category term="LoadParm"></category></entry></feed>