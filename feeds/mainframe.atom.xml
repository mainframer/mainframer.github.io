<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Modern Mainframer</title><link href="http://mainframer.github.io/" rel="alternate"></link><link href="http://mainframer.github.io/feeds/mainframe.atom.xml" rel="self"></link><id>http://mainframer.github.io/</id><updated>2013-07-26T00:00:00+08:00</updated><entry><title>IBM PCOMM初始设置的最佳实践 for zOS and IBM i</title><link href="http://mainframer.github.io/articles/IBM%20PCOMM%E5%88%9D%E5%A7%8B%E8%AE%BE%E7%BD%AE%E7%9A%84%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%20for%20zOS%20and%20IBM%20i.html" rel="alternate"></link><updated>2013-07-26T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2013-07-26:articles/IBM PCOMM初始设置的最佳实践 for zOS and IBM i.html</id><summary type="html">&lt;h5&gt;显示标尺Cross-rule&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;Edit--&amp;gt;Preferences--&amp;gt;Appearance--&amp;gt;Display Setup...--&amp;gt;Rule Line&lt;/code&gt;
  在&lt;code&gt;Setting&lt;/code&gt;里面把&lt;code&gt;Rule Line&lt;/code&gt;选上 :    &lt;br /&gt;
&lt;img src="./../images/rule_line.jpg" alt="rule_line"  width="800" /&gt;    &lt;/p&gt;
&lt;h5&gt;修改复制粘贴为Windows格式&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;PCOMM&lt;/code&gt;默认的复制粘贴操作丑得很，改成&lt;code&gt;Windows Style&lt;/code&gt;好多了。&lt;br /&gt;
  方法：&lt;code&gt;Preferences -&amp;gt;Edit-&amp;gt;Trim-&amp;gt;Windows Style&lt;/code&gt;&lt;/p&gt;
&lt;h5&gt;使用自定义键盘来支持Ctrl+C/Ctrl+V复制粘贴&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;Preferences -&amp;gt; Keyboard -&amp;gt;&lt;/code&gt;选&lt;code&gt;User-Defined&lt;/code&gt;
 &lt;code&gt;C:\Users\Mainframer\AppData\Roaming\IBM\Personal Communications\mykeyboard.kmp&lt;/code&gt;&lt;br /&gt;
 关于mykeyboard.kmp的设置，参考&lt;a href="http://mainframer.github.io/articles/IBM%20PCOMM%E5%AE%9E%E7%8E%B0Ctrl+C,%20Ctrl+V%E5%A4%8D%E5%88%B6%E7%B2%98%E8%B4%B4.html"&gt;IBM PCOMM实现Ctrl+C, Ctrl+V复制粘贴&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;登录主机之后，设置Command line on top&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;Opthon 0 --&amp;gt;Settings&lt;/code&gt;--&amp;gt;不勾选&lt;code&gt;Command line at bottom&lt;/code&gt;  &lt;br /&gt;
&lt;img src="./../images/commandlineontop.jpg" alt="commandlineontop"  width="800" /&gt;      &lt;/p&gt;
&lt;h5&gt;保存ws profile文件&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;File --&amp;gt; Save as --&amp;gt;&lt;/code&gt; 保存我们的&lt;code&gt;PCOMM&lt;/code&gt;配置文件(&lt;code&gt;.ws&lt;/code&gt;格式)，以后在其它机器安装使用&lt;code&gt;PCOMM&lt;/code&gt;的时候记得把这个&lt;code&gt;ws&lt;/code&gt;配置文件盒上面的键盘文件拷贝过去，就可以省去再配置一遍的时间了。为防止丢失，可以把这&lt;code&gt;ws&lt;/code&gt;配置文件保存到&lt;code&gt;Dropbox&lt;/code&gt;等云盘上面。
上面的配置方式只要是适用&lt;code&gt;PCOMM&lt;/code&gt;的都适用，包括&lt;code&gt;z/OS(TN3270)&lt;/code&gt;以及&lt;code&gt;IBM i(TN5250)&lt;/code&gt;.&lt;/p&gt;</summary><category term="PCOMM"></category></entry><entry><title>IBM PCOMM实现Ctrl+C, Ctrl+V复制粘贴</title><link href="http://mainframer.github.io/articles/IBM%20PCOMM%E5%AE%9E%E7%8E%B0Ctrl+C,%20Ctrl+V%E5%A4%8D%E5%88%B6%E7%B2%98%E8%B4%B4.html" rel="alternate"></link><updated>2013-07-22T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2013-07-22:articles/IBM PCOMM实现Ctrl+C, Ctrl+V复制粘贴.html</id><summary type="html">&lt;p&gt;PCOMM默认不支持Ctrl+C, Ctrl+V复制粘贴，这个可以通过自定义键盘和宏脚本(Macro)来完美实现。  &lt;/p&gt;
&lt;h4&gt;Ctrl+C实现复制&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Edit –-&amp;gt; Preferences –-&amp;gt; Keyboard…--&amp;gt;Customize…&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;点击界面上的&lt;code&gt;'C'&lt;/code&gt;键,然后在左下区域的&lt;code&gt;Function&lt;/code&gt;下拉列表中，选中&lt;code&gt;Edit Copy&lt;/code&gt;，之后再点击右边区域中&lt;code&gt;Ctrl&lt;/code&gt;那一行的箭头，
这时候会发现&lt;code&gt;Ctrl&lt;/code&gt;行的值变为&lt;code&gt;Edit-Copy&lt;/code&gt;。  &lt;br /&gt;
  &lt;img src="./../images/ctrl_c.jpg" alt="ctrl_c"  width="800" /&gt;  &lt;br /&gt;
点击&lt;code&gt;File-–&amp;gt;Save&lt;/code&gt;保存配置。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;C:\Users\Mainframer\AppData\Roaming\IBM\Personal Communications\mykeyboard.kmp&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;同样的方法，点击界面上的&lt;code&gt;'V'&lt;/code&gt;键，然后在左下区域的&lt;code&gt;Function&lt;/code&gt;下拉列表中，选中&lt;code&gt;Edit Paste&lt;/code&gt;，之后再点击右边区域中&lt;code&gt;Ctrl&lt;/code&gt;
那一行的箭头，点击&lt;code&gt;File--&amp;gt;Save&lt;/code&gt;保存配置。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;C:\Users\Mainframer\AppData\Roaming\IBM\Personal Communications\mykeyboard.kmp&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;p&gt;上面配置完之后，复制粘贴算是可以工作了，但是还有一个小问题，就是&lt;code&gt;Ctrl+V&lt;/code&gt;粘贴完光标还停留在前面，不会自动移到
后面去。 &lt;br /&gt;
&lt;img src="./../images/cursor_ahead.jpg" alt="cursor_ahead"  width="800" /&gt;  &lt;br /&gt;
也就是说，自定义键盘的方式只能满足&lt;code&gt;Ctrl+C&lt;/code&gt;的需求，满足不了&lt;code&gt;Ctrl+V&lt;/code&gt;的需求，这时候需要用到&lt;code&gt;Macro&lt;/code&gt;宏来实现了。
首先，动手写一个&lt;code&gt;Macro&lt;/code&gt;，内容如下，保存成:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;C:\Users\Mainframer\AppData\Roaming\IBM\Personal Communications\paste_cursor_end.mac&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[PCOMM SCRIPT HEADER]&lt;/span&gt;
&lt;span class="na"&gt;LANGUAGE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;VBSCRIPT&lt;/span&gt;
&lt;span class="na"&gt;DESCRIPTION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="k"&gt;[PCOMM SCRIPT SOURCE]&lt;/span&gt;
&lt;span class="err"&gt;OPTION&lt;/span&gt; &lt;span class="err"&gt;EXPLICIT&lt;/span&gt;
&lt;span class="err"&gt;autECLSession.SetConnectionByName(ThisSessionName)&lt;/span&gt;

&lt;span class="err"&gt;REM&lt;/span&gt; &lt;span class="err"&gt;This&lt;/span&gt; &lt;span class="err"&gt;line&lt;/span&gt; &lt;span class="err"&gt;calls&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;macro&lt;/span&gt; &lt;span class="err"&gt;subroutine&lt;/span&gt;
&lt;span class="err"&gt;subSub1_&lt;/span&gt;

&lt;span class="err"&gt;sub&lt;/span&gt; &lt;span class="err"&gt;subSub1_()&lt;/span&gt;
   &lt;span class="err"&gt;autECLSession.autECLOIA.WaitForAppAvailable&lt;/span&gt;

   &lt;span class="err"&gt;autECLMacro&lt;/span&gt; &lt;span class="err"&gt;&amp;quot;[edit-paste]&amp;quot;&lt;/span&gt;
   &lt;span class="err"&gt;autECLMacro&lt;/span&gt; &lt;span class="err"&gt;&amp;quot;[end&lt;/span&gt; &lt;span class="err"&gt;field]&amp;quot;&lt;/span&gt;

&lt;span class="err"&gt;end&lt;/span&gt; &lt;span class="err"&gt;sub&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后，再重新设置键盘映射：  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Edit –-&amp;gt; Preferences –-&amp;gt; Keyboard…--&amp;gt;Customize…&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;点击界面上的&lt;code&gt;'V'&lt;/code&gt;键，然后在左下区域的&lt;code&gt;Macro/Script&lt;/code&gt;下拉列表中，选中&lt;code&gt;paste_cursor_end&lt;/code&gt;，之后再点击右边区域中&lt;code&gt;Ctrl&lt;/code&gt;
那一行的箭头，点击&lt;code&gt;File--&amp;gt;Save&lt;/code&gt;保存配置。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;C:\Users\Mainframer\AppData\Roaming\IBM\Personal Communications\mykeyboard.kmp  &lt;br /&gt;
  &lt;img src="./../images/ctrl_v_macro.jpg" alt="ctrl_v_macro"  width="800" /&gt;&lt;br /&gt;
再试试，粘贴之后光标已经可以自动移到末尾了：&lt;br /&gt;
&lt;img src="./../images/cursor_append.jpg" alt="cursor_append"  width="800" /&gt;  &lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="PCOMM"></category></entry><entry><title>用INTRDR在job中submit第二个job</title><link href="http://mainframer.github.io/articles/%E7%94%A8INTRDR%E5%9C%A8job%E4%B8%ADsubmit%E7%AC%AC%E4%BA%8C%E4%B8%AAjob.html" rel="alternate"></link><updated>2013-04-22T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2013-04-22:articles/用INTRDR在job中submit第二个job.html</id><summary type="html">&lt;p&gt;今天学到的，如何在当前&lt;code&gt;job&lt;/code&gt;当中&lt;code&gt;trigger&lt;/code&gt;另外一个&lt;code&gt;job&lt;/code&gt;？答案就是利用&lt;code&gt;Internal Reader&lt;/code&gt; 
例如：  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;*******************************************************************&lt;/span&gt;    
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="no"&gt;Submit&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="no"&gt;DUMMY&lt;/span&gt; &lt;span class="n"&gt;job&lt;/span&gt; &lt;span class="no"&gt;MYJOB2&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;current&lt;/span&gt; &lt;span class="n"&gt;job&lt;/span&gt; &lt;span class="n"&gt;card&lt;/span&gt; 
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="no"&gt;Submit&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="no"&gt;Internal&lt;/span&gt; &lt;span class="no"&gt;Reader&lt;/span&gt;                                    
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;*******************************************************************&lt;/span&gt;
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;STEP04&lt;/span&gt;    &lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IEBGENER&lt;/span&gt;                  
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSUT1&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CNTL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;MYJOB2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;           
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSUT2&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;INTRDR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                            
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSPRINT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                     
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSIN&lt;/span&gt;    &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DUMMY&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这种技术经常被用来发送&lt;code&gt;notification email&lt;/code&gt;，比如： &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;****************************************************************&lt;/span&gt;      
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;   &lt;span class="no"&gt;THIS&lt;/span&gt; &lt;span class="no"&gt;STEP&lt;/span&gt; &lt;span class="no"&gt;WILL&lt;/span&gt; &lt;span class="no"&gt;SEND&lt;/span&gt; &lt;span class="no"&gt;AN&lt;/span&gt; &lt;span class="no"&gt;EMAIL&lt;/span&gt; &lt;span class="no"&gt;TO&lt;/span&gt; &lt;span class="no"&gt;THE&lt;/span&gt; &lt;span class="no"&gt;CLIENT&lt;/span&gt; &lt;span class="no"&gt;GROUP&lt;/span&gt;                    
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;   &lt;span class="no"&gt;INDICATING&lt;/span&gt; &lt;span class="no"&gt;THAT&lt;/span&gt; &lt;span class="no"&gt;THE&lt;/span&gt; &lt;span class="no"&gt;DESIRED&lt;/span&gt; &lt;span class="no"&gt;FILE&lt;/span&gt; &lt;span class="no"&gt;WAS&lt;/span&gt; &lt;span class="no"&gt;NOT&lt;/span&gt; &lt;span class="no"&gt;RECEIVED&lt;/span&gt;                     
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;****************************************************************&lt;/span&gt;      
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;STEP08&lt;/span&gt;   &lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IEBGENER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;COND&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;NE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;STEP02&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                                                                                     
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSIN&lt;/span&gt;    &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DUMMY&lt;/span&gt;                                                    
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSPRINT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                                 
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSUT1&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CNTL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;STEMAIL&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;                       
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSUT2&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;INTRDR&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;                                       
&lt;span class="sr"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;DCB&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;RECFM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;FB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;LRECL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;BLKSIZE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DSORG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;PS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;上面例子中邮件的内容如下：&lt;code&gt;IBMUSER.TEST.CNTL(STEMAIL)&lt;/code&gt;
```ruby//IBMUSERT JOB 0000000TEST,  &lt;br /&gt;
//   CLASS=3,MSGCLASS=I,REGION=4096K,                               &lt;br /&gt;
//&lt;em&gt;
//STEP04   EXEC PGM=IEBGENER                      &lt;br /&gt;
//SYSUT2   DD  SYSOUT=A,DEST=(&lt;some name&gt;,SMTP)     &lt;br /&gt;
//SYSPRINT DD SYSOUT=&lt;/em&gt;                            &lt;br /&gt;
//SYSIN    DD DUMMY                               &lt;br /&gt;
//SYSUT1   DD  *                                  &lt;br /&gt;
HELO &lt;some name&gt;                            &lt;br /&gt;
MAIL FROM:&lt;a href="&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#73;&amp;#66;&amp;#77;&amp;#85;&amp;#83;&amp;#69;&amp;#82;&amp;#49;&amp;#64;&amp;#120;&amp;#120;&amp;#120;&amp;#46;&amp;#99;&amp;#111;&amp;#109;"&gt;&amp;#73;&amp;#66;&amp;#77;&amp;#85;&amp;#83;&amp;#69;&amp;#82;&amp;#49;&amp;#64;&amp;#120;&amp;#120;&amp;#120;&amp;#46;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;             &lt;br /&gt;
RCPT TO:&lt;a href="&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#73;&amp;#66;&amp;#77;&amp;#85;&amp;#83;&amp;#69;&amp;#82;&amp;#50;&amp;#64;&amp;#120;&amp;#120;&amp;#120;&amp;#46;&amp;#99;&amp;#111;&amp;#109;"&gt;&amp;#73;&amp;#66;&amp;#77;&amp;#85;&amp;#83;&amp;#69;&amp;#82;&amp;#50;&amp;#64;&amp;#120;&amp;#120;&amp;#120;&amp;#46;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;                &lt;br /&gt;
DATA                                              &lt;br /&gt;
FROM:&lt;a href="&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#73;&amp;#66;&amp;#77;&amp;#85;&amp;#83;&amp;#69;&amp;#82;&amp;#49;&amp;#64;&amp;#120;&amp;#120;&amp;#120;&amp;#46;&amp;#99;&amp;#111;&amp;#109;"&gt;&amp;#73;&amp;#66;&amp;#77;&amp;#85;&amp;#83;&amp;#69;&amp;#82;&amp;#49;&amp;#64;&amp;#120;&amp;#120;&amp;#120;&amp;#46;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;                 &lt;br /&gt;
TO:&lt;a href="&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#73;&amp;#66;&amp;#77;&amp;#85;&amp;#83;&amp;#69;&amp;#82;&amp;#50;&amp;#64;&amp;#120;&amp;#120;&amp;#120;&amp;#46;&amp;#99;&amp;#111;&amp;#109;"&gt;&amp;#73;&amp;#66;&amp;#77;&amp;#85;&amp;#83;&amp;#69;&amp;#82;&amp;#50;&amp;#64;&amp;#120;&amp;#120;&amp;#120;&amp;#46;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;                     &lt;br /&gt;
SUBJECT: FILE WAS NOT RECEIVED                          &lt;/p&gt;
&lt;p&gt;START OF MESSAGE...                                 &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt; DO NOT  RESPOND TO THIS MESSAGE &lt;/em&gt;&lt;/strong&gt;                          &lt;br /&gt;
     File was not recieved. Please send again.
//* &lt;br /&gt;
```&lt;/p&gt;</summary><category term="INTRDR"></category><category term="trigger job"></category></entry><entry><title>Mainframer版本的程序猿吐槽</title><link href="http://mainframer.github.io/articles/Mainframer%E7%89%88%E6%9C%AC%E7%9A%84%E7%A8%8B%E5%BA%8F%E7%8C%BF%E5%90%90%E6%A7%BD.html" rel="alternate"></link><updated>2013-04-15T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2013-04-15:articles/Mainframer版本的程序猿吐槽.html</id><summary type="html">&lt;p&gt;下面这段JCL挺有意思的，之前见过其它版本的，今天在一个国外网站看到的&lt;code&gt;mainframe&lt;/code&gt;版本的，记下，纯属娱乐。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;MYWALLET&lt;/span&gt; &lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SPOUSE&lt;/span&gt;
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSIN&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;MYWALLET&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ALL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSOUT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DUMMY&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;</summary><category term="z/OS"></category></entry><entry><title>ISPF中使用Ctrl+Z来执行UNDO命令</title><link href="http://mainframer.github.io/articles/ISPF%E4%B8%AD%E4%BD%BF%E7%94%A8Ctrl+Z%E6%9D%A5%E6%89%A7%E8%A1%8CUNDO%E5%91%BD%E4%BB%A4.html" rel="alternate"></link><updated>2013-04-08T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2013-04-08:articles/ISPF中使用Ctrl+Z来执行UNDO命令.html</id><summary type="html">&lt;p&gt;今天研究的成果，教你们如何在大机上用Windows下用惯了的&lt;em&gt;Ctrl+Z&lt;/em&gt;来执行&lt;code&gt;UNDO&lt;/code&gt;命令。&lt;br /&gt;
首先，&lt;em&gt;ISPF&lt;/em&gt;里面&lt;code&gt;UNDO&lt;/code&gt;命令默认是没有开启的。我们需要自己写一个&lt;code&gt;Edit Initial Macro&lt;/code&gt;来默认开启。方法如下：&lt;/p&gt;
&lt;h5&gt;step1:在&lt;code&gt;usrid.REXX.EXEC&lt;/code&gt;下面新建一个宏&lt;code&gt;EDITMAC&lt;/code&gt;，内容如下,保存退出。&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;/*****************************REXX***********************************/&lt;/span&gt;
&lt;span class="sr"&gt;/* This macro load automaticly when you open a dataset for edit.    */&lt;/span&gt;      
 &lt;span class="no"&gt;Address&lt;/span&gt;  &lt;span class="n"&gt;ispexec&lt;/span&gt;                                                     
 &lt;span class="s2"&gt;&amp;quot;ISREDIT MACRO&amp;quot;&lt;/span&gt;                                                      
 &lt;span class="s2"&gt;&amp;quot;ISREDIT RECOVERY ON&amp;quot;&lt;/span&gt;                                                                                                  
&lt;span class="nb"&gt;exit&lt;/span&gt;                                                                  
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;step2: 随便&lt;em&gt;Edit&lt;/em&gt;一个&lt;em&gt;dataset&lt;/em&gt;,在&lt;em&gt;command&lt;/em&gt;栏上面执行命令&lt;code&gt;EDITSET&lt;/code&gt;打开&lt;code&gt;Edit and View Settings&lt;/code&gt;面板，&lt;/h5&gt;
&lt;p&gt;在User session initial macro那里填上step1的宏EDITMAC，按PF3保存退出。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;                         &lt;span class="no"&gt;Edit&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="no"&gt;View&lt;/span&gt; &lt;span class="no"&gt;Settings&lt;/span&gt;                          
&lt;span class="no"&gt;Command&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt;                                                              
                                                               &lt;span class="ss"&gt;More&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;     &lt;span class="o"&gt;+&lt;/span&gt;
&lt;span class="no"&gt;Settings&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;current&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="no"&gt;Edit&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="no"&gt;View&lt;/span&gt; &lt;span class="ss"&gt;sessions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;                   

  &lt;span class="no"&gt;User&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt; &lt;span class="n"&gt;initial&lt;/span&gt; &lt;span class="n"&gt;macro&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="no"&gt;EDITMAC&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;step3:在&lt;em&gt;command&lt;/em&gt;栏上执行&lt;code&gt;KEYS&lt;/code&gt;命令调出&lt;em&gt;ISPF&lt;/em&gt;键位设置面板，随便找一个&lt;em&gt;PF13&lt;/em&gt;至&lt;em&gt;PF24&lt;/em&gt;当中你认为最不常用的键，将它和&lt;code&gt;UNDO&lt;/code&gt;命令绑定。这里我选择&lt;code&gt;PF18&lt;/code&gt;.&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="no"&gt;Key&lt;/span&gt;       &lt;span class="no"&gt;Definition&lt;/span&gt;                                 &lt;span class="no"&gt;Format&lt;/span&gt;  &lt;span class="no"&gt;Label&lt;/span&gt;
 &lt;span class="no"&gt;F16&lt;/span&gt;  &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;  &lt;span class="no"&gt;RETURN&lt;/span&gt;                                     &lt;span class="no"&gt;SHORT&lt;/span&gt;   &lt;span class="no"&gt;Return&lt;/span&gt;  
 &lt;span class="no"&gt;F17&lt;/span&gt;  &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;  &lt;span class="no"&gt;RFIND&lt;/span&gt;                                      &lt;span class="no"&gt;SHORT&lt;/span&gt;   &lt;span class="no"&gt;Rfind&lt;/span&gt;   
 &lt;span class="no"&gt;F18&lt;/span&gt;  &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;  &lt;span class="no"&gt;UNDO&lt;/span&gt;                                       &lt;span class="no"&gt;SHORT&lt;/span&gt;   &lt;span class="no"&gt;Undo&lt;/span&gt;      
 &lt;span class="sb"&gt;```&lt;/span&gt;

&lt;span class="sb"&gt;#####step4: 在你使用的`&lt;/span&gt;&lt;span class="no"&gt;TN3270&lt;/span&gt;&lt;span class="sb"&gt;`终端的键盘设置里面，将`&lt;/span&gt;&lt;span class="no"&gt;PF18&lt;/span&gt;&lt;span class="sb"&gt;`映射成*Cntl+Z*。最常见的*TN3270*终端是*PCOMM*。&lt;/span&gt;
&lt;span class="sb"&gt;这样一来，`&lt;/span&gt;&lt;span class="no"&gt;UNDO&lt;/span&gt;&lt;span class="sb"&gt;`就被默认打开，并且你可以用*Cntl+Z*来做最近一步的撤销动作，就像在windows下面一样。这里要注意，对于还没按下确定键的情况，如果要撤销的快捷键是`&lt;/span&gt;&lt;span class="no"&gt;Shift&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="no"&gt;PageUp&lt;/span&gt;&lt;span class="sb"&gt;`.关于`&lt;/span&gt;&lt;span class="no"&gt;UNDO&lt;/span&gt;&lt;span class="sb"&gt;`和`&lt;/span&gt;&lt;span class="no"&gt;Shift&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="no"&gt;PageUp&lt;/span&gt;&lt;span class="sb"&gt;`的区别，看我早些时候的文章:《ISPF中Shift+PageUp和UNDO的区别》  &lt;/span&gt;
&lt;span class="sb"&gt;最后，还有一点，除了`&lt;/span&gt;&lt;span class="no"&gt;RECOVERY&lt;/span&gt; &lt;span class="no"&gt;ON&lt;/span&gt;&lt;span class="sb"&gt;`之外，显然其它的*Edit*命令也可以一并添加到`&lt;/span&gt;&lt;span class="no"&gt;EDITMAC&lt;/span&gt;&lt;span class="sb"&gt;`这个宏里面去，只要你希望它执行。比如：&lt;/span&gt;
&lt;span class="sb"&gt;```&lt;/span&gt;&lt;span class="n"&gt;ruby&lt;/span&gt;
&lt;span class="sr"&gt;/*****************************REXX***********************************/&lt;/span&gt;
&lt;span class="sr"&gt;/* This macro load automaticly when you open a dataset for edit.    */&lt;/span&gt;      
 &lt;span class="no"&gt;Address&lt;/span&gt;  &lt;span class="n"&gt;ispexec&lt;/span&gt;                                                     
 &lt;span class="s2"&gt;&amp;quot;ISREDIT MACRO&amp;quot;&lt;/span&gt;                                                      
 &lt;span class="s2"&gt;&amp;quot;ISREDIT RECOVERY ON&amp;quot;&lt;/span&gt;                                                                                                  
 &lt;span class="s2"&gt;&amp;quot;ISREDIT RES&amp;quot;&lt;/span&gt;
 &lt;span class="s2"&gt;&amp;quot;ISREDIT HI AUTO&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;exit&lt;/span&gt;                                                                  
&lt;/pre&gt;&lt;/div&gt;</summary><category term="ISPF"></category><category term="UNDO"></category></entry><entry><title>JCL中执行如何SQL</title><link href="http://mainframer.github.io/articles/JCL%E4%B8%AD%E6%89%A7%E8%A1%8C%E5%A6%82%E4%BD%95SQL.html" rel="alternate"></link><updated>2013-03-24T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2013-03-24:articles/JCL中执行如何SQL.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;平常我们用第三方软件来对DB2操作，比如eclipse,比如DBedit,又或者是mainframe上面的软件，如&lt;code&gt;Filemanager&lt;/code&gt;,&lt;code&gt;SPUFI&lt;/code&gt;等。
那怎么在JCL里面运行SQL呢？答案是利用&lt;code&gt;IKJEFT01&lt;/code&gt;。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;***************************************************************&lt;/span&gt;               
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="ss"&gt;UNLOAD&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;   &lt;span class="n"&gt;unload&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="no"&gt;IKJEFT01&lt;/span&gt; &lt;span class="n"&gt;via&lt;/span&gt; &lt;span class="n"&gt;dynamic&lt;/span&gt; &lt;span class="no"&gt;SQL&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="no"&gt;JCL&lt;/span&gt;  &lt;span class="o"&gt;*&lt;/span&gt;               
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;***************************************************************&lt;/span&gt;               
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;UNLOAD&lt;/span&gt;  &lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IKJEFT01&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DYNAMNBR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;                                        
&lt;span class="o"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;INCLUDE&lt;/span&gt; &lt;span class="no"&gt;MEMBER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;XXXXSRUN&lt;/span&gt;                                          
&lt;span class="sr"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;INCLUDE&lt;/span&gt; &lt;span class="no"&gt;MEMBER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;XXXXLOAD&lt;/span&gt;                                          
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSTSPRT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                                          
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSUDUMP&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                                          
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSPRINT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                                          
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSREC00&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SQL&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OUTPUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                              
&lt;span class="sr"&gt;//&lt;/span&gt;            &lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;NEW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;PASS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DELETE&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;UNIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SYSDA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                                                                                         
&lt;span class="sr"&gt;//&lt;/span&gt;            &lt;span class="no"&gt;SPACE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;CYL&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;RLSE&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;                                         
&lt;span class="sr"&gt;//&lt;/span&gt;            &lt;span class="no"&gt;DCB&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;RECFM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;FB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;BLKSIZE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DSORG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;PS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                                                    
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSIN&lt;/span&gt;    &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="o"&gt;*&lt;/span&gt;                                                                
&lt;span class="no"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="no"&gt;FROM&lt;/span&gt; &lt;span class="no"&gt;ABCD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MYTABLE&lt;/span&gt; &lt;span class="no"&gt;WHERE&lt;/span&gt; &lt;span class="no"&gt;NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;XIAOMING&amp;#39;&lt;/span&gt;                                                                     
&lt;span class="sr"&gt;/*                                                                              &lt;/span&gt;
&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;SYSTSIN&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="o"&gt;*&lt;/span&gt;                                                                
 &lt;span class="no"&gt;DSN&lt;/span&gt; &lt;span class="no"&gt;SYSTEM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;XXXX&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                                                               
 &lt;span class="no"&gt;RUN&lt;/span&gt; &lt;span class="no"&gt;PROG&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;DSNTIAUL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="no"&gt;PLAN&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;DSNTIAUL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;PARM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;SQL&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                                 
&lt;span class="sr"&gt;/*                                                                              &lt;/span&gt;
&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;SYSPUNCH&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                                             
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;         
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;PS: 这里&lt;code&gt;'XXXX'&lt;/code&gt;是指代&lt;code&gt;DB2 subsystem&lt;/code&gt; 
插一句，利用这种JCL的方法的好处是可以在接下去的Step里接着对SQL结果处理，利于自动化。&lt;/p&gt;</summary><category term="IKJEFT01"></category><category term="SQL"></category></entry><entry><title>SYNCSORT将PD格式转换成CSF(FS)格式</title><link href="http://mainframer.github.io/articles/SYNCSORT%E5%B0%86PD%E6%A0%BC%E5%BC%8F%E8%BD%AC%E6%8D%A2%E6%88%90CSF(FS)%E6%A0%BC%E5%BC%8F.html" rel="alternate"></link><updated>2013-03-20T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2013-03-20:articles/SYNCSORT将PD格式转换成CSF(FS)格式.html</id><summary type="html">&lt;p&gt;客户要求看实时报表，可是从数据库导出来的数据却包含如下所示的显示不怎么友好的数据，这时可以用SORT来转换成客户想要的格式。&lt;br /&gt;
转换之前的文件用&lt;code&gt;HEX ON&lt;/code&gt;命令显示如下。可以看出后面三个字段都是PD类型的，并且都占据8位长度。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;VIEW&lt;/span&gt;       &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DFSORT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PDTOCSF&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SORTIN&lt;/span&gt;                   &lt;span class="no"&gt;Columns&lt;/span&gt; &lt;span class="mo"&gt;00001&lt;/span&gt; &lt;span class="mo"&gt;00045&lt;/span&gt; 
&lt;span class="no"&gt;Command&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;HEX&lt;/span&gt; &lt;span class="no"&gt;ON&lt;/span&gt;                                            &lt;span class="no"&gt;Scroll&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;CSR&lt;/span&gt;  
&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;COLS&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;----+----&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;----+----&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;----+----&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;----+----&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;----+&lt;/span&gt;                           
&lt;span class="o"&gt;******&lt;/span&gt; &lt;span class="o"&gt;*****************************&lt;/span&gt; &lt;span class="no"&gt;Top&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="no"&gt;Data&lt;/span&gt; &lt;span class="o"&gt;******************************&lt;/span&gt;
&lt;span class="mo"&gt;000001&lt;/span&gt; &lt;span class="no"&gt;AAAA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20130102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;MD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;     &lt;span class="err"&gt;à&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="err"&gt;é&lt;/span&gt;     &lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; 
       &lt;span class="no"&gt;CCCC6FFFFFFFF6F6DC600001670600512110600705380&lt;/span&gt;
       &lt;span class="mi"&gt;1111&lt;/span&gt;&lt;span class="no"&gt;B20130102B1B44B0000440CB0013100CB0003049C&lt;/span&gt;
&lt;span class="o"&gt;----------------------------------------------------&lt;/span&gt;
&lt;span class="mo"&gt;000002&lt;/span&gt; &lt;span class="no"&gt;BBBB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20130102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;MD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="err"&gt;è&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;&lt;span class="err"&gt;í&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="err"&gt;à&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sc"&gt;?-&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;  
       &lt;span class="no"&gt;CCCC6FFFFFFFF6F6DC600000000600745440604670800&lt;/span&gt;
       &lt;span class="mi"&gt;2222&lt;/span&gt;&lt;span class="no"&gt;B20130102B2B44B0000000CB0147524CB0303743C&lt;/span&gt;
&lt;span class="o"&gt;----------------------------------------------------&lt;/span&gt;
&lt;span class="mo"&gt;000003&lt;/span&gt; &lt;span class="no"&gt;CCCC&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20130102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;MD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;      &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;b?&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;b?&lt;/span&gt; 
       &lt;span class="no"&gt;CCCC6FFFFFFFF6F6DC600031150600516860600516860&lt;/span&gt;
       &lt;span class="mi"&gt;3333&lt;/span&gt;&lt;span class="no"&gt;B20130102B3B44B0011270CB0008026CB0008026C&lt;/span&gt;
&lt;span class="o"&gt;----------------------------------------------------&lt;/span&gt;
&lt;span class="mo"&gt;000004&lt;/span&gt; &lt;span class="no"&gt;DDDD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20130102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;MD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="err"&gt;é&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;&lt;span class="n"&gt;ae?&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="n"&gt;de&lt;/span&gt;  &lt;span class="p"&gt;,&lt;/span&gt;      &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; 
       &lt;span class="no"&gt;CCCC6FFFFFFFF6F6DC600544870600008840600000250&lt;/span&gt;
       &lt;span class="mi"&gt;4444&lt;/span&gt;&lt;span class="no"&gt;B20130102B4B44B0016250DB0000450CB0000700D&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;转换要求：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;每条record的前面19位格式不变。后面三个PD字段中第一个PD字段保留6位小数，第二、三个PD字段保留3位小数；     &lt;/li&gt;
&lt;li&gt;如果是负数，则保留符号'-'，若是正数，省略'+'；     &lt;/li&gt;
&lt;li&gt;如果值是0，也要准确显示；         &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;转换之后的文件如下，可以看出，转换结果完全满足客户对报表的需求。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="no"&gt;VIEW&lt;/span&gt;       &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DFSORT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PDTOCSF&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SORTOUT&lt;/span&gt;                  &lt;span class="no"&gt;Columns&lt;/span&gt; &lt;span class="mo"&gt;00001&lt;/span&gt; &lt;span class="mo"&gt;00072&lt;/span&gt; 
 &lt;span class="no"&gt;Command&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt;                                                  &lt;span class="no"&gt;Scroll&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;CSR&lt;/span&gt;  
 &lt;span class="o"&gt;******&lt;/span&gt; &lt;span class="o"&gt;*****************************&lt;/span&gt; &lt;span class="no"&gt;Top&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="no"&gt;Data&lt;/span&gt; &lt;span class="o"&gt;******************************&lt;/span&gt;
 &lt;span class="mo"&gt;000001&lt;/span&gt; &lt;span class="no"&gt;AAAA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20130102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;MD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;           &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;464700&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;       &lt;span class="mi"&gt;51132110&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;       &lt;span class="mi"&gt;70035034&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;890&lt;/span&gt;
 &lt;span class="mo"&gt;000002&lt;/span&gt; &lt;span class="no"&gt;BBBB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20130102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;MD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;           &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mo"&gt;000000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;      &lt;span class="mi"&gt;174475542&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;440&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;     &lt;span class="mi"&gt;4360730784&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mo"&gt;030&lt;/span&gt;
 &lt;span class="mo"&gt;000003&lt;/span&gt; &lt;span class="no"&gt;CCCC&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20130102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;MD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="mi"&gt;1311&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;217500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;       &lt;span class="mi"&gt;50186082&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;660&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;       &lt;span class="mi"&gt;50186082&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;660&lt;/span&gt;
 &lt;span class="mo"&gt;000004&lt;/span&gt; &lt;span class="no"&gt;DDDD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20130102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;MD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;      &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;51464&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;285700&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;           &lt;span class="mi"&gt;8485&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;           &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;720&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;要实现上面的数据转换，下面是我用到的&lt;em&gt;SORT&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;IBMUSERS&lt;/span&gt; &lt;span class="no"&gt;JOB&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;00000000&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;CLASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;NOTIFY&lt;/span&gt;&lt;span class="o"&gt;=&amp;amp;&lt;/span&gt;&lt;span class="no"&gt;SYSUID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;       
&lt;span class="sr"&gt;//&lt;/span&gt;     &lt;span class="no"&gt;MSGCLASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;TIME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;NOLIMIT&lt;/span&gt;                                       
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORT&lt;/span&gt;  &lt;span class="no"&gt;EXEC&lt;/span&gt;  &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SYNCSORT&lt;/span&gt;                                             
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTIN&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DFSORT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PDTOCSF&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SORTIN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;                
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTOUT&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DFSORT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PDTOCSF&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SORTOUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                   
&lt;span class="sr"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;NEW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;CATLG&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DELETE&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;                              
&lt;span class="sr"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;UNIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SYSDA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                           
&lt;span class="sr"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;SPACE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;CYL&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;RLSE&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;                               
&lt;span class="sr"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;DCB&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;RECFM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;FB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;BLKSIZE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                              
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSOUT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                                              
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSIN&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;                                                        
  &lt;span class="no"&gt;SORT&lt;/span&gt; &lt;span class="no"&gt;FIELDS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;COPY&lt;/span&gt;                                                   
  &lt;span class="no"&gt;INREC&lt;/span&gt; &lt;span class="no"&gt;BUILD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;PD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;EDIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SIIIIIIIIIIT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IIIIII&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;SIGNS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="p"&gt;,,),&lt;/span&gt; 
   &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;PD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;EDIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SIIIIIIIIIIIIIT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;III&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;SIGNS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="p"&gt;,,),&lt;/span&gt;             
   &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;38&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;PD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;EDIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SIIIIIIIIIIIIIT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;III&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;SIGNS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="p"&gt;,,))&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这里面有3点要说明：   &lt;br /&gt;
&lt;strong&gt;第1&lt;/strong&gt;，在SORTOUT里面，&lt;code&gt;DCB=(RECFM=FB,BLKSIZE=0)&lt;/code&gt;不必加LRECL参数，SORT会自动帮你算出来。 &lt;br /&gt;
&lt;strong&gt;第2&lt;/strong&gt;，SIGNS=(,-,,)的解释:  &lt;code&gt;blank for lp, '-' for ln, blank for tp, blank for tn&lt;/code&gt;.   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;leading&lt;/span&gt; &lt;span class="n"&gt;positive&lt;/span&gt;  &lt;span class="n"&gt;sign&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;leading&lt;/span&gt; &lt;span class="n"&gt;negative&lt;/span&gt;  &lt;span class="n"&gt;sign&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ln&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;trailing&lt;/span&gt; &lt;span class="n"&gt;positive&lt;/span&gt; &lt;span class="n"&gt;sign&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="n"&gt;trailing&lt;/span&gt; &lt;span class="n"&gt;negative&lt;/span&gt; &lt;span class="n"&gt;sign&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;第3&lt;/strong&gt;，原则上EDIT语句可以实现任意格式的输出要求。这里小数点前面的那个"T"是用来保证数据为0.000这种值的时候能正常输出，而不会输出blank。&lt;/p&gt;</summary><category term="SYNCSORT"></category></entry><entry><title>Rexx调用Skeleton JCL提交job的例子</title><link href="http://mainframer.github.io/articles/Rexx%E8%B0%83%E7%94%A8Skeleton%20JCL%E6%8F%90%E4%BA%A4job%E7%9A%84%E4%BE%8B%E5%AD%90.html" rel="alternate"></link><updated>2013-02-22T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2013-02-22:articles/Rexx调用Skeleton JCL提交job的例子.html</id><summary type="html">&lt;h4&gt;这个例子一共包含3个部分&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Rexx主程序&lt;/strong&gt;：&lt;code&gt;IBMUSER.REXX.EXEC(MYSKELE)&lt;/code&gt; &lt;br /&gt;
&lt;strong&gt;带参数的sekleton JCL&lt;/strong&gt;：&lt;code&gt;IBMUSER.REXX.SKELL(JCLSKEL)&lt;/code&gt;&lt;br /&gt;
&lt;strong&gt;最终生成的Dynamic JCL&lt;/strong&gt;：&lt;code&gt;IBMUSER.DYNAM.JCL(SUBJCL)&lt;/code&gt;  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="no"&gt;File&lt;/span&gt;  &lt;span class="no"&gt;Edit&lt;/span&gt;  &lt;span class="no"&gt;Edit_Settings&lt;/span&gt;  &lt;span class="no"&gt;Menu&lt;/span&gt;  &lt;span class="no"&gt;Utilities&lt;/span&gt;  &lt;span class="no"&gt;Compilers&lt;/span&gt;  &lt;span class="no"&gt;Test&lt;/span&gt;  &lt;span class="no"&gt;Help&lt;/span&gt;            

&lt;span class="no"&gt;VIEW&lt;/span&gt;       &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;REXX&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SKELL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;JCLSKEL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mo"&gt;01&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mo"&gt;06&lt;/span&gt;             &lt;span class="no"&gt;Columns&lt;/span&gt; &lt;span class="mo"&gt;00001&lt;/span&gt; &lt;span class="mo"&gt;00072&lt;/span&gt; 
&lt;span class="no"&gt;Command&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt;                                                  &lt;span class="no"&gt;Scroll&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;CSR&lt;/span&gt;  
&lt;span class="o"&gt;******&lt;/span&gt; &lt;span class="o"&gt;*****************************&lt;/span&gt; &lt;span class="no"&gt;Top&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="no"&gt;Data&lt;/span&gt; &lt;span class="o"&gt;******************************&lt;/span&gt;
&lt;span class="mo"&gt;000001&lt;/span&gt; &lt;span class="o"&gt;//&amp;amp;&lt;/span&gt;&lt;span class="no"&gt;JOBNAME&lt;/span&gt; &lt;span class="no"&gt;JOB&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;000000000000000000CMP&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                 
&lt;span class="mo"&gt;000002&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="no"&gt;CLASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;NOTIFY&lt;/span&gt;&lt;span class="o"&gt;=&amp;amp;&lt;/span&gt;&lt;span class="no"&gt;USER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;MSGCLASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;                                      
&lt;span class="mo"&gt;000003&lt;/span&gt; &lt;span class="o"&gt;//*********************************************************************&lt;/span&gt; 
&lt;span class="mo"&gt;000004&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="no"&gt;SEL&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="no"&gt;IND&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Y&lt;/span&gt;                                                           
&lt;span class="mo"&gt;000005&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;STEP000&lt;/span&gt;  &lt;span class="no"&gt;EXEC&lt;/span&gt;  &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SYNCSORT&lt;/span&gt;                                           
&lt;span class="mo"&gt;000006&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTIN&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&amp;amp;&lt;/span&gt;&lt;span class="no"&gt;FILE1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;                                      
&lt;span class="mo"&gt;000007&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTOUT&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&amp;amp;&lt;/span&gt;&lt;span class="no"&gt;FILE2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                              
&lt;span class="mo"&gt;00000&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;NEW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;CATLG&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DELETE&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;                                 
&lt;span class="mo"&gt;00000&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;UNIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SYSDA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                              
&lt;span class="mo"&gt;000010&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;SPACE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;CYL&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;RLSE&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;                                  
&lt;span class="mo"&gt;000011&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;DCB&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SYS1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MODEL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;RECFM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;FB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;LRECL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DSORG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;PS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;              
&lt;span class="mo"&gt;000012&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSIN&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;                                                           
&lt;span class="mo"&gt;000013&lt;/span&gt;   &lt;span class="no"&gt;SORT&lt;/span&gt; &lt;span class="no"&gt;FIELDS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;CH&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                                                
&lt;span class="mo"&gt;000014&lt;/span&gt; &lt;span class="o"&gt;/*&lt;/span&gt;                                                                      
&lt;span class="mo"&gt;000015&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="no"&gt;ENDSEL&lt;/span&gt;                                                                 
&lt;span class="mo"&gt;000016&lt;/span&gt; &lt;span class="o"&gt;//*&lt;/span&gt;                                                                     
&lt;span class="o"&gt;******&lt;/span&gt; &lt;span class="o"&gt;****************************&lt;/span&gt; &lt;span class="no"&gt;Bottom&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="no"&gt;Data&lt;/span&gt; &lt;span class="o"&gt;****************************&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注意上面的&lt;code&gt;)SEL&lt;/code&gt;和&lt;code&gt;)ENDSEL&lt;/code&gt;表示skeleton的起始, 并且有一个选择判断条件&lt;code&gt;&amp;amp;IND&lt;/code&gt;，当且仅当Rexx中传过来的IND的值是Y时，才拼装&lt;code&gt;)SEL&lt;/code&gt;和&lt;code&gt;)ENDSEL&lt;/code&gt;之间的内容。在上面的例子中，如果IND=N，那么组装出来的JCL为如下所示，显然会报错。 &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="no"&gt;File&lt;/span&gt;  &lt;span class="no"&gt;Edit&lt;/span&gt;  &lt;span class="no"&gt;Edit_Settings&lt;/span&gt;  &lt;span class="no"&gt;Menu&lt;/span&gt;  &lt;span class="no"&gt;Utilities&lt;/span&gt;  &lt;span class="no"&gt;Compilers&lt;/span&gt;  &lt;span class="no"&gt;Test&lt;/span&gt;  &lt;span class="no"&gt;Help&lt;/span&gt;            

&lt;span class="no"&gt;VIEW&lt;/span&gt;       &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DYNAM&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;JCL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SUBJCL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mo"&gt;01&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;               &lt;span class="no"&gt;Columns&lt;/span&gt; &lt;span class="mo"&gt;00001&lt;/span&gt; &lt;span class="mo"&gt;00072&lt;/span&gt; 
&lt;span class="no"&gt;Command&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt;                                                  &lt;span class="no"&gt;Scroll&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;CSR&lt;/span&gt;                                                   
&lt;span class="o"&gt;******&lt;/span&gt; &lt;span class="o"&gt;*****************************&lt;/span&gt; &lt;span class="no"&gt;Top&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="no"&gt;Data&lt;/span&gt; &lt;span class="o"&gt;******************************&lt;/span&gt;
&lt;span class="mo"&gt;000001&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;IBMUSERJ&lt;/span&gt; &lt;span class="no"&gt;JOB&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;000000000000000000CMP&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                 
&lt;span class="mo"&gt;000002&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="no"&gt;CLASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;NOTIFY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;MSGCLASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;                                    
&lt;span class="mo"&gt;000003&lt;/span&gt; &lt;span class="o"&gt;//*********************************************************************&lt;/span&gt; 
&lt;span class="mo"&gt;000004&lt;/span&gt; &lt;span class="o"&gt;//*&lt;/span&gt;                                                                     
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;当IND=Y的时候，组装出来的JCL如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="no"&gt;File&lt;/span&gt;  &lt;span class="no"&gt;Edit&lt;/span&gt;  &lt;span class="no"&gt;Edit_Settings&lt;/span&gt;  &lt;span class="no"&gt;Menu&lt;/span&gt;  &lt;span class="no"&gt;Utilities&lt;/span&gt;  &lt;span class="no"&gt;Compilers&lt;/span&gt;  &lt;span class="no"&gt;Test&lt;/span&gt;  &lt;span class="no"&gt;Help&lt;/span&gt;            

&lt;span class="no"&gt;VIEW&lt;/span&gt;       &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DYNAM&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;JCL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SUBJCL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mo"&gt;01&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;               &lt;span class="no"&gt;Columns&lt;/span&gt; &lt;span class="mo"&gt;00001&lt;/span&gt; &lt;span class="mo"&gt;00072&lt;/span&gt; 
&lt;span class="no"&gt;Command&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt;                                                  &lt;span class="no"&gt;Scroll&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;CSR&lt;/span&gt;  
&lt;span class="o"&gt;******&lt;/span&gt; &lt;span class="o"&gt;*****************************&lt;/span&gt; &lt;span class="no"&gt;Top&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="no"&gt;Data&lt;/span&gt; &lt;span class="o"&gt;******************************&lt;/span&gt;
&lt;span class="mo"&gt;000001&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;IBMUSERJ&lt;/span&gt; &lt;span class="no"&gt;JOB&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;000000000000000000CMP&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                 
&lt;span class="mo"&gt;000002&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="no"&gt;CLASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;NOTIFY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;MSGCLASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;                                    
&lt;span class="mo"&gt;000003&lt;/span&gt; &lt;span class="o"&gt;//*********************************************************************&lt;/span&gt; 
&lt;span class="mo"&gt;000004&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;STEP000&lt;/span&gt;  &lt;span class="no"&gt;EXEC&lt;/span&gt;  &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SYNCSORT&lt;/span&gt;                                           
&lt;span class="mo"&gt;000005&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTIN&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SORTIN&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FILE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;                    
&lt;span class="mo"&gt;000006&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTOUT&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SORTOUT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FILE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                        
&lt;span class="mo"&gt;000007&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;NEW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;CATLG&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DELETE&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;                                 
&lt;span class="mo"&gt;00000&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;UNIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SYSDA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                              
&lt;span class="mo"&gt;00000&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;SPACE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;CYL&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;RLSE&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;                                  
&lt;span class="mo"&gt;000010&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;DCB&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SYS1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MODEL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;RECFM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;FB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;LRECL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DSORG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;PS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;              
&lt;span class="mo"&gt;000011&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSIN&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;                                                           
&lt;span class="mo"&gt;000012&lt;/span&gt;   &lt;span class="no"&gt;SORT&lt;/span&gt; &lt;span class="no"&gt;FIELDS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;CH&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                                                
&lt;span class="mo"&gt;000013&lt;/span&gt; &lt;span class="o"&gt;/*&lt;/span&gt;                                                                      
&lt;span class="mo"&gt;000014&lt;/span&gt; &lt;span class="o"&gt;//*&lt;/span&gt;                                                                     
&lt;span class="o"&gt;******&lt;/span&gt; &lt;span class="o"&gt;****************************&lt;/span&gt; &lt;span class="no"&gt;Bottom&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="no"&gt;Data&lt;/span&gt; &lt;span class="o"&gt;****************************&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;最后，只需执行TSO命令: &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;TSO MYSKELE&lt;/p&gt;
&lt;p&gt;就可以看到job成功submit,可以去SDSF里面查看job运行状况。&lt;/p&gt;
&lt;p&gt;JOB IBMUSERJ(J0210531) SUBMITTED                 &lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="z/OS"></category><category term="rexx"></category><category term="ISPF Dialog"></category></entry><entry><title>ISPF Dialog 开发知识点</title><link href="http://mainframer.github.io/articles/ISPF%20Dialog%20%E5%BC%80%E5%8F%91%E7%9F%A5%E8%AF%86%E7%82%B9.html" rel="alternate"></link><updated>2013-02-12T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2013-02-12:articles/ISPF Dialog 开发知识点.html</id><summary type="html">&lt;p&gt;需要用ISPF来开发带界面的自动化工具，从0开始。记下些很有用的知识点：   &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;执行命令&lt;code&gt;Panelid&lt;/code&gt;可以得到当前ISPF panel的名字    &lt;/li&gt;
&lt;li&gt;执行&lt;code&gt;7.2&lt;/code&gt;这个命令输入panel名字，可以用来刷新你新写的panel，使改 动动态生效，这样就不需要重启TN3270 terminal达到测试panel改动的目的  &lt;/li&gt;
&lt;li&gt;ISPF中用&lt;code&gt;option 7.3&lt;/code&gt;可以查看&lt;code&gt;Z&lt;/code&gt;开头ISPF系统预留的变量     &lt;/li&gt;
&lt;li&gt;执行命令&lt;code&gt;3.9&lt;/code&gt;查看ISPF所有可用的command    &lt;/li&gt;
&lt;li&gt;知道任意一个panel的名字，如何得到其定义的路径？这里是很好的方法&lt;/li&gt;
&lt;li&gt;To assign a null value or blank value to a dialog variable, use the system variable &amp;amp;Z.&lt;br /&gt;
&lt;code&gt;)SET D = &amp;amp;Z&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;&lt;code&gt;NOTIFY=&amp;amp;&amp;amp;SYSUID&lt;/code&gt;，which generates the JCL &lt;code&gt;NOTIFY=&amp;amp;SYSUID&lt;/code&gt;,Similarly, &amp;amp;&amp;amp; in a DSN becomes &lt;code&gt;&amp;amp;&amp;amp;&amp;amp;&amp;amp;&lt;/code&gt; in a skel.&lt;/li&gt;
&lt;li&gt;知道任意一个panel的名字，如何得到其定义的路径？这里是很好的方法：   &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;1).&lt;/em&gt;  turn on PANELID to see the panel names   &lt;br /&gt;
&lt;em&gt;2).&lt;/em&gt;  from the ISPF primary option menu,navigate to your target panel,selecting one menu item at a time. Write down the panel names. &lt;br /&gt;
&lt;em&gt;3).&lt;/em&gt;  When you get to your target panel,issue TSO ISRDDN  (like &lt;code&gt;TSO ISRDDN CMNLIST0&lt;/code&gt;)&lt;br /&gt;
&lt;em&gt;4).&lt;/em&gt;  In the &lt;code&gt;ISRDDN&lt;/code&gt; panel, type &lt;code&gt;MEMBER&lt;/code&gt; my_target where my_target is the name of the panel you are looking for. Press Enter. &lt;br /&gt;
&lt;em&gt;5).&lt;/em&gt;  It will display the datasets that include that member.   &lt;br /&gt;
&lt;em&gt;6).&lt;/em&gt;  Browse to see what each panel does.   &lt;/p&gt;</summary><category term="ISPF Dialog"></category><category term="Panelid"></category><category term="ISRDDN"></category></entry><entry><title>IBM DebugTool中巧用GOTO调试程序</title><link href="http://mainframer.github.io/articles/IBM%20DebugTool%E4%B8%AD%E5%B7%A7%E7%94%A8GOTO%E8%B0%83%E8%AF%95%E7%A8%8B%E5%BA%8F.html" rel="alternate"></link><updated>2013-01-04T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2013-01-04:articles/IBM DebugTool中巧用GOTO调试程序.html</id><summary type="html">&lt;p&gt;最近接触&lt;code&gt;IBM DebugTool&lt;/code&gt;比较多，再说一个在mainframe上面调试COBOL或者PL/I程序的技巧吧。 &lt;br /&gt;
经常在用&lt;code&gt;IBM DebugTool&lt;/code&gt;或者DTCN调试程序的时候，造测试数据很不容易。如果调试过程中发现这次数据没有造成功，我们没有必要每次都退出全部程序重新造数据，可以巧妙地利用“GOTO”语句，随心所欲地在程序里面跳转。     &lt;br /&gt;
比如下面这一个程序段，在调试过程中我们可以在Call黑盒子程序&lt;code&gt;BLACKBOX&lt;/code&gt;的前后都设置一个断点，即9178行以及9202行都设置一个断点，如果我们发现程序跑到了9202行但是返回码不是我们想要的结果，那么运行&lt;code&gt;“GOTO 9178”&lt;/code&gt; 即可重新回到Call黑盒子之前，无限反复尝试，重新造数据，直到成功！  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="ss"&gt;SOURCE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;TESTPGM1&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;----+----&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;----+----&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;----+----&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;----+----&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="ss"&gt;LINE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;9178&lt;/span&gt; &lt;span class="no"&gt;OF&lt;/span&gt; &lt;span class="mi"&gt;15895&lt;/span&gt;
&lt;span class="mo"&gt;0020&lt;/span&gt;  &lt;span class="mo"&gt;01&lt;/span&gt; &lt;span class="no"&gt;WS&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;FIELDS&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;0021&lt;/span&gt;  &lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;WS&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;CALLED&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;PGM&lt;/span&gt;            &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;VALUE&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;BLACKBOX&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;0022&lt;/span&gt;  &lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;WS&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;RETURN&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;CD&lt;/span&gt;             &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mo"&gt;04&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;VALUE&lt;/span&gt; &lt;span class="no"&gt;SPACES&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;0023&lt;/span&gt;  &lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;WS&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;RETURN&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;MSG&lt;/span&gt;            &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;VALUE&lt;/span&gt; &lt;span class="no"&gt;SPACES&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
  &lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="mi"&gt;9178&lt;/span&gt; &lt;span class="no"&gt;INITIALIZE&lt;/span&gt; &lt;span class="no"&gt;COMMAREA1&lt;/span&gt;                        
&lt;span class="mi"&gt;9179&lt;/span&gt; &lt;span class="no"&gt;MOVE&lt;/span&gt; &lt;span class="mi"&gt;4500&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;     &lt;span class="no"&gt;TO&lt;/span&gt; &lt;span class="no"&gt;WAGE&lt;/span&gt; &lt;span class="no"&gt;OF&lt;/span&gt; &lt;span class="no"&gt;COMMAREA1&lt;/span&gt;
&lt;span class="mi"&gt;9180&lt;/span&gt; &lt;span class="no"&gt;MOVE&lt;/span&gt; &lt;span class="no"&gt;TODAYS&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;DATE&lt;/span&gt; &lt;span class="no"&gt;TO&lt;/span&gt; &lt;span class="no"&gt;ENROLL&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;DATE&lt;/span&gt; &lt;span class="no"&gt;OF&lt;/span&gt; &lt;span class="no"&gt;COMMAREA1&lt;/span&gt;
&lt;span class="mi"&gt;9181&lt;/span&gt; &lt;span class="no"&gt;SET&lt;/span&gt;  &lt;span class="no"&gt;WS&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;CALLED&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;PTR&lt;/span&gt;    &lt;span class="no"&gt;TO&lt;/span&gt; &lt;span class="no"&gt;ADDRESS&lt;/span&gt;  &lt;span class="no"&gt;OF&lt;/span&gt; &lt;span class="no"&gt;COMMAREA1&lt;/span&gt;
&lt;span class="mi"&gt;9182&lt;/span&gt; &lt;span class="no"&gt;CALL&lt;/span&gt; &lt;span class="no"&gt;WS&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;CALLED&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;PGM&lt;/span&gt;        &lt;span class="no"&gt;USING&lt;/span&gt; &lt;span class="no"&gt;WS&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;CALLED&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;PTR&lt;/span&gt;  
&lt;span class="mi"&gt;9183&lt;/span&gt; &lt;span class="no"&gt;ON&lt;/span&gt; &lt;span class="no"&gt;EXCEPTION&lt;/span&gt;                                         
&lt;span class="mi"&gt;9184&lt;/span&gt;   &lt;span class="no"&gt;SET&lt;/span&gt;  &lt;span class="no"&gt;CALLED&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;UNSUCCESSFUL&lt;/span&gt;   &lt;span class="no"&gt;TO&lt;/span&gt; &lt;span class="no"&gt;TRUE&lt;/span&gt;            
&lt;span class="mi"&gt;9185&lt;/span&gt;   &lt;span class="no"&gt;MOVE&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ERR1&amp;#39;&lt;/span&gt;                &lt;span class="no"&gt;TO&lt;/span&gt; &lt;span class="no"&gt;RETURN&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;CD&lt;/span&gt; 
&lt;span class="mi"&gt;9186&lt;/span&gt;   &lt;span class="no"&gt;MOVE&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;CALL FAILED - EXCEPTION OCCURED&amp;#39;&lt;/span&gt;   
&lt;span class="mi"&gt;9187&lt;/span&gt;                              &lt;span class="no"&gt;TO&lt;/span&gt; &lt;span class="no"&gt;WS&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;RETURN&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;MSG&lt;/span&gt;
&lt;span class="mi"&gt;9188&lt;/span&gt; &lt;span class="no"&gt;PERFORM&lt;/span&gt; &lt;span class="no"&gt;A9999&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;TERMINATION&lt;/span&gt;                           
&lt;span class="mi"&gt;9189&lt;/span&gt;         &lt;span class="no"&gt;THRU&lt;/span&gt; &lt;span class="no"&gt;A9999&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;EXIT&lt;/span&gt;   
&lt;span class="mi"&gt;9200&lt;/span&gt; &lt;span class="k"&gt;END&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;CALL&lt;/span&gt;                   
&lt;span class="mi"&gt;9201&lt;/span&gt; 
&lt;span class="mi"&gt;9202&lt;/span&gt; &lt;span class="no"&gt;IF&lt;/span&gt; &lt;span class="no"&gt;RTN&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;CODE&lt;/span&gt; &lt;span class="no"&gt;OF&lt;/span&gt; &lt;span class="no"&gt;COMMAREA1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;    &amp;#39;&lt;/span&gt;
  &lt;span class="o"&gt;.&lt;/span&gt;
  &lt;span class="o"&gt;.&lt;/span&gt;
  &lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;用这种&lt;code&gt;“GOTO”&lt;/code&gt;的方法，同样也可以用来解决F2单步执行不小心按多了错过了代码但是还想退回去的情况，可以试试~&lt;/p&gt;</summary><category term="Debug Tool"></category><category term="GOTO"></category></entry><entry><title>IBM DebugTool的Source Identification Panel</title><link href="http://mainframer.github.io/articles/IBM%20DebugTool%E7%9A%84Source%20Identification%20Panel.html" rel="alternate"></link><updated>2012-12-26T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-12-26:articles/IBM DebugTool的Source Identification Panel.html</id><summary type="html">&lt;p&gt;IBM DebugTool，在debug过程中可以按PF4键，或者输入命令:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SOURCE
or 
LIST
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这时就会显示&lt;code&gt;Source Identification Panel&lt;/code&gt;面板，在这里即可得知您当前正在debug的所有程序(Compile Unit)的详细路径。知道了它们都是从哪一个&lt;code&gt;loadlib&lt;/code&gt;取到的,这确实对调试很有帮助。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;                 &lt;span class="no"&gt;Source&lt;/span&gt; &lt;span class="no"&gt;Identification&lt;/span&gt; &lt;span class="no"&gt;Panel&lt;/span&gt;                                 
&lt;span class="no"&gt;Command&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt;                                                                  

&lt;span class="no"&gt;Compile&lt;/span&gt; &lt;span class="no"&gt;Unit&lt;/span&gt;              &lt;span class="no"&gt;Listing&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;Source&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;                          &lt;span class="no"&gt;Display&lt;/span&gt;
&lt;span class="o"&gt;-------------------------&lt;/span&gt; &lt;span class="o"&gt;--------------------------------------------&lt;/span&gt; &lt;span class="o"&gt;-------&lt;/span&gt;
&lt;span class="no"&gt;TESTPGM1&lt;/span&gt;                   &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOAD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LIB1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;TETPGM1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                &lt;span class="n"&gt;Y&lt;/span&gt;  
&lt;span class="no"&gt;TESTPGM2&lt;/span&gt;                   &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOAD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LIB2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;TETPGM2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                &lt;span class="n"&gt;Y&lt;/span&gt; 
&lt;span class="no"&gt;TESTPGM3&lt;/span&gt;                   &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOAD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LIB3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;TETPGM3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                &lt;span class="n"&gt;Y&lt;/span&gt;     

&lt;span class="no"&gt;Enter&lt;/span&gt;  &lt;span class="k"&gt;END&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;QUIT&lt;/span&gt;    &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;current&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt; &lt;span class="n"&gt;saved&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;                     
       &lt;span class="no"&gt;CANCEL&lt;/span&gt;      &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;without&lt;/span&gt; &lt;span class="n"&gt;current&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt; &lt;span class="n"&gt;saved&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;     
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;就像上面这样，你一眼就可以知道你当前调试的&lt;em&gt;TESTPGM1&lt;/em&gt;这个程序是从&lt;code&gt;IBMUSER.TEST.LOAD.LIB1&lt;/code&gt;这个&lt;em&gt;loadlib&lt;/em&gt;里面取到的，还有&lt;em&gt;TESTPGM2&lt;/em&gt;，&lt;em&gt;TESTPGM3&lt;/em&gt;也都可以知道它们是从哪里取到的，免得调试了半天发现版本不对那可就不好了！&lt;/p&gt;</summary><category term="Debug Tool"></category></entry><entry><title>PL/I和COBOL如何取得当天的日期</title><link href="http://mainframer.github.io/articles/PLI%E5%92%8CCOBOL%E5%A6%82%E4%BD%95%E5%8F%96%E5%BE%97%E5%BD%93%E5%A4%A9%E7%9A%84%E6%97%A5%E6%9C%9F.html" rel="alternate"></link><updated>2012-12-10T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-12-10:articles/PLI和COBOL如何取得当天的日期.html</id><summary type="html">&lt;p&gt;在Mainframe上做开发会经常遇到用PL/I或者COBOL取得当天的日期，对于PL/I，一般的公司都采取如下的做法：  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;DCL&lt;/span&gt; &lt;span class="no"&gt;PIC_TODAY&lt;/span&gt;            &lt;span class="no"&gt;PIC&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;999999&amp;#39;&lt;/span&gt; &lt;span class="no"&gt;INIT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="no"&gt;PIC_TODAY&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;DATE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="no"&gt;IF&lt;/span&gt; &lt;span class="no"&gt;SUBSTR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;DATE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;50&amp;#39;&lt;/span&gt;                
  &lt;span class="no"&gt;THEN&lt;/span&gt; &lt;span class="no"&gt;TODAYS_DATE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;19000000&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="no"&gt;PIC_TODAY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="no"&gt;ELSE&lt;/span&gt; &lt;span class="no"&gt;TODAYS_DATE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20000000&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="no"&gt;PIC_TODAY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;我所在的公司也是这种写法来获得&lt;code&gt;YYYYMMDD&lt;/code&gt;格式的当日日期，很明显这种写法代码的寿命只有几十年了，相比之下COBOL获得&lt;code&gt;YYYYMMDD&lt;/code&gt;格式的当日日期就显得方便得多，一个&lt;code&gt;ACCEPT&lt;/code&gt;语句即可:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;WORKING&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;STORAGE&lt;/span&gt; &lt;span class="no"&gt;SECTION&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;01&lt;/span&gt; &lt;span class="no"&gt;TODAYS&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;DATE&lt;/span&gt;                          &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="no"&gt;PROCEDURE&lt;/span&gt; &lt;span class="no"&gt;DIVISION&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="no"&gt;ACCEPT&lt;/span&gt; &lt;span class="no"&gt;TODAYS&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;DATE&lt;/span&gt; &lt;span class="no"&gt;FROM&lt;/span&gt; &lt;span class="no"&gt;DATE&lt;/span&gt; &lt;span class="no"&gt;YYYYMMDD&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="PLI"></category><category term="COBOL"></category></entry><entry><title>COBOL程序编译报错GYDS1145-S</title><link href="http://mainframer.github.io/articles/COBOL%E7%A8%8B%E5%BA%8F%E7%BC%96%E8%AF%91%E6%8A%A5%E9%94%99GYDS1145-S.html" rel="alternate"></link><updated>2012-11-24T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-11-24:articles/COBOL程序编译报错GYDS1145-S.html</id><summary type="html">&lt;p&gt;今天编译一个COBOL老程序的时候报错：&lt;code&gt;IGYDS1145-S&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;IGYDS1145-S More than 18 digit positions were specified in a "PICTURE" string for a numeric or numeric edited item.&lt;br /&gt;
 A "PICTURE" string of "S9(18)" was assumed.           &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;原因是老的编译器不支持超过18位的长度变量，但是新的编译器支持。这个帖子里有讨论得更多。
&lt;a href="http://ibmmainframes.com/post-9087.html"&gt;http://ibmmainframes.com/post-9087.html&lt;/a&gt;   &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;COBOL Compiler restricts me defining a PIC 9() variable not more than of size 18 (Including the decimal positions)&lt;br /&gt;
The new Enterprise COBOL for z/OS supports upto 31 digits. If you have this, add ARITH(EXTEND) compiler option.   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;解决办法是添加编译参数扩展长度: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;COMPILE&lt;/span&gt; &lt;span class="ss"&gt;PARMS&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;     &lt;span class="no"&gt;ARITH&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;EXTEND&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                                                           
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;或者也可以在代码里面体现:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;CBL&lt;/span&gt; &lt;span class="no"&gt;ARITH&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;EXTEND&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                                      
&lt;span class="no"&gt;IDENTIFICATION&lt;/span&gt; &lt;span class="no"&gt;DIVISION&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;</summary><category term="COBOL"></category><category term="GYDS1145-S"></category><category term="ARITH(EXTEND)"></category></entry><entry><title>JCL批量注释</title><link href="http://mainframer.github.io/articles/JCL%E6%89%B9%E9%87%8F%E6%B3%A8%E9%87%8A.html" rel="alternate"></link><updated>2012-10-21T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-10-21:articles/JCL批量注释.html</id><summary type="html">&lt;p&gt;在JCL里面一次如何注释掉一整段连续的Statement? 下面这个替换思想的方法不错，不妨一试！&lt;br /&gt;
命令：&lt;code&gt;C '//' '//*' ALL .X .Y&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;File&lt;/span&gt; &lt;span class="no"&gt;Edit&lt;/span&gt; &lt;span class="no"&gt;Edit_Settings&lt;/span&gt; &lt;span class="no"&gt;Menu&lt;/span&gt; &lt;span class="no"&gt;Utilities&lt;/span&gt; &lt;span class="no"&gt;Compilers&lt;/span&gt; &lt;span class="no"&gt;Test&lt;/span&gt; &lt;span class="no"&gt;Help&lt;/span&gt; 
&lt;span class="no"&gt;VIEW&lt;/span&gt; &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;JCL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SORT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mo"&gt;01&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;99&lt;/span&gt;                 &lt;span class="no"&gt;Columns&lt;/span&gt; &lt;span class="mo"&gt;00001&lt;/span&gt; &lt;span class="mo"&gt;00072&lt;/span&gt; 
&lt;span class="no"&gt;Command&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;//&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;//*&amp;#39;&lt;/span&gt; &lt;span class="no"&gt;ALL&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;                    &lt;span class="no"&gt;Scroll&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;CSR&lt;/span&gt; 

&lt;span class="o"&gt;********&lt;/span&gt; &lt;span class="no"&gt;Top&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="no"&gt;Data&lt;/span&gt; &lt;span class="o"&gt;*********************************************************&lt;/span&gt; 
&lt;span class="mo"&gt;000001&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;IBMUSERS&lt;/span&gt; &lt;span class="no"&gt;JOB&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;000000000000000000CMP&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
&lt;span class="mo"&gt;000002&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="no"&gt;CLASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;NOTIFY&lt;/span&gt;&lt;span class="o"&gt;=&amp;amp;&lt;/span&gt;&lt;span class="no"&gt;SYSUID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;MSGCLASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;TIME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;NOLIMIT&lt;/span&gt; 
&lt;span class="mo"&gt;000003&lt;/span&gt; &lt;span class="o"&gt;//*********************************************************************&lt;/span&gt;
&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;     &lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;STEP001&lt;/span&gt; &lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;ICETOOL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;REGION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt; 
&lt;span class="mo"&gt;000005&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;INPUT1&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&amp;amp;&lt;/span&gt;&lt;span class="no"&gt;HLQ1&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="no"&gt;AEN&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;INPUT1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EXT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt; 
&lt;span class="mo"&gt;000006&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;INPUT2&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&amp;amp;&lt;/span&gt;&lt;span class="no"&gt;HLQ1&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="no"&gt;AEN&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;INPUT2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EXT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt; 
&lt;span class="mo"&gt;000007&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;INPUT3&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&amp;amp;&lt;/span&gt;&lt;span class="no"&gt;HLQ1&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="no"&gt;AEN&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;INPUT3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EXT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;
&lt;span class="mo"&gt;00000&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;OUTPUT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OUTPUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
&lt;span class="mo"&gt;00000&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;MOD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;CATLG&lt;/span&gt;&lt;span class="p"&gt;,),&lt;/span&gt;&lt;span class="no"&gt;UNIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SYSDA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;SPACE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;CYL&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;RLSE&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
&lt;span class="mo"&gt;000010&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="no"&gt;DCB&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SYS1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MODEL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;RECFM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;FB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;LRECL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DSORG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;PS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="mo"&gt;000011&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTWK01&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;UNIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SYSDA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;SPACE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;CYL&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;RLSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="mo"&gt;000012&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;TOOLMSG&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; 
&lt;span class="mo"&gt;000013&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;DFSMSG&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt; 
&lt;span class="mo"&gt;000014&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;TOOLIN&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&amp;amp;&lt;/span&gt;&lt;span class="no"&gt;CONTROL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;MYCNTL01&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt; 
&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;     &lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;CTL1CNTL&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&amp;amp;&lt;/span&gt;&lt;span class="no"&gt;CONTROL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;MYCNTL02&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt; 
&lt;span class="mo"&gt;000016&lt;/span&gt; &lt;span class="o"&gt;//*&lt;/span&gt; 

&lt;span class="no"&gt;F1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Help&lt;/span&gt; &lt;span class="no"&gt;F2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Split&lt;/span&gt; &lt;span class="no"&gt;F3&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Exit&lt;/span&gt; &lt;span class="no"&gt;F5&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Rfind&lt;/span&gt; &lt;span class="no"&gt;F6&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Rchange&lt;/span&gt; &lt;span class="no"&gt;F7&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Up&lt;/span&gt; 
&lt;span class="no"&gt;F8&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Down&lt;/span&gt; &lt;span class="no"&gt;F9&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Swap&lt;/span&gt; &lt;span class="no"&gt;F10&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Left&lt;/span&gt; &lt;span class="no"&gt;F11&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Right&lt;/span&gt; &lt;span class="no"&gt;F12&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Cancel&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;</summary><category term="JCL批量注释"></category></entry><entry><title>Local FTP Trigger JES job</title><link href="http://mainframer.github.io/articles/Local%20FTP%20Trigger%20JES%20job.html" rel="alternate"></link><updated>2012-10-08T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-10-08:articles/Local FTP Trigger JES job.html</id><summary type="html">&lt;p&gt;随便写了一个搜索ABC字符串的JCL，保存到桌面:  &lt;br /&gt;
&lt;code&gt;C:\Documents and Settings\Foo\Desktop\IBMUSERJ.txt&lt;/code&gt;  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;IBMUSERJ&lt;/span&gt; &lt;span class="no"&gt;JOB&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;000000000000000000CMP&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;      
&lt;span class="sr"&gt;//&lt;/span&gt;     &lt;span class="no"&gt;CLASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;NOTIFY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;TIME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;NOLIMIT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;MSGCLASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;                                           
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;ONLINE&lt;/span&gt;  &lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;ISRSUPC&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                  
&lt;span class="sr"&gt;//&lt;/span&gt;            &lt;span class="no"&gt;PARM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SRCHCMP&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                 
&lt;span class="sr"&gt;//&lt;/span&gt;            &lt;span class="s1"&gt;&amp;#39;ANYC&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;NEWDD&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PROCLIB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;  
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;OUTDD&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;    
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSIN&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;           
&lt;span class="no"&gt;SRCHFOR&lt;/span&gt;  &lt;span class="s1"&gt;&amp;#39;ABC&amp;#39;&lt;/span&gt;       
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;用ftp的方式将jcl送入JES系统执行。&lt;code&gt;win+R&lt;/code&gt;打开cmd &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="ss"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:\&lt;/span&gt;&lt;span class="no"&gt;Documents&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="no"&gt;Settings&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="no"&gt;Foo&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="no"&gt;Desktop&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;ftp&lt;/span&gt; &lt;span class="n"&gt;ftpserver&lt;/span&gt;  
&lt;span class="sr"&gt;/*input username/&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="o"&gt;*/&lt;/span&gt;  
&lt;span class="n"&gt;ftp&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ascii&lt;/span&gt;  
&lt;span class="mi"&gt;200&lt;/span&gt; &lt;span class="no"&gt;Representation&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="no"&gt;Ascii&lt;/span&gt; &lt;span class="no"&gt;NonPrint&lt;/span&gt;  
&lt;span class="n"&gt;ftp&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt; &lt;span class="n"&gt;site&lt;/span&gt; &lt;span class="n"&gt;filetype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;jes&lt;/span&gt;  
&lt;span class="mi"&gt;200&lt;/span&gt; &lt;span class="no"&gt;SITE&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;accepted&lt;/span&gt;  
&lt;span class="n"&gt;ftp&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;put&lt;/span&gt; &lt;span class="no"&gt;IBMUSERJ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;  
&lt;span class="mi"&gt;200&lt;/span&gt; &lt;span class="no"&gt;Port&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="no"&gt;OK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  
&lt;span class="mi"&gt;125&lt;/span&gt; &lt;span class="no"&gt;Sending&lt;/span&gt; &lt;span class="no"&gt;Job&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="no"&gt;JES&lt;/span&gt; &lt;span class="n"&gt;internal&lt;/span&gt; &lt;span class="n"&gt;reader&lt;/span&gt; &lt;span class="no"&gt;FIXrecfm&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;  
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;It&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;known&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="no"&gt;JES&lt;/span&gt; &lt;span class="n"&gt;as&lt;/span&gt; &lt;span class="no"&gt;J0693574&lt;/span&gt;  
&lt;span class="mi"&gt;250&lt;/span&gt; &lt;span class="no"&gt;Transfer&lt;/span&gt; &lt;span class="n"&gt;completed&lt;/span&gt; &lt;span class="n"&gt;successfully&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  
&lt;span class="mi"&gt;419&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt; &lt;span class="n"&gt;sent&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mo"&gt;002&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;209499&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="n"&gt;ftp&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;quit&lt;/span&gt;  
&lt;span class="mi"&gt;221&lt;/span&gt; &lt;span class="no"&gt;Quit&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="n"&gt;received&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="no"&gt;Goodbye&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;可以看到送入JES系统的&lt;code&gt;job number&lt;/code&gt;是J0693574，登录TSO,在SDSF里面可以看到job在执行。  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;Display&lt;/span&gt;  &lt;span class="no"&gt;Filter&lt;/span&gt;  &lt;span class="no"&gt;View&lt;/span&gt;  &lt;span class="no"&gt;Print&lt;/span&gt;  &lt;span class="no"&gt;Options&lt;/span&gt;  &lt;span class="no"&gt;Search&lt;/span&gt;  &lt;span class="no"&gt;Help&lt;/span&gt;                              
 &lt;span class="o"&gt;-------------------------------------------------------------------------------&lt;/span&gt;  
 &lt;span class="no"&gt;SDSF&lt;/span&gt; &lt;span class="no"&gt;STATUS&lt;/span&gt; &lt;span class="no"&gt;DISPLAY&lt;/span&gt; &lt;span class="no"&gt;ALL&lt;/span&gt; &lt;span class="no"&gt;CLASSES&lt;/span&gt;                        &lt;span class="no"&gt;LINE&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;           
 &lt;span class="no"&gt;COMMAND&lt;/span&gt; &lt;span class="no"&gt;INPUT&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt;                                            &lt;span class="no"&gt;SCROLL&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;CSR&lt;/span&gt;    
 &lt;span class="no"&gt;PREFIX&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;  &lt;span class="no"&gt;DEST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;ALL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="no"&gt;OWNER&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;  &lt;span class="no"&gt;SYSNAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;                                   
 &lt;span class="no"&gt;NP&lt;/span&gt;   &lt;span class="no"&gt;JOBNAME&lt;/span&gt;  &lt;span class="no"&gt;TYPE&lt;/span&gt; &lt;span class="no"&gt;JNUM&lt;/span&gt;   &lt;span class="no"&gt;PRTY&lt;/span&gt; &lt;span class="no"&gt;QUEUE&lt;/span&gt;      &lt;span class="no"&gt;ASYS&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="no"&gt;MC&lt;/span&gt; &lt;span class="no"&gt;PRT&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;DEST&lt;/span&gt; &lt;span class="no"&gt;STAT&lt;/span&gt; &lt;span class="no"&gt;TOT&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;LINES&lt;/span&gt;  &lt;span class="no"&gt;RM&lt;/span&gt;  
      &lt;span class="no"&gt;IBMUSERJ&lt;/span&gt; &lt;span class="no"&gt;JOB&lt;/span&gt;  &lt;span class="mi"&gt;693574&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="no"&gt;PRINT&lt;/span&gt;           &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;  &lt;span class="no"&gt;LOCAL&lt;/span&gt;                &lt;span class="mi"&gt;173&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;</summary><category term="z/OS"></category><category term="ftp"></category><category term="quote site"></category><category term="JES2"></category></entry><entry><title>FTP from windows to Mainframe</title><link href="http://mainframer.github.io/articles/FTP%20from%20windows%20to%20Mainframe.html" rel="alternate"></link><updated>2012-10-03T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-10-03:articles/FTP from windows to Mainframe.html</id><summary type="html">&lt;p&gt;&lt;code&gt;win+R&lt;/code&gt;打开cmd:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="ss"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:\&lt;/span&gt;&lt;span class="no"&gt;Documents&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="no"&gt;Settings&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="no"&gt;Foo&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="no"&gt;Desktop&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;ftp&lt;/span&gt; &lt;span class="n"&gt;ftpserver&lt;/span&gt;  
&lt;span class="sr"&gt;/*Here please input username/&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="o"&gt;*/&lt;/span&gt;  
&lt;span class="n"&gt;ftp&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ascii&lt;/span&gt;
&lt;span class="mi"&gt;200&lt;/span&gt; &lt;span class="no"&gt;Representation&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="no"&gt;Ascii&lt;/span&gt; &lt;span class="no"&gt;NonPrint&lt;/span&gt;
&lt;span class="n"&gt;ftp&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt; &lt;span class="n"&gt;site&lt;/span&gt; &lt;span class="n"&gt;lrecl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt; &lt;span class="n"&gt;blksize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;16000&lt;/span&gt; &lt;span class="n"&gt;recfm&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;fb&lt;/span&gt;
&lt;span class="mi"&gt;200&lt;/span&gt; &lt;span class="no"&gt;SITE&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;accepted&lt;/span&gt;
&lt;span class="n"&gt;ftp&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;put&lt;/span&gt; &lt;span class="nb"&gt;test&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ibmuser.test.psfile(+1)&amp;#39;&lt;/span&gt;
&lt;span class="mi"&gt;200&lt;/span&gt; &lt;span class="no"&gt;Port&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="no"&gt;OK&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mi"&gt;125&lt;/span&gt; &lt;span class="no"&gt;Storing&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PSFILE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt; &lt;span class="no"&gt;Transfer&lt;/span&gt; &lt;span class="n"&gt;completed&lt;/span&gt; &lt;span class="n"&gt;successfully&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mi"&gt;71&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt; &lt;span class="n"&gt;sent&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;71&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ftp&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;quit&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;&lt;code&gt;Lrecl&lt;/code&gt;&lt;/strong&gt; specifies the record length of 80.&lt;br /&gt;
&lt;strong&gt;&lt;code&gt;Blksize&lt;/code&gt;&lt;/strong&gt; specifies the block size of 16000. &lt;br /&gt;
&lt;strong&gt;&lt;code&gt;Recfm&lt;/code&gt;&lt;/strong&gt; specifies the record format of fixed block.&lt;br /&gt;
&lt;strong&gt;&lt;code&gt;Filename.txt&lt;/code&gt;&lt;/strong&gt; is the windows file name you are going to send from.&lt;br /&gt;
&lt;strong&gt;&lt;code&gt;IBMUSER.TEST.PSFILE(+1)&lt;/code&gt;&lt;/strong&gt; is the target file name you are sending to, ‘(+1)’ indicates a new file generation each time.   &lt;/p&gt;</summary><category term="z/OS"></category><category term="ftp"></category><category term="quote site"></category></entry><entry><title>CICS的TOR,AOR,FOR概念</title><link href="http://mainframer.github.io/articles/CICS%E7%9A%84TOR,AOR,FOR%E6%A6%82%E5%BF%B5.html" rel="alternate"></link><updated>2012-09-26T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-09-26:articles/CICS的TOR,AOR,FOR概念.html</id><summary type="html">&lt;p&gt;CICS当中&lt;code&gt;TOR，AOR,FOR&lt;/code&gt;还有其它*OR什么意思？ &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;TOR&lt;/code&gt;&lt;/strong&gt; 是TERMINAL OWNING REGION,TOR上只定义TERMINAL，在TOR上定义PCT,REMOTE到AOR。当交易进入TOR后会被路由到对应的AOR去执行。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;AOR&lt;/code&gt;&lt;/strong&gt; 是APPLICATION OWNING REGION，AOR上跑交易和应用程序。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;FOR&lt;/code&gt;&lt;/strong&gt; 是FILE OWNING REGION&lt;br /&gt;
网上搜到老外的解释:    &lt;blockquote&gt;
&lt;p&gt;Tor is where the terminals are defined, Aor is where the applications are defined and FOR where the files are defined.&lt;br /&gt;
Generally, TORs are the regions that have connection to the terminals (or other connections)&lt;br /&gt;
All the termianal related programs (Translator, co-ordinator) will be coded in TOR and API (Application program interface) will be coded in AOR.&lt;br /&gt;
To put in simple words - screen handling , function keys logic, function keys validations will be in programs coded in TOR and all business logic (valid processing, updating the database) in AOR. &lt;br /&gt;
They are just CICS sytems that are used to split out certain functions and applications into discrete CICS system for easier maintance\administration.Note there is no technical difference between the different region types. 
Any CICS region could act in any/all of the roles. Customers find it simplifies administration and improves reliability to categorize regions and isolate user applications into separate regions from service regions.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;总结起来：&lt;/strong&gt;&lt;br /&gt;
它们都属于CICS的一部分，本质上并没有不同。只是为了功能划分，负载均衡以及便于维护等方面考虑而人为区分开来的。分工不同而已！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="CICS"></category><category term="TOR"></category><category term="AOR"></category><category term="FOR"></category></entry><entry><title>DB2 SQLcode</title><link href="http://mainframer.github.io/articles/DB2%20SQLcode.html" rel="alternate"></link><updated>2012-09-19T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-09-19:articles/DB2 SQLcode.html</id><summary type="html">&lt;h3&gt;DB2 SQLcode&lt;/h3&gt;
&lt;h5&gt;IBM官网:&lt;/h5&gt;
&lt;p&gt;这里是原帖：&lt;a href="http://publib.boulder.ibm.com/infocenter/dzichelp/v2r2/index.jsp?topic=%2Fcom.ibm.db2z10.doc.codes%2Fsrc%2Ftpc%2Fdb2z_sqlcodes.htm"&gt;http://publib.boulder.ibm.com/infocenter/dzichelp/v2r2/index.jsp?topic=%2Fcom.ibm.db2z10.doc.codes%2Fsrc%2Ftpc%2Fdb2z_sqlcodes.htm&lt;/a&gt;    &lt;/p&gt;
&lt;h5&gt;Wiki:&lt;/h5&gt;
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/DB2_SQL_return_codes"&gt;http://en.wikipedia.org/wiki/DB2_SQL_return_codes&lt;/a&gt;&lt;/p&gt;</summary><category term="DB2 SQLcode"></category></entry><entry><title>SuperC SRCHFOR高级选项</title><link href="http://mainframer.github.io/articles/SuperC%20SRCHFOR%E9%AB%98%E7%BA%A7%E9%80%89%E9%A1%B9.html" rel="alternate"></link><updated>2012-09-11T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-09-11:articles/SuperC SRCHFOR高级选项.html</id><summary type="html">&lt;p&gt;在&lt;code&gt;ISPF 3.4&lt;/code&gt; 选项下面使用&lt;em&gt;SRCHFOR&lt;/em&gt;其实可以有高级选项功能的：比如能一次search多个string，比如能选择是否searchn那些已经被&lt;em&gt;MIGRATE&lt;/em&gt;的那些dataset等等。
这里，要在&lt;code&gt;IBMUSER.TEST.GDGRPT&lt;/code&gt;的所有世代里面查找:&lt;code&gt;shehui&lt;/code&gt;, &lt;code&gt;zhuyi&lt;/code&gt;,&lt;code&gt;hao&lt;/code&gt;这三个字符串，包括那些已经被migrate的。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;DSLIST&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="no"&gt;Data&lt;/span&gt; &lt;span class="no"&gt;Sets&lt;/span&gt; &lt;span class="no"&gt;Matching&lt;/span&gt; &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GDGRPT&lt;/span&gt;                 &lt;span class="no"&gt;Row&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt; 
&lt;span class="no"&gt;Command&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt;                                                  &lt;span class="no"&gt;Scroll&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;CSR&lt;/span&gt;  

&lt;span class="no"&gt;Command&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="no"&gt;Enter&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="nb"&gt;select&lt;/span&gt; &lt;span class="n"&gt;action&lt;/span&gt;                  &lt;span class="no"&gt;Message&lt;/span&gt;           &lt;span class="no"&gt;Volume&lt;/span&gt; 
&lt;span class="o"&gt;-------------------------------------------------------------------------------&lt;/span&gt;
         &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GDGRPT&lt;/span&gt;                       &lt;span class="no"&gt;Not&lt;/span&gt; &lt;span class="n"&gt;searched&lt;/span&gt;      &lt;span class="sc"&gt;??????&lt;/span&gt; 
         &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GDGRPT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;G0002V00&lt;/span&gt;                                &lt;span class="no"&gt;XZ8W28&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;
         &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GDGRPT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;G0003V00&lt;/span&gt;                                &lt;span class="no"&gt;TXT013&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;
         &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GDGRPT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;G0004V00&lt;/span&gt;                                &lt;span class="no"&gt;PEX016&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;
         &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GDGRPT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;G0005V00&lt;/span&gt;                                &lt;span class="no"&gt;EXG013&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;
         &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GDGRPT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;G0006V00&lt;/span&gt;                                &lt;span class="no"&gt;MIGRAT1&lt;/span&gt;
         &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GDGRPT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;G0007V00&lt;/span&gt;                                &lt;span class="no"&gt;MIGRAT2&lt;/span&gt;
         &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GDGRPT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;G0008V00&lt;/span&gt;                                &lt;span class="no"&gt;MIGRAT2&lt;/span&gt;
         &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GDGRPT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;G0009V00&lt;/span&gt;                                &lt;span class="no"&gt;MIGRAT2&lt;/span&gt;
         &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GDGRPT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;G0010V00&lt;/span&gt;                                &lt;span class="no"&gt;MIGRAT2&lt;/span&gt;
         &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GDGRPT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;G0011V00&lt;/span&gt;                                &lt;span class="no"&gt;YTW002&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在Command栏输入&lt;code&gt;srchfor&lt;/code&gt;回车即可看到高级选项对话框:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;Command&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;srchfor&lt;/span&gt;                                           &lt;span class="no"&gt;Scroll&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;CSR&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;enu&lt;/span&gt;  &lt;span class="no"&gt;Options&lt;/span&gt;  &lt;span class="no"&gt;View&lt;/span&gt;  &lt;span class="no"&gt;Utilities&lt;/span&gt;  &lt;span class="no"&gt;Compilers&lt;/span&gt;  &lt;span class="no"&gt;Help&lt;/span&gt;                             
&lt;span class="sb"&gt;``````````````````````````&lt;/span&gt; &lt;span class="no"&gt;DSLIST&lt;/span&gt; &lt;span class="no"&gt;Srchfor&lt;/span&gt; &lt;span class="no"&gt;Options&lt;/span&gt; &lt;span class="sb"&gt;```````````````````````````&lt;/span&gt;
&lt;span class="sb"&gt;                                                                 End of data &lt;/span&gt;
&lt;span class="sb"&gt;                                                                 Command ===&amp;gt;                                                                 &lt;/span&gt;

&lt;span class="sb"&gt;You are about to search multiple data sets.                                  &lt;/span&gt;
&lt;span class="sb"&gt;Specify search string(s) and options and press ENTER to run the search.      &lt;/span&gt;
&lt;span class="sb"&gt;Enter the END or the CANCEL command to cancel the search.                    &lt;/span&gt;
&lt;span class="sb"&gt;                                                                More:   -    &lt;/span&gt;
&lt;span class="sb"&gt;  ==&amp;gt;&amp;#39;SHEHUI&amp;#39;                                                                        &lt;/span&gt;
&lt;span class="sb"&gt;  ==&amp;gt;&amp;#39;ZHUYI&amp;#39;                                                                        &lt;/span&gt;
&lt;span class="sb"&gt;  ==&amp;gt;&amp;#39;HAO&amp;#39;                                                                        &lt;/span&gt;

&lt;span class="sb"&gt;Listing DSN: &amp;#39;IBMUSER.SRCHDSL.LIST&amp;#39;                                          &lt;/span&gt;

&lt;span class="sb"&gt;Select Process      Search              Search              Select Display   &lt;/span&gt;
&lt;span class="sb"&gt;Options with /      Migrated            Excluded            Options with /   &lt;/span&gt;
&lt;span class="sb"&gt;   Mixed Mode       3  1. None          3  1. Excluded         View output   &lt;/span&gt;
&lt;span class="sb"&gt;   Any case            2. First level      2. Non-excluded     Exclude not   &lt;/span&gt;
&lt;span class="sb"&gt;   Totals only         3. All              3. Both             found         &lt;/span&gt;
&lt;span class="sb"&gt;   First found                                                               &lt;/span&gt;
&lt;span class="sb"&gt; F1=Help        F2=Split       F3=Exit        F4=Auto        F7=Backward     &lt;/span&gt;
&lt;span class="sb"&gt; F8=Forward     F9=Swap       F10=Actions    F12=Cancel                      &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="SuperC"></category><category term="SRCHFOR"></category></entry><entry><title>ISPF-只显示含关键字的所有行</title><link href="http://mainframer.github.io/articles/ISPF-%E5%8F%AA%E6%98%BE%E7%A4%BA%E5%90%AB%E5%85%B3%E9%94%AE%E5%AD%97%E7%9A%84%E6%89%80%E6%9C%89%E8%A1%8C.html" rel="alternate"></link><updated>2012-09-07T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-09-07:articles/ISPF-只显示含关键字的所有行.html</id><summary type="html">&lt;p&gt;命令：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;X ALL; 
FIND keyword ALL;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;比如，只显示所有含&lt;code&gt;DT0907&lt;/code&gt;的行，可以这么做，先&lt;code&gt;X ALL&lt;/code&gt;;再&lt;code&gt;FIND DT0907 ALL&lt;/code&gt;;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;VIEW&lt;/span&gt;       &lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TESTJCL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;TESTJOB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mo"&gt;01&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;         &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="no"&gt;CHARS&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;DT0907&amp;#39;&lt;/span&gt; 
 &lt;span class="no"&gt;Command&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;find&lt;/span&gt; &lt;span class="n"&gt;dt0907&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt;                                  &lt;span class="no"&gt;Scroll&lt;/span&gt; &lt;span class="o"&gt;===&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;CSR&lt;/span&gt;  
 &lt;span class="o"&gt;******&lt;/span&gt; &lt;span class="o"&gt;*****************************&lt;/span&gt; &lt;span class="no"&gt;Top&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="no"&gt;Data&lt;/span&gt; &lt;span class="o"&gt;******************************&lt;/span&gt;
 &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;   &lt;span class="mi"&gt;524&lt;/span&gt; &lt;span class="no"&gt;Line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="no"&gt;Displayed&lt;/span&gt; 
 &lt;span class="mo"&gt;000525&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTOUT&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CREATERT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FILEOUTS&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DT0907&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;NEW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;CATLG&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;   
 &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;31&lt;/span&gt; &lt;span class="no"&gt;Line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="no"&gt;Displayed&lt;/span&gt; 
 &lt;span class="mo"&gt;000557&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTOUT&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CREATERT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NAMEACTS&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DT0907&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;NEW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;CATLG&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;   
 &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;   &lt;span class="mi"&gt;176&lt;/span&gt; &lt;span class="no"&gt;Line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="no"&gt;Displayed&lt;/span&gt; 
 &lt;span class="mo"&gt;000734&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;OUT&lt;/span&gt;     &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CREATERT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;USERACTS&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DT0907&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;NEW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;CATLG&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;     
 &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt; &lt;span class="no"&gt;Line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="no"&gt;Displayed&lt;/span&gt; 
 &lt;span class="mo"&gt;000775&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;NTIOUOUT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CREATERT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NTIONOUT&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DT0907&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;NEW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;CATLG&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;   
 &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;75&lt;/span&gt; &lt;span class="no"&gt;Line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="no"&gt;Displayed&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;2013-05-12补充：&lt;/h5&gt;
&lt;p&gt;另外一种方法： &lt;code&gt;X DT0907 ALL; Flip;&lt;/code&gt; &lt;/p&gt;</summary><category term="ISPF"></category><category term="FIND ALL"></category></entry><entry><title>ISPF-提高效率少用PF3和START</title><link href="http://mainframer.github.io/articles/ISPF-%E6%8F%90%E9%AB%98%E6%95%88%E7%8E%87%E5%B0%91%E7%94%A8PF3%E5%92%8CSTART.html" rel="alternate"></link><updated>2012-09-01T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-09-01:articles/ISPF-提高效率少用PF3和START.html</id><summary type="html">&lt;p&gt;同一个&lt;em&gt;PDS&lt;/em&gt;下，记得多用&lt;code&gt;BROWSE&lt;/code&gt;, &lt;code&gt;VIEW&lt;/code&gt;,&lt;code&gt;EDIT&lt;/code&gt;,&lt;code&gt;COMP&lt;/code&gt;这些命令。比如&lt;code&gt;BROWSE TEST02&lt;/code&gt; 或者&lt;code&gt;EDIT TEST03&lt;/code&gt; 或者&lt;code&gt;VIEW TEST04&lt;/code&gt; 或者&lt;code&gt;COMP 'IBMUSER.PROJ.TEST.JCL1((TEST01)'&lt;/code&gt; 这样，不需要另外&lt;em&gt;PF3&lt;/em&gt;或者&lt;em&gt;START&lt;/em&gt;开一个窗口。
比如需要在同一个&lt;em&gt;PDS&lt;/em&gt;下的&lt;em&gt;TEST02&lt;/em&gt;这个JCL中拷贝一些东西到当前的TEST01的时候，经常用到。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;File&lt;/span&gt;  &lt;span class="no"&gt;Edit&lt;/span&gt;  &lt;span class="no"&gt;Edit_Settings&lt;/span&gt;  &lt;span class="no"&gt;Menu&lt;/span&gt;  &lt;span class="no"&gt;Utilities&lt;/span&gt;  &lt;span class="no"&gt;Compilers&lt;/span&gt;  &lt;span class="no"&gt;Test&lt;/span&gt;  &lt;span class="no"&gt;Help&lt;/span&gt;            
 &lt;span class="sb"&gt;```````````````````````````````````````````````````````````````````````````````&lt;/span&gt;
&lt;span class="sb"&gt; VIEW       IBMUSER.PROJ.TEST.JCL(TEST01) - 01.10           Columns 00001 00072 &lt;/span&gt;
&lt;span class="sb"&gt; Command ===&amp;gt; BROWSE TEST02                                    Scroll ===&amp;gt; CSR  &lt;/span&gt;
&lt;span class="sb"&gt; ****** ***************************** Top of Data ******************************&lt;/span&gt;
&lt;span class="sb"&gt; 000001 //IBMUSERS JOB                      011000010TEST,                      &lt;/span&gt;
&lt;span class="sb"&gt; 000002 //  CLASS=1,MSGCLASS=R,NOTIFY=&amp;amp;SYSUID                                   &lt;/span&gt;
&lt;span class="sb"&gt; 000003 //STEP01 EXEC PGM=TESTJOB                                               &lt;/span&gt;
&lt;span class="sb"&gt; 000004 //STEPLIB  DD   DISP=SHR,DSN=IBMUSER.LBN.LOAD.LIB                       &lt;/span&gt;
&lt;span class="sb"&gt; 000005 //FINPUT   DD DSN=IBMUSER.TEMPFLIN,DISP=SHR                             &lt;/span&gt;
&lt;span class="sb"&gt; 000006 //FOUTPUT  DD DSN=IBMUSER.TEMPFLOUT,DISP=SHR                            &lt;/span&gt;
&lt;span class="sb"&gt; 000007 //SYSPRINT DD  SYSOUT=*                                                 &lt;/span&gt;
&lt;span class="sb"&gt; 000008 //SYSOUT   DD  SYSOUT=*                                                 &lt;/span&gt;
&lt;span class="sb"&gt; 000009 //SYSUDUMP DD  SYSOUT=R                                                 &lt;/span&gt;
&lt;span class="sb"&gt; 000010 //PLIDUMP  DD  SYSOUT=R                                                 &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果记不得member的名字，可以只输入&lt;code&gt;BROWSE&lt;/code&gt;或者&lt;code&gt;EDIT&lt;/code&gt;或者&lt;code&gt;VIEW&lt;/code&gt;，让系统列出PDS下所有member供你pick up。&lt;/p&gt;</summary><category term="z/OS"></category></entry><entry><title>ICETOOL: 大小写转换</title><link href="http://mainframer.github.io/articles/ICETOOL-%E5%A4%A7%E5%B0%8F%E5%86%99%E8%BD%AC%E6%8D%A2.html" rel="alternate"></link><updated>2012-08-18T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-08-18:articles/ICETOOL-大小写转换.html</id><summary type="html">&lt;p&gt;&lt;code&gt;TRAN=UTOL&lt;/code&gt; ： uppercase to lowercase&lt;br /&gt;
&lt;code&gt;TRAN=LTOU&lt;/code&gt; ： lowercase to uppercase &lt;br /&gt;
例子：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;CTL1CNTL&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;                                           
  &lt;span class="no"&gt;INREC&lt;/span&gt; &lt;span class="no"&gt;IFTHEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;WHEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;INIT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;OVERLAY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;TRAN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;LTOU&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;   &lt;span class="err"&gt;：对&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="err"&gt;的进来处理的每一条数据的前&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="err"&gt;位先转为大写再说&lt;/span&gt;
              &lt;span class="no"&gt;IFTHEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;WHEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;BUILD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; 
              &lt;span class="no"&gt;IFTHEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;WHEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;BUILD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="z/OS"></category><category term="ICETOOL"></category></entry><entry><title>ICETOOL：数据类型转换</title><link href="http://mainframer.github.io/articles/ICETOOL-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2.html" rel="alternate"></link><updated>2012-08-12T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-08-12:articles/ICETOOL-数据类型转换.html</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;STEP001&lt;/span&gt; &lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;ICETOOL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;REGION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4096&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;COND&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;NE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;           
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;TOOLMSG&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                        
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;DFSMSG&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                        
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSOUT&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                        
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSPRINT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                        
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;IN&lt;/span&gt;                &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;MYINPUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;                           
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;OUT&lt;/span&gt;           &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;OUTFILE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;                             
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;TOOLIN&lt;/span&gt;    &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;                                                
  &lt;span class="no"&gt;COPY&lt;/span&gt; &lt;span class="no"&gt;FROM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;IN&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;TO&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;OUT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="no"&gt;USING&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;CTL1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                       
&lt;span class="sr"&gt;/*                                                            &lt;/span&gt;
&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;CTL1CNTL&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;                                               
  &lt;span class="no"&gt;OUTFIL&lt;/span&gt; &lt;span class="no"&gt;FNAMES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;OUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="no"&gt;MYINPUT&lt;/span&gt;&lt;span class="err"&gt;的第&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;至&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="err"&gt;位为日期，格式为：&lt;/span&gt;&lt;span class="mi"&gt;20120101&lt;/span&gt;&lt;span class="err"&gt;；第&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="err"&gt;位开始的&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="err"&gt;位为数值，格式为：&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mo"&gt;00000000000012&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;12345&lt;/span&gt;                                     
  &lt;span class="no"&gt;BUILD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;ZD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;TO&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;PDC&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;LENGTH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;SFF&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;TO&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;PDC&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;LENGTH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;这里输出只要保留&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="err"&gt;位小数，所以长度为&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="err"&gt;，否则为&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="sr"&gt;/*               &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这个sort做的事情是把&lt;code&gt;zoned decimal(ZD)&lt;/code&gt;类型的数据转化为&lt;code&gt;packed decimal(PD)&lt;/code&gt;类型；将&lt;code&gt;SFF(signed free form)&lt;/code&gt;类型的转为&lt;code&gt;PDC&lt;/code&gt;类型。
举个例子：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;转换之前：&lt;/span&gt; &lt;span class="no"&gt;ZD&lt;/span&gt;&lt;span class="err"&gt;的数据：&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;20120101&amp;#39;&lt;/span&gt;         
&lt;span class="no"&gt;SFF&lt;/span&gt;&lt;span class="err"&gt;的数据：&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-00000000006501.00000&amp;#39;&lt;/span&gt;

&lt;span class="err"&gt;转换之后的&lt;/span&gt; &lt;span class="no"&gt;PD&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;PDC&lt;/span&gt;&lt;span class="err"&gt;数据用&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;HEX&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;查看显示为：&lt;/span&gt;
&lt;span class="mo"&gt;0021100000000510&lt;/span&gt;
&lt;span class="mi"&gt;2100&lt;/span&gt;&lt;span class="no"&gt;C0000000600D&lt;/span&gt;       
&lt;/pre&gt;&lt;/div&gt;</summary><category term="z/OS"></category><category term="ICETOOL"></category></entry><entry><title>ICEMAN：字符替换</title><link href="http://mainframer.github.io/articles/ICEMAN-%E5%AD%97%E7%AC%A6%E6%9B%BF%E6%8D%A2.html" rel="alternate"></link><updated>2012-08-10T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-08-10:articles/ICEMAN-字符替换.html</id><summary type="html">&lt;p&gt;用于替换dataset中出现的字符串:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;STEP001&lt;/span&gt;  &lt;span class="no"&gt;EXEC&lt;/span&gt;  &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;ICEMAN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;REGION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;                    
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTIN&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;MYINPUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;                          
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTOUT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;MYOUTPUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;                         
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSIN&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;                                               
  &lt;span class="no"&gt;OPTION&lt;/span&gt; &lt;span class="no"&gt;COPY&lt;/span&gt;                                               
  &lt;span class="no"&gt;INREC&lt;/span&gt; &lt;span class="no"&gt;FINDREP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;INOUT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;0000&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;AAAA&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;1111&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;BBBB&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;   
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSOUT&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                     
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSPRINT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                     
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;                                                         
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;将出现的&lt;code&gt;'0000'&lt;/code&gt;替换成&lt;code&gt;'AAAA'&lt;/code&gt;,&lt;code&gt;'1111'&lt;/code&gt;替换成&lt;code&gt;‘BBBB‘&lt;/code&gt; 
当然，可以限定在特定几列替换：  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;STEP001&lt;/span&gt;  &lt;span class="no"&gt;EXEC&lt;/span&gt;  &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;ICEMAN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;REGION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;                    
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTIN&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;MYINPUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;                          
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTOUT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;MYOUTPUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;                         
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSIN&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;                                               
  &lt;span class="no"&gt;OPTION&lt;/span&gt; &lt;span class="no"&gt;COPY&lt;/span&gt;                                               
  &lt;span class="no"&gt;INREC&lt;/span&gt; &lt;span class="no"&gt;FINDREP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;INOUT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;0000&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;AAAA&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;1111&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;BBBB&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;STARTPOS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;ENDPOS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSOUT&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                     
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSPRINT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                     
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;     
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;限定只在前10位出现的&lt;code&gt;'0000'&lt;/code&gt;和&lt;code&gt;'1111'&lt;/code&gt;才做替换。&lt;/p&gt;</summary><category term="z/OS"></category><category term="ICEMAN"></category></entry><entry><title>ICETOOL: 多文件输出</title><link href="http://mainframer.github.io/articles/ICETOOL-%E5%A4%9A%E6%96%87%E4%BB%B6%E8%BE%93%E5%87%BA.html" rel="alternate"></link><updated>2012-08-02T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-08-02:articles/ICETOOL-多文件输出.html</id><summary type="html">&lt;p&gt;取一个文件&lt;code&gt;MYINPUT&lt;/code&gt;中的有用字段，组装成多个不同&lt;code&gt;LRECL&lt;/code&gt;的输出文件。这个也是项目中用到的，我再这里简化了好多！&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;STEP001&lt;/span&gt; &lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;ICETOOL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;REGION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4096&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;COND&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;NE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;         
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;TOOLMSG&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                      
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;DFSMSG&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                      
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSOUT&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                      
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSPRINT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                      
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTWK01&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;UNIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SYSDA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;SPACE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;CYL&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;RLSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;            
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;IN&lt;/span&gt;      &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;MYINPUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt; &lt;span class="ss"&gt;:LRECL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mo"&gt;05&lt;/span&gt;                 
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;OUT1&lt;/span&gt;    &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;MYOUT1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;  &lt;span class="ss"&gt;:LRECL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;                 
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;OUT2&lt;/span&gt;    &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;MYOUT2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;  &lt;span class="ss"&gt;:LRECL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;                 
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;TOOLIN&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;                                              
  &lt;span class="no"&gt;COPY&lt;/span&gt; &lt;span class="no"&gt;FROM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;IN&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;TO&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;OUT1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="no"&gt;USING&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;CTL1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                     
  &lt;span class="no"&gt;COPY&lt;/span&gt; &lt;span class="no"&gt;FROM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;IN&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;TO&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;OUT2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="no"&gt;USING&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;CTL2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                     
&lt;span class="sr"&gt;/*                                                          &lt;/span&gt;
&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;CTL1CNTL&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;                   &lt;span class="ss"&gt;:BUILD&lt;/span&gt; &lt;span class="no"&gt;OUTPUT1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;LRECL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
  &lt;span class="no"&gt;OUTFIL&lt;/span&gt; &lt;span class="no"&gt;FNAMES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;OUT1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;BUILD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                      
&lt;span class="sr"&gt;/*                                                          &lt;/span&gt;
&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;CTL2CNTL&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;                   &lt;span class="ss"&gt;:BUILD&lt;/span&gt; &lt;span class="no"&gt;OUTPUT2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;LRECL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
  &lt;span class="no"&gt;OUTFIL&lt;/span&gt; &lt;span class="no"&gt;FNAMES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;OUT2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;BUILD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     
&lt;span class="sr"&gt;/*      &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="z/OS"></category><category term="ICETOOL"></category></entry><entry><title>SORT: JOINKEY 文件连接</title><link href="http://mainframer.github.io/articles/SORT:%20JOINKEY%20%E6%96%87%E4%BB%B6%E8%BF%9E%E6%8E%A5.html" rel="alternate"></link><updated>2012-07-29T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-07-29:articles/SORT: JOINKEY 文件连接.html</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;STEP002&lt;/span&gt; &lt;span class="no"&gt;EXEC&lt;/span&gt;  &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SYNCSORT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;REGION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4096&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;COND&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;NE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;        
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSOUT&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                       
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSPRINT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                      
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTJNF1&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;FILE1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;                            
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTJNF2&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;FILE2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;                            
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTOUT&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;JOINOUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;                          
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSIN&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;                                                 
  &lt;span class="no"&gt;JOINKEYS&lt;/span&gt; &lt;span class="no"&gt;FILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;F1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;FIELDS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                            
  &lt;span class="no"&gt;JOINKEYS&lt;/span&gt; &lt;span class="no"&gt;FILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;F2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;FIELDS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                            
  &lt;span class="no"&gt;REFORMAT&lt;/span&gt; &lt;span class="no"&gt;FIELDS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;F1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="ss"&gt;F2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                           
  &lt;span class="no"&gt;SORT&lt;/span&gt; &lt;span class="no"&gt;FIELDS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;CH&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                                     
  &lt;span class="no"&gt;SUM&lt;/span&gt; &lt;span class="no"&gt;FIELDS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;NONE&lt;/span&gt;                                            
&lt;span class="sr"&gt;/*                                                           &lt;/span&gt;
&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="o"&gt;/*&lt;/span&gt;                                                          
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;FILE1&lt;/em&gt;和&lt;em&gt;FILE2&lt;/em&gt;必须按key值sort好，这里Join的key为前5个字符，结果只保留所有FILE1的KEY值。输出的格式为File1的前5位+File2第6开始的35位。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SUM FIELDS=NONE&lt;/p&gt;
&lt;p&gt;用于去掉KEY值重复的那些记录。&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="SORT"></category><category term="JOINKEY"></category></entry><entry><title>SORT:VB变长转FB定长,输出对齐</title><link href="http://mainframer.github.io/articles/SORT:VB%E5%8F%98%E9%95%BF%E8%BD%ACFB%E5%AE%9A%E9%95%BF,%E8%BE%93%E5%87%BA%E5%AF%B9%E9%BD%90.html" rel="alternate"></link><updated>2012-07-25T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-07-25:articles/SORT:VB变长转FB定长,输出对齐.html</id><summary type="html">&lt;p&gt;最近接触的项目，用的SORT的地方较多，准备写几篇sort的:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;STEP001&lt;/span&gt;  &lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SYNCSORT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;REGION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4096&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;                      
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSOUT&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                        
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSPRINT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                        
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTIN&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SORTIN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;                           
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTOUT&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="no"&gt;SORTOUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;NEW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;PASS&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;                   
&lt;span class="sr"&gt;//&lt;/span&gt;            &lt;span class="no"&gt;DCB&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;DSORG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;PS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;RECFM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;FB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;LRECL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;BLKSIZE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;      
&lt;span class="sr"&gt;//&lt;/span&gt;            &lt;span class="no"&gt;UNIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SYSDA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;SPACE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;CYL&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;RLSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSIN&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;                                                   
  &lt;span class="no"&gt;SORT&lt;/span&gt; &lt;span class="no"&gt;FIELDS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;COPY&lt;/span&gt;                                             
  &lt;span class="no"&gt;INCLUDE&lt;/span&gt; &lt;span class="no"&gt;COND&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;CH&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;EQ&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                                
  &lt;span class="no"&gt;OUTFIL&lt;/span&gt; &lt;span class="no"&gt;VTOF&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                                 
  &lt;span class="no"&gt;BUILD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;JFY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SHIFT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;LEFT&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;41&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="sr"&gt;/*                                                             &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;SORTIN&lt;/code&gt;是&lt;code&gt;LRECL=4000&lt;/code&gt;的VB格式，&lt;code&gt;SORTOUT&lt;/code&gt;是&lt;code&gt;LRECL=80&lt;/code&gt;的FB格式。Sort条件是第1位为'B'。输出格式：对于SORTIN中所有符合第1位为'B'的那些record，分别取其第2位开始的15位(左对齐),8开始的4位，37开始的3位，96开始的20位，118开始的2位。再加上36个末尾空格，组装成80长度的输出。&lt;/p&gt;</summary><category term="z/OS"></category><category term="SORT"></category><category term="VB FB"></category></entry><entry><title>PLI 动态数组的例子</title><link href="http://mainframer.github.io/articles/PLI%20%E5%8A%A8%E6%80%81%E6%95%B0%E7%BB%84%E7%9A%84%E4%BE%8B%E5%AD%90.html" rel="alternate"></link><updated>2012-06-14T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-06-14:articles/PLI 动态数组的例子.html</id><summary type="html">&lt;p&gt;新写了一个&lt;code&gt;PL/I&lt;/code&gt;程序，需要在程序里面用到动态数组来提高效率，所以总结了一下&lt;code&gt;PL/I&lt;/code&gt;中动态数组&lt;em&gt;(Dynamic Array)&lt;/em&gt;的用法：&lt;br /&gt;
&lt;em&gt;1&lt;/em&gt;.申明一个Controlled的数组叫做&lt;code&gt;WT_TMPARRAY_INFO&lt;/code&gt;,此时并不知道该数组的长度:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;DCL&lt;/span&gt;  &lt;span class="no"&gt;INPUTFIL&lt;/span&gt; &lt;span class="no"&gt;FILE&lt;/span&gt; &lt;span class="no"&gt;RECORD&lt;/span&gt; &lt;span class="no"&gt;INPUT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="no"&gt;DCL&lt;/span&gt;  &lt;span class="no"&gt;TMPARRAY_CTR&lt;/span&gt;         &lt;span class="no"&gt;FIXED&lt;/span&gt; &lt;span class="no"&gt;BIN&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="no"&gt;INIT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;                             
&lt;span class="no"&gt;DCL&lt;/span&gt;  &lt;span class="no"&gt;TMPARRAY_SUB&lt;/span&gt;         &lt;span class="no"&gt;FIXED&lt;/span&gt; &lt;span class="no"&gt;BIN&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="no"&gt;INIT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="no"&gt;DCL&lt;/span&gt; &lt;span class="mo"&gt;01&lt;/span&gt; &lt;span class="no"&gt;TMPARRAY_RECORD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                                        
        &lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;INPUT_CUR&lt;/span&gt;     &lt;span class="no"&gt;CHAR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mo"&gt;03&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;             &lt;span class="no"&gt;INIT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;                          
        &lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;INPUT_ACCT&lt;/span&gt;    &lt;span class="no"&gt;CHAR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mo"&gt;05&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;             &lt;span class="no"&gt;INIT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 

&lt;span class="sr"&gt;/*******定义未知长度的动态数组WT_TMPARRAY_INFO*************************/&lt;/span&gt;
&lt;span class="no"&gt;DCL&lt;/span&gt; &lt;span class="mo"&gt;01&lt;/span&gt; &lt;span class="no"&gt;WT_TMPARRAY_INFO&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;CONTROLLED&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                         
        &lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;WT_TMP_CUR&lt;/span&gt;  &lt;span class="no"&gt;CHAR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mo"&gt;03&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;             &lt;span class="no"&gt;INIT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;                          
        &lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;WT_TMP_ACCT&lt;/span&gt; &lt;span class="no"&gt;CHAR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mo"&gt;05&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;             &lt;span class="no"&gt;INIT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;2&lt;/em&gt;.一旦得知了数组需要的长度，即可为它allocate空间。数组的长度可以是外部文件传进来，也可以是你程序中逻辑计算得到，这个无所谓哪里来的,只要赋给变量&lt;code&gt;TMPARRAY_CTR&lt;/code&gt;就好了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ALLOCATE WT_TMPARRAY_INFO (TMPARRAY_CTR); &lt;/p&gt;
&lt;p&gt;&lt;em&gt;3&lt;/em&gt;.分配了空间之后即可初始化数组，给其赋值。
&lt;code&gt;rubyDO TMPARRAY_SUB = 1 TO TMPARRAY_CTR;                                     
          READ FILE(INPUTFIL) INTO (TMPARRAY_RECORD);                           
          WT_TMP_CUR(TMPARRAY_SUB)  = INPUT_CUR;                                  
          WT_TMP_ACCT(TMPARRAY_SUB) = INPUT_ACCT; 
END;&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="PLI"></category><category term="动态数组"></category></entry><entry><title>IBM DebugTool: 主动终止调试</title><link href="http://mainframer.github.io/articles/IBM%20DebugTool:%20%E4%B8%BB%E5%8A%A8%E7%BB%88%E6%AD%A2%E8%B0%83%E8%AF%95.html" rel="alternate"></link><updated>2012-06-03T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-06-03:articles/IBM DebugTool: 主动终止调试.html</id><summary type="html">&lt;p&gt;在debug程序的过程中，如果已经知道了出错的原因不想再继续debug下去，但是又不希望按PF9使程序继续正常执行完(因为这样程序会把你辛辛苦苦造好的测试数据给消耗掉)。这时候，你可以在&lt;code&gt;COMMAND&lt;/code&gt;栏输入：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;trigger overflow&lt;/p&gt;
&lt;p&gt;这样程序就会被当成正常溢出抛异常处理，你的测试数据就不会被消耗掉。除了&lt;code&gt;overflow&lt;/code&gt;，其他异常终止的event也可以，比如数据转换异常这样的event。&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="Debug Tool"></category></entry><entry><title>CICS中查看TSQ的命令:CEBR</title><link href="http://mainframer.github.io/articles/CICS%E4%B8%AD%E6%9F%A5%E7%9C%8BTSQ%E7%9A%84%E5%91%BD%E4%BB%A4:CEBR.html" rel="alternate"></link><updated>2012-05-27T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-05-27:articles/CICS中查看TSQ的命令:CEBR.html</id><summary type="html">&lt;p&gt;可以用CEBR这个transaction来查看和删除TSQ信息。这里:   &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CEBR#0VJ&lt;/code&gt;是&lt;em&gt;TSQ&lt;/em&gt;的名字;  &lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Z300&lt;/code&gt; 是当前&lt;em&gt;CICS region&lt;/em&gt;的名字。&lt;br /&gt;
```ruby  CEBR  TSQ CEBR#0VJ         SYSID Z300 REC     1 OF     0    COL     1 OF     0
  ENTER COMMAND ===&amp;gt;                                                          &lt;br /&gt;
&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;  TOP OF QUEUE  &lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;*&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*  BOTTOM OF QUEUE  &lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;*&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TS QUEUE CEBR#0VJ         DOES NOT EXIST                                     &lt;br /&gt;
 PF1 : HELP                PF2 : SWITCH HEX/CHAR     PF3 : TERMINATE BROWSE   &lt;br /&gt;
 PF4 : VIEW TOP            PF5 : VIEW BOTTOM         PF6 : REPEAT LAST FIND   &lt;br /&gt;
 PF7 : SCROLL BACK HALF    PF8 : SCROLL FORWARD HALF PF9 : UNDEFINED          &lt;br /&gt;
 PF10: SCROLL BACK FULL    PF11: SCROLL FORWARD FULL PF12: UNDEFINED          &lt;br /&gt;
```&lt;/p&gt;
&lt;p&gt;请查看IBM相关链接: &lt;br /&gt;
&lt;a href="http://publib.boulder.ibm.com/infocenter/cicsts/v3r2/index.jsp?topic=%2Fcom.ibm.cics.ts.doc%2Fdfha7%2Ftransactions%2Fcebr%2Fdfha71u.html"&gt;http://publib.boulder.ibm.com/infocenter/cicsts/v3r2/index.jsp?topic=%2Fcom.ibm.cics.ts.doc%2Fdfha7%2Ftransactions%2Fcebr%2Fdfha71u.html&lt;/a&gt;&lt;/p&gt;</summary><category term="TSQ"></category><category term="CEBR"></category></entry><entry><title>ISPF中Shift+PageUp和UNDO的区别</title><link href="http://mainframer.github.io/articles/ISPF%E4%B8%ADShift+PageUp%E5%92%8CUNDO%E7%9A%84%E5%8C%BA%E5%88%AB.html" rel="alternate"></link><updated>2012-05-15T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-05-15:articles/ISPF中Shift+PageUp和UNDO的区别.html</id><summary type="html">&lt;p&gt;两者都是撤销，相当于windows下的&lt;code&gt;'Ctrl+z'&lt;/code&gt;。但分工不同，&lt;code&gt;Shift+PageUp&lt;/code&gt;只能撤销未按回车之前的修改动作，对于按了回车就无力回天了。&lt;br /&gt;
而UNDO负责的是撤销回车之后的修改动作，请注意务必要事先用命令&lt;code&gt;'Rec on'&lt;/code&gt;打开&lt;em&gt;ISPF&lt;/em&gt;的&lt;em&gt;recovery&lt;/em&gt;开关。&lt;/p&gt;</summary><category term="Shift+PageUp"></category></entry><entry><title>TSO重新登录命令</title><link href="http://mainframer.github.io/articles/TSO%E9%87%8D%E6%96%B0%E7%99%BB%E5%BD%95%E5%91%BD%E4%BB%A4.html" rel="alternate"></link><updated>2012-05-04T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-05-04:articles/TSO重新登录命令.html</id><summary type="html">&lt;p&gt;有时候TSO异常退出，而服务器端进程还没kill掉，于是在你尝试再次登录的时候，返回提示：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“already logged on to system IKJ56400A ENTER LOGON OR LOGOFF-”&lt;/p&gt;
&lt;p&gt;用命令告诉远程主控端你要reconnect。 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;解决办法&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;logon yourUID recon
&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="TSO"></category><category term="IKJ56400A"></category></entry><entry><title>SOME INPUT DATA IGNORE</title><link href="http://mainframer.github.io/articles/SOME%20INPUT%20DATA%20IGNORE.html" rel="alternate"></link><updated>2012-05-03T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-05-03:articles/SOME INPUT DATA IGNORE.html</id><summary type="html">&lt;p&gt;在编辑dataset的时候如果右上角提示&lt;code&gt;SOME INPUT DATA IGNORE&lt;/code&gt;,请记得把每行末尾的行号关闭: &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NUM OFF&lt;/p&gt;
&lt;p&gt;否则，后面8位就是行号，将此文件作为程序的input的时候就危险了!&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="z/OS"></category></entry><entry><title>S000 U0004 ABEND ERROR</title><link href="http://mainframer.github.io/articles/S000%20U0004%20ABEND%20ERROR.html" rel="alternate"></link><updated>2012-04-30T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-04-30:articles/S000 U0004 ABEND ERROR.html</id><summary type="html">&lt;p&gt;遇到了&lt;code&gt;'S000 U0004 ABEND ERROR'&lt;/code&gt;错误。 &lt;br /&gt;
一如既往地分析dump，发现是由于我在JCL里面添加了&lt;code&gt;'PARM='TEST(ALL,,,VTAM%IBMUSER:)'&lt;/code&gt;的debug参数，而我要debug的程序的&lt;code&gt;loadmodule&lt;/code&gt;不在test环境里面，导致JCL试图去debug生产环境的&lt;em&gt;loadmodule&lt;/em&gt;，抛出&lt;code&gt;'S000 U0004‘&lt;/code&gt;错误，应该是&lt;em&gt;access vialation&lt;/em&gt;之类的错误吧,修改完&lt;em&gt;loadmodule&lt;/em&gt;的路径就好了。&lt;/p&gt;</summary><category term="S000 U0004"></category></entry><entry><title>No space in directory</title><link href="http://mainframer.github.io/articles/No%20space%20in%20directory.html" rel="alternate"></link><updated>2012-04-23T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-04-23:articles/No space in directory.html</id><summary type="html">&lt;p&gt;在一个pds下面&lt;em&gt;create member&lt;/em&gt;的时候右上角出现错误：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;No space in directory&lt;/p&gt;
&lt;p&gt;按PF1,提示：  &lt;/p&gt;
&lt;p&gt;PDS directory is full, allocate more directory blocks.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5&gt;错误原因：当前PDS下面所容纳的member数量已经达到最大值了。用'I' 查看PDS的信息：&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;Current&lt;/span&gt; &lt;span class="no"&gt;Allocation&lt;/span&gt;             
  &lt;span class="no"&gt;Allocated&lt;/span&gt; &lt;span class="n"&gt;cylinders&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;       
  &lt;span class="no"&gt;Allocated&lt;/span&gt; &lt;span class="n"&gt;extents&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;       
  &lt;span class="no"&gt;Maximum&lt;/span&gt; &lt;span class="n"&gt;dir&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;blocks&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;      


 &lt;span class="no"&gt;Current&lt;/span&gt; &lt;span class="no"&gt;Utilization&lt;/span&gt;            
  &lt;span class="no"&gt;Used&lt;/span&gt; &lt;span class="n"&gt;cylinders&lt;/span&gt;  &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;       
  &lt;span class="no"&gt;Used&lt;/span&gt; &lt;span class="n"&gt;extents&lt;/span&gt;  &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;       
  &lt;span class="no"&gt;Used&lt;/span&gt; &lt;span class="n"&gt;dir&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;blocks&lt;/span&gt;  &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;      
  &lt;span class="no"&gt;Number&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;members&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;59&lt;/span&gt;      
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;原来，每个blocks可以有6个dir,于是PDS里面最多容纳的member数量= &lt;code&gt;(6 x no.of directory blocks)-1&lt;/code&gt; &lt;/p&gt;
&lt;h5&gt;上网搜索了下更详细的：&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;The number of member entries that fit in a directory block is as follows: &lt;br /&gt;
(1) For a data set with ISPF statistics: 6 entries per block.&lt;br /&gt;
(2) For a data set without ISPF statistics: 21 entries per block.&lt;br /&gt;
(3) For a load module data set: 4 to 7 entries depending upon.   &lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="z/OS"></category></entry><entry><title>CEE3250C S806 R=00000004</title><link href="http://mainframer.github.io/articles/CEE3250C%20S806%20%20R=00000004.html" rel="alternate"></link><updated>2012-04-11T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-04-11:articles/CEE3250C S806  R=00000004.html</id><summary type="html">&lt;p&gt;新写了个程序，JCL提交完出现错误:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;CEE3250C The system or user abend S806  R=00000004 was issued.    &lt;/p&gt;
&lt;p&gt;分析dump，发现原因是:程序不在loadlib里面 &lt;code&gt;"load module is not found in the library"&lt;/code&gt;.忘记promote程序到相应环境了!&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="CEE3250C S806"></category></entry><entry><title>PLI打印出PIC类型输出</title><link href="http://mainframer.github.io/articles/PLI%E6%89%93%E5%8D%B0%E5%87%BAPIC%E7%B1%BB%E5%9E%8B%E8%BE%93%E5%87%BA.html" rel="alternate"></link><updated>2012-04-01T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-04-01:articles/PLI打印出PIC类型输出.html</id><summary type="html">&lt;p&gt;使用PLI打印输出信息，最常见的是:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;PUT&lt;/span&gt; &lt;span class="no"&gt;SKIP&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;EDIT&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;CODE = &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;ERR_CODE&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这里是打印PIC类型的输出，不怎么常用。今天用到了，所以记在这:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;PUT&lt;/span&gt; &lt;span class="no"&gt;EDIT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ACCOUNT PROCESSED : &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;ACCOUNT_CTR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;      
                  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SKIP&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;COL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;999999999&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 

&lt;span class="no"&gt;PUT&lt;/span&gt; &lt;span class="no"&gt;SKIP&lt;/span&gt; &lt;span class="no"&gt;FILE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;OUTFILE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;EDIT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;CHENGDU: &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;SOURCE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ZZ,ZZZV.ZZ&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="PLI"></category><category term="PIC"></category></entry><entry><title>BLKSIZE=0,DSORG=PS</title><link href="http://mainframer.github.io/articles/BLKSIZE=0,DSORG=PS.html" rel="alternate"></link><updated>2012-03-13T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-03-13:articles/BLKSIZE=0,DSORG=PS.html</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTOUT&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="no"&gt;IBNRDAT0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;NEW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;PASS&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;            
&lt;span class="sr"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;DCB&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;DSORG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;PS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;RECFM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;FB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;LRECL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;53&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;BLKSIZE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="sr"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;UNIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SYSDA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;SPACE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;CYL&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;RLSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如上，始终用&lt;code&gt;BLKSIZE=0&lt;/code&gt;，让系统为JOB分配最优的BLKSIZE。这是一个好习惯!&lt;/p&gt;</summary><category term="BLKSIZE=0"></category></entry><entry><title>JCL发送EMAIL</title><link href="http://mainframer.github.io/articles/JCL%E5%8F%91%E9%80%81EMAIL.html" rel="alternate"></link><updated>2012-03-13T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-03-13:articles/JCL发送EMAIL.html</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt; &lt;span class="no"&gt;JOB&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;                &lt;span class="no"&gt;A1011000010TEST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;CLASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        
&lt;span class="sr"&gt;//&lt;/span&gt;        &lt;span class="no"&gt;MSGCLASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;REGION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;                                   
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;                                                              
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;STEP01&lt;/span&gt;   &lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IEBGENER&lt;/span&gt;  
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSOUT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;                                                                          
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSUT1&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="o"&gt;*&lt;/span&gt;                                                 
&lt;span class="no"&gt;HELO&lt;/span&gt; &lt;span class="no"&gt;MVS&lt;/span&gt;                                                         
&lt;span class="no"&gt;MAIL&lt;/span&gt; &lt;span class="ss"&gt;FROM&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="no"&gt;XIAOWONIU&lt;/span&gt;&lt;span class="vi"&gt;@SINA&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CN&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;                               
&lt;span class="no"&gt;RCPT&lt;/span&gt; &lt;span class="ss"&gt;TO&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="no"&gt;XIAOWONIU&lt;/span&gt;&lt;span class="vi"&gt;@SINA&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CN&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;                                  
&lt;span class="no"&gt;DATA&lt;/span&gt;                                                             
&lt;span class="ss"&gt;FROM&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="no"&gt;XIAOWONIU&lt;/span&gt;&lt;span class="vi"&gt;@SINA&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CN&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;                                       
&lt;span class="ss"&gt;TO&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="no"&gt;XIAOWONIU&lt;/span&gt;&lt;span class="vi"&gt;@SINA&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CN&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;                                         
&lt;span class="ss"&gt;SUBJECT&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;JOB&lt;/span&gt; &lt;span class="no"&gt;IBMUSERJ&lt;/span&gt; &lt;span class="no"&gt;HAS&lt;/span&gt; &lt;span class="no"&gt;COMPLETED&lt;/span&gt; &lt;span class="no"&gt;SUCCESSFULLY&lt;/span&gt;                      
&lt;span class="no"&gt;START&lt;/span&gt; &lt;span class="no"&gt;OF&lt;/span&gt; &lt;span class="no"&gt;MESSAGE&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;                                              
   &lt;span class="o"&gt;***&lt;/span&gt;    &lt;span class="no"&gt;DO&lt;/span&gt; &lt;span class="no"&gt;NOT&lt;/span&gt; &lt;span class="no"&gt;REPLY&lt;/span&gt; &lt;span class="no"&gt;TO&lt;/span&gt; &lt;span class="no"&gt;THIS&lt;/span&gt; &lt;span class="no"&gt;MESSAGE&lt;/span&gt;    &lt;span class="o"&gt;***&lt;/span&gt;   
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSUT2&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DEST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;YOURDEST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;IPSMTP&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                   
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSPRINT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                           
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSIN&lt;/span&gt;    &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DUMMY&lt;/span&gt;       
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这是一个JCL通过SMTP协议发送Email的例子，如果需要发送附件，可以再深入研究下!&lt;/p&gt;</summary><category term="JCL email"></category></entry><entry><title>使用UNIT=(SYSDA,20)</title><link href="http://mainframer.github.io/articles/%E4%BD%BF%E7%94%A8UNIT=(SYSDA,20).html" rel="alternate"></link><updated>2012-03-10T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-03-10:articles/使用UNIT=(SYSDA,20).html</id><summary type="html">&lt;p&gt;好几次&lt;em&gt;production abend&lt;/em&gt;都是因为JCL中分配的dataset太大，恰好一个volume上面的剩余空间都分配完了。&lt;br /&gt;
这里是DBA给的建议：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"Always code UNIT=(SYSDA,20) for all disk datasets.It will allow the dataset to go to multiple volumes automatically."
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="mo"&gt;000001&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;STEP001&lt;/span&gt;  &lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SYNCSORT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;REGION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4096&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;COND&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;NE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                  
&lt;span class="mo"&gt;000002&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSOUT&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                                
&lt;span class="mo"&gt;000003&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSPRINT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;                                                
&lt;span class="mo"&gt;000004&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTIN&lt;/span&gt;   &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SYSDA20&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;                   
&lt;span class="mo"&gt;000005&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;         &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SYSDA20&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TEST2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;                   
&lt;span class="mo"&gt;000006&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTWK01&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;UNIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SYSDA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;SPACE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;CYL&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;RLSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                
&lt;span class="mo"&gt;000007&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTWK02&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;UNIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SYSDA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;SPACE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;CYL&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;RLSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                
&lt;span class="mo"&gt;00000&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SORTOUT&lt;/span&gt;  &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="no"&gt;SORTOUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;NEW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;PASS&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;                          
&lt;span class="mo"&gt;00000&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;DCB&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;DSORG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;PS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;RECFM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;FB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;LRECL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;BLKSIZE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;             
&lt;span class="mo"&gt;000000&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;             &lt;span class="no"&gt;UNIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SYSDA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;SPACE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;CYL&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;RLSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                
&lt;span class="mo"&gt;000011&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSIN&lt;/span&gt;    &lt;span class="no"&gt;DD&lt;/span&gt;  &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CNTL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;CNTLCD1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;                      
&lt;span class="mo"&gt;000012&lt;/span&gt; &lt;span class="o"&gt;//*&lt;/span&gt;                                                                    
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;所以，就当成标准吧，把&lt;code&gt;UNIT=SYSDA&lt;/code&gt;都改成&lt;code&gt;UNIT=(SYSDA,20)&lt;/code&gt;。&lt;/p&gt;</summary><category term="SYSDA"></category></entry><entry><title>ABENDED S000 U4088 REASON CODE=000003EC</title><link href="http://mainframer.github.io/articles/ABENDED%20S000%20U4088%20REASON%20CODE=000003EC.html" rel="alternate"></link><updated>2012-03-05T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-03-05:articles/ABENDED S000 U4088 REASON CODE=000003EC.html</id><summary type="html">&lt;p&gt;Sub一个job遇到错误:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ABENDED S000 U4088 REASON CODE=000003EC
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5&gt;Abend原因:&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;The U4088 RC=3EC abend in CEEPLPKA occurred because C:D 4.8.00 ran out of below the line storage
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5&gt;解决办法:&lt;/h5&gt;
&lt;p&gt;Change region to &lt;strong&gt;REGION=0M&lt;/strong&gt; &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="mo"&gt;000001&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt; &lt;span class="no"&gt;JOB&lt;/span&gt;  &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="no"&gt;RQ00XXXXX&lt;/span&gt;                                &lt;span class="mo"&gt;00010&lt;/span&gt;&lt;span class="no"&gt;TEST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    
&lt;span class="mo"&gt;000002&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;IBMUSER&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;CLASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;MSGCLASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;REGION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;             
&lt;/pre&gt;&lt;/div&gt;</summary><category term="S000 U4088"></category></entry><entry><title>常用的CICS命令</title><link href="http://mainframer.github.io/articles/%E5%B8%B8%E7%94%A8%E7%9A%84CICS%E5%91%BD%E4%BB%A4.html" rel="alternate"></link><updated>2012-03-01T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-03-01:articles/常用的CICS命令.html</id><summary type="html">&lt;p&gt;我们可以在&lt;code&gt;COBOL&lt;/code&gt;，&lt;code&gt;PL/I&lt;/code&gt;，&lt;code&gt;Assembler&lt;/code&gt;等应用程序中写&lt;code&gt;CICS&lt;/code&gt;命令，在&lt;code&gt;COBOL&lt;/code&gt;和&lt;code&gt;PL/I&lt;/code&gt;中，格式分别如下所示：&lt;/p&gt;
&lt;h5&gt;COBOL&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;CICS&lt;/span&gt; &lt;span class="n"&gt;function&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]]...&lt;/span&gt; &lt;span class="k"&gt;END&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;EXEC&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;PL/I&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;CICS&lt;/span&gt; &lt;span class="n"&gt;function&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]]...&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;末尾有分号&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;CICS的命令很多，不过最常用的也就是如下几个。所以，只要熟悉这几个的用法就好了，其他的当做了解即可，需要的时候再去查
&lt;a href="http://publib.boulder.ibm.com/infocenter/cicsts/v4r1/index.jsp?topic=%2Fcom.ibm.cics.ts.applicationprogramming.doc%2Fcommands%2Fdfhp4_abend.html"&gt;IBM CICS command summary&lt;/a&gt;或者CICS手册。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;CICS&lt;/span&gt; &lt;span class="no"&gt;ABEND&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="no"&gt;ABCODE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;CICS&lt;/span&gt; &lt;span class="no"&gt;ASKTIME&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="no"&gt;ABSTIME&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;CICS&lt;/span&gt; &lt;span class="no"&gt;ASSIGN&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="no"&gt;OPID&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;CICS&lt;/span&gt; &lt;span class="no"&gt;RETURN&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="no"&gt;TRANSID&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;CICS&lt;/span&gt; &lt;span class="no"&gt;HANDLE&lt;/span&gt; &lt;span class="no"&gt;CONDITION&lt;/span&gt;
&lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;CICS&lt;/span&gt; &lt;span class="no"&gt;IGNORE&lt;/span&gt; &lt;span class="no"&gt;CONDITION&lt;/span&gt;
&lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;CICS&lt;/span&gt; &lt;span class="no"&gt;READQ&lt;/span&gt; &lt;span class="no"&gt;TS&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="no"&gt;QUEUE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;CICS&lt;/span&gt; &lt;span class="no"&gt;WRITEQ&lt;/span&gt; &lt;span class="no"&gt;TS&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="no"&gt;QUEUE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;CICS&lt;/span&gt; &lt;span class="no"&gt;DELETEQ&lt;/span&gt; &lt;span class="no"&gt;TS&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="no"&gt;QUEUE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;CICS&lt;/span&gt; &lt;span class="no"&gt;RECEIVE&lt;/span&gt; &lt;span class="no"&gt;MAP&lt;/span&gt;
&lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;CICS&lt;/span&gt; &lt;span class="no"&gt;SEND&lt;/span&gt; &lt;span class="no"&gt;MAP&lt;/span&gt;
&lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;CICS&lt;/span&gt; &lt;span class="no"&gt;XCTL&lt;/span&gt; &lt;span class="no"&gt;PROGRAM&lt;/span&gt;
&lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;CICS&lt;/span&gt; &lt;span class="no"&gt;LINK&lt;/span&gt; &lt;span class="no"&gt;PROGRAM&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="CICS命令"></category></entry><entry><title>PL/I编译器版本</title><link href="http://mainframer.github.io/articles/PLI%E7%BC%96%E8%AF%91%E5%99%A8%E7%89%88%E6%9C%AC.html" rel="alternate"></link><updated>2012-02-02T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-02-02:articles/PLI编译器版本.html</id><summary type="html">&lt;p&gt;PL/I编译器的版本，如下所示：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;Product&lt;/span&gt;        &lt;span class="no"&gt;Product&lt;/span&gt; &lt;span class="nb"&gt;name&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;                        &lt;span class="no"&gt;Compiler&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;signature&amp;quot;&lt;/span&gt;   &lt;span class="no"&gt;Module&lt;/span&gt; &lt;span class="n"&gt;prefix&lt;/span&gt; 
&lt;span class="mi"&gt;360&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;NL&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;511&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;360&lt;/span&gt; &lt;span class="no"&gt;OS&lt;/span&gt; &lt;span class="no"&gt;PL&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;         &lt;span class="s1"&gt;&amp;#39;   &amp;#39;&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;&lt;span class="no"&gt;IEM&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;IHE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;IHL&lt;/span&gt;
&lt;span class="mi"&gt;5734&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;PL1&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="no"&gt;OS&lt;/span&gt; &lt;span class="no"&gt;PL&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="no"&gt;OPTIMIZING&lt;/span&gt; &lt;span class="no"&gt;COMPILER&lt;/span&gt; &lt;span class="no"&gt;V1&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;       &lt;span class="mi"&gt;5734&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;PL1&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;   &lt;span class="err"&gt; &lt;/span&gt;  &lt;span class="no"&gt;IEL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;IBM&lt;/span&gt;
&lt;span class="mi"&gt;5734&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;PL2&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="no"&gt;OS&lt;/span&gt; &lt;span class="no"&gt;PL&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="no"&gt;CHECKOUT&lt;/span&gt; &lt;span class="no"&gt;COMPILER&lt;/span&gt;
&lt;span class="mi"&gt;5734&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;PL3&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="no"&gt;OS&lt;/span&gt; &lt;span class="no"&gt;PL&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="no"&gt;Opt&lt;/span&gt; &lt;span class="no"&gt;Comp&lt;/span&gt; &lt;span class="no"&gt;Lib&lt;/span&gt; &lt;span class="no"&gt;Kanji&lt;/span&gt; &lt;span class="no"&gt;Name&lt;/span&gt; &lt;span class="no"&gt;Support&lt;/span&gt;
&lt;span class="mi"&gt;5668&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;909&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="no"&gt;OS&lt;/span&gt; &lt;span class="no"&gt;PL&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="no"&gt;V2&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;COMP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;LIB&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;TEST&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="mi"&gt;5668&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;910&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="no"&gt;OS&lt;/span&gt; &lt;span class="no"&gt;PL&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="no"&gt;V2&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;COMP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;LIB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;  &lt;span class="mi"&gt;5668&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;910&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;&lt;span class="no"&gt;IEL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;IBM&lt;/span&gt;
&lt;span class="mi"&gt;5668&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;911&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="no"&gt;OS&lt;/span&gt; &lt;span class="no"&gt;PL&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="no"&gt;V2&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;Library&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;IBM&lt;/span&gt;
&lt;span class="mi"&gt;5688&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;235&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="no"&gt;PL&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="no"&gt;MVS&lt;/span&gt; &lt;span class="no"&gt;AND&lt;/span&gt; &lt;span class="no"&gt;VM&lt;/span&gt; &lt;span class="no"&gt;V1&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;   &lt;span class="mi"&gt;5688&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;235&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;&lt;span class="no"&gt;IEL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;IBM&lt;/span&gt;
&lt;span class="mi"&gt;5655&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;B22&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="no"&gt;VisualAge&lt;/span&gt; &lt;span class="no"&gt;PL&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="no"&gt;OS&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;390&lt;/span&gt; &lt;span class="no"&gt;V2&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;     &lt;span class="mi"&gt;5655&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;B22&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;  &lt;span class="no"&gt;IEL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;IBM&lt;/span&gt;
&lt;span class="mi"&gt;5655&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;H31&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="no"&gt;Enterprise&lt;/span&gt; &lt;span class="no"&gt;PL&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="no"&gt;OS&lt;/span&gt; &lt;span class="no"&gt;V3&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;    &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="mi"&gt;5655&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;H31&lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt; &lt;/span&gt;  &lt;span class="err"&gt; &lt;/span&gt; &lt;span class="err"&gt;  &lt;/span&gt;&lt;span class="no"&gt;IBM&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这里是原链接地址：&lt;a href="http://gsf-soft.com/Documents/PRODCODES.shtml"&gt;http://gsf-soft.com/Documents/PRODCODES.shtml&lt;/a&gt;   &lt;br /&gt;
编译完&lt;code&gt;PL/I&lt;/code&gt;程序之后，在生成的&lt;em&gt;loadmodule&lt;/em&gt;二进制文件里面查找&lt;code&gt;Compiler signature&lt;/code&gt;(如&lt;code&gt;5655-235&lt;/code&gt;),对照上表即可知道编译器的版本。&lt;/p&gt;</summary><category term="z/OS"></category><category term="PLi编译器"></category></entry><entry><title>用PIC型中间变量解决Fixed赋值溢出abend</title><link href="http://mainframer.github.io/articles/%E7%94%A8PIC%E5%9E%8B%E4%B8%AD%E9%97%B4%E5%8F%98%E9%87%8F%E8%A7%A3%E5%86%B3Fixed%E8%B5%8B%E5%80%BC%E6%BA%A2%E5%87%BAabend.html" rel="alternate"></link><updated>2012-01-11T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2012-01-11:articles/用PIC型中间变量解决Fixed赋值溢出abend.html</id><summary type="html">&lt;p&gt;我在Debug一个PLI程序&lt;code&gt;PRGM000&lt;/code&gt;的时候遇到了一个&lt;code&gt;CEE34A abend&lt;/code&gt;，报的错误信息如下：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You were prompted because the CEE34A condition was raised in your
program.
CEE34A is a severity or class 3 condition.
The operating system has generated the following message:
CEE3210S The system detected a decimal-overflow exception (System
Completion Code=0CA).
The current location is PRGM000 ::&amp;gt; PRGM000 :&amp;gt; 2688.&lt;/p&gt;
&lt;p&gt;不废话，直接上截图：
&lt;img alt="1" src="./../images/CEE3201S-0CA-abend.jpg" /&gt;  &lt;br /&gt;
从图上可以看出，出错的语句是：&lt;/p&gt;
&lt;p&gt;TBL_KEY1.TRADE_DATE = COMM_AREA.TRADE_DATE
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;我们来看二者的定义&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;COMM_AREA.TRADE_DATE&lt;/code&gt;的定义&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="no"&gt;COMM_AREA&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="no"&gt;USER_AREA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="no"&gt;TRADE_DATE&lt;/span&gt; &lt;span class="no"&gt;FIXED&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="sr"&gt;/* 20110901 */&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;TBL_KEY1.TRADE_DATE&lt;/code&gt;的定义
```rubyDCL 1 TBL_KEY1
3 SPARE_CLIENT CHAR(4),
3 IDENT_ID CHAR(9),
3 TRADE_DATE FIXED(7),
3 NUM FIXED(3);&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;所以很明显，发生abend的原因是把一个`FIXED(9)`的值赋给了一个`FIXED(7)`的变量，从而产生了溢出。
###下面是解决办法:
定义一个**PIC类型**的中间变量 **`PIC_TRADE_DATE_9`** 做转换桥梁：  
```ruby
DCL PIC_TRADE_DATE_9 PIC &amp;#39;(9)9&amp;#39; INIT(0);
PIC_TRADE_DATE_9 = COMM_AREA.TRADE_DATE;
(值:020110901)        (值：20110901)
TBL_KEY1.TRADE_DATE = SUBSTR (PIC_TRADE_DATE_9,4,6);
(值：110901)          (值：110901)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;到这里，问题已经得到解决。&lt;/p&gt;</summary><category term="CEE3201S"></category></entry><entry><title>利用SRCHFOR在PDS中搜索字符串</title><link href="http://mainframer.github.io/articles/%E5%88%A9%E7%94%A8SRCHFOR%E5%9C%A8PDS%E4%B8%AD%E6%90%9C%E7%B4%A2%E5%AD%97%E7%AC%A6%E4%B8%B2.html" rel="alternate"></link><updated>2011-12-24T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-12-24:articles/利用SRCHFOR在PDS中搜索字符串.html</id><summary type="html">&lt;p&gt;之前的文章说到了一个叫&lt;code&gt;Mem xxx&lt;/code&gt;  的命令可以用来在一系列PDS中搜索一个名字叫做xxx的member，今天我来说下如何在一个PDS里面所有的member内容当中搜索特定字符串。其实就是利用&lt;code&gt;search-for&lt;/code&gt; 的应用程序，比较常规的方法是道&lt;em&gt;ISPF&lt;/em&gt;的&lt;em&gt;3.14&lt;/em&gt;菜单里面搜索，如下图所示，就是在 &lt;code&gt;"IBMUSER.PROJ.TEST.JCL"&lt;/code&gt;这个PDS里面所有的member内容中，搜索一个叫&lt;strong&gt;"STRING"&lt;/strong&gt;的字符串：
&lt;img alt="1" src="./../images/PDS-SRCHFOR_001.jpg" /&gt;    &lt;br /&gt;
当然，如果你想直接在当前PDS下调用&lt;code&gt;search-for utility&lt;/code&gt;来搜索特定字符串，可以在&lt;code&gt;command line&lt;/code&gt;上输入命令：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;SRCHFOR&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;STRING&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;来在当前PDS下面搜索字符串&lt;strong&gt;”STRING“&lt;/strong&gt;,具体如下面2张截图所示：
&lt;img alt="1" src="./../images/PDS-SRCHFOR_002.jpg" /&gt;      &lt;br /&gt;
&lt;img alt="1" src="./../images/PDS-SRCHFOR_003.jpg" /&gt;      &lt;br /&gt;
如果想同时在多个PDS当中搜索一个字符串，或者多个字符串那么该如何做呢？这时你可能就需要用到JCL来调用&lt;strong&gt;&lt;code&gt;ISRSUPC&lt;/code&gt;&lt;/strong&gt;这个utility了。这个&lt;strong&gt;&lt;code&gt;ISRSUPC&lt;/code&gt;&lt;/strong&gt;的功能可强大多了，具体可以参照下我之前的文章: &amp;lt;&amp;lt;用ISRSUPC在PDS所有member中搜索指定字符串&amp;gt;&amp;gt;，这里不重复了。&lt;/p&gt;</summary><category term="SRCHFOR"></category></entry><entry><title>Job(JCL)返回码</title><link href="http://mainframer.github.io/articles/Job(JCL)%E8%BF%94%E5%9B%9E%E7%A0%81.html" rel="alternate"></link><updated>2011-11-28T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-11-28:articles/Job(JCL)返回码.html</id><summary type="html">&lt;h4&gt;提交JCL最常见的返回码就是&lt;code&gt;0、4、8、12、16&lt;/code&gt;，当然还有&lt;code&gt;ABEND&lt;/code&gt;。&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;&lt;code&gt;CC=0&lt;/code&gt;&lt;/em&gt;  作业正确执行(Executed Successfully) &lt;br /&gt;
&lt;em&gt;&lt;code&gt;CC=4&lt;/code&gt;&lt;/em&gt;  警告 一般不影响作业执行 (Executed Successfully but with warnings) &lt;br /&gt;
&lt;em&gt;&lt;code&gt;CC=8&lt;/code&gt;&lt;/em&gt;  作业可以执行，但执行的不完整 (Error)&lt;br /&gt;
&lt;em&gt;&lt;code&gt;CC=12&lt;/code&gt;&lt;/em&gt; 作业不能执行 (Serious Error)&lt;br /&gt;
&lt;em&gt;&lt;code&gt;CC=16&lt;/code&gt;&lt;/em&gt; 严重错误，中断后续命令的执行(Fatal Error)  &lt;br /&gt;
&lt;em&gt;&lt;code&gt;ABEND&lt;/code&gt;&lt;/em&gt; 作业异常终止 &lt;/p&gt;
&lt;h4&gt;下面是一些常见的JCL ABEND CODES&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;S0C4&lt;/code&gt; Protection Abend.Caused by the subscript being out of range&lt;br /&gt;
&lt;code&gt;S0C5&lt;/code&gt; Addressing Abend.Caused by invalid address specification. i.e. The address points&lt;br /&gt;
to an instruction, control word or data outside the available real storage&lt;br /&gt;
&lt;code&gt;S0C7&lt;/code&gt; Caused by a bad data. i.e. Data exception. When we are moving an alphanumeric field to a numeric computational field this Abend occurs. The result is an Abend failure  &lt;br /&gt;
&lt;code&gt;S222&lt;/code&gt; Caused by a job being cancelled by the operator, due to a request by the program for an unavailable resource.&lt;br /&gt;
&lt;code&gt;S237&lt;/code&gt; Caused by end of volume being encountered.&lt;br /&gt;
&lt;code&gt;S322&lt;/code&gt; Caused when CPU time assigned to the job, job step, or procedure has been exceeded. i.e. Time out error.&lt;br /&gt;
&lt;code&gt;S413&lt;/code&gt; This abend occurs if the DD statement referenced by UNIT=AFF statement is not closed before the DD statement that comes before it.&lt;br /&gt;
&lt;code&gt;S522&lt;/code&gt; Caused when a wait state exceeds an installation-defined time limit.  &lt;br /&gt;
&lt;code&gt;SB37&lt;/code&gt; Caused by lack of sufficient Secondary space&lt;br /&gt;
&lt;code&gt;SD37&lt;/code&gt; Caused by lack of sufficient Primary space&lt;br /&gt;
&lt;code&gt;SE37&lt;/code&gt; Caused by lack of space for PDS (Partitioned data set)&lt;br /&gt;
&lt;code&gt;S722&lt;/code&gt; Too many lines of print.&lt;br /&gt;
&lt;code&gt;S804&lt;/code&gt; Region too small for the program.&lt;br /&gt;
&lt;code&gt;S806&lt;/code&gt; Program not on the library. May need a JOBLIB or STEPLIB.&lt;br /&gt;
&lt;code&gt;S80A&lt;/code&gt; Region too small for the program.&lt;br /&gt;
&lt;code&gt;S913&lt;/code&gt; Security violation.&lt;br /&gt;
&lt;code&gt;SB14&lt;/code&gt; No space in a library directory for this member's name.&lt;br /&gt;
&lt;code&gt;SB37&lt;/code&gt; Insufficient disk space.&lt;br /&gt;
&lt;code&gt;S0C1&lt;/code&gt; Executing a program with an unresolved external reference.&lt;br /&gt;
&lt;code&gt;S042&lt;/code&gt; Privileged Operation Abend.Read/write to unopened file&lt;br /&gt;
&lt;code&gt;S0C6&lt;/code&gt; Specification Abend&lt;br /&gt;
&lt;code&gt;S0CB&lt;/code&gt; Attempting to divide by 0 and not using ON SIZE ERROR&lt;br /&gt;
&lt;code&gt;U1002&lt;/code&gt; Conflicting file attributes. See S013.&lt;br /&gt;
&lt;code&gt;U1005&lt;/code&gt; Executing with modules compiled both with RES and NORES&lt;br /&gt;
&lt;code&gt;U1006&lt;/code&gt; Subscript out of range&lt;br /&gt;
&lt;code&gt;U1017&lt;/code&gt; Missing DD statement in JCL for DISPLAY or ACCEPT verb&lt;br /&gt;
&lt;code&gt;U1020&lt;/code&gt; Problem opening or processing a file.Check the file status.&lt;br /&gt;
&lt;code&gt;U1035&lt;/code&gt; Conflicting DCB parameters. Same as S013.&lt;br /&gt;
&lt;code&gt;U1056&lt;/code&gt; Program didn't close a file before ending&lt;br /&gt;
&lt;code&gt;U4038&lt;/code&gt; COBOL LE intercepted the Abend. Messages in CEEDUMP.  &lt;/p&gt;
&lt;p&gt;Job异常终止(Abend)的原因很多，返回码也是列不完的。上述仅仅是列举了稍微比较常见的abend返回码而已。在遇到具体返回码的时候，还是需要查manual,看job log。当然，如果你所在的公司恰好也安装了类似于MVS/QuickRef的帮助文档，那就再好不过了，只需一个命令：&lt;code&gt;QW xxx&lt;/code&gt;即可随时查看返回码。具体可以参看我之前写的一篇文章：&lt;br /&gt;
&lt;a href="http://flyuphigh.com/mvs-zos-mainframe/batch-jcl-ispf-tso/qw-mvsquickref.html"&gt;QW命令——MVS/QuickRef帮助文档&lt;/a&gt;  。当然，如果没有安装这类的帮助文档，那也没关系，因为任何时候，Google和baidu都是你最好的帮手。&lt;/p&gt;</summary><category term="JCL 返回码"></category></entry><entry><title>利用IBM File Manager查看COPYBOOK</title><link href="http://mainframer.github.io/articles/%E5%88%A9%E7%94%A8IBM%20File%20Manager%E6%9F%A5%E7%9C%8BCOPYBOOK.html" rel="alternate"></link><updated>2011-11-17T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-11-17:articles/利用IBM File Manager查看COPYBOOK.html</id><summary type="html">&lt;p&gt;这篇文章就来说下在大机上如何利用&lt;code&gt;IBM File Manager&lt;/code&gt;来查看&lt;em&gt;copybook&lt;/em&gt;的结构，特别是每个字段的起始位置。  &lt;/p&gt;
&lt;h4&gt;1.在&lt;em&gt;Command&lt;/em&gt;栏输入&lt;code&gt;0;5;1&lt;/code&gt; 设置自动检测语言&lt;/h4&gt;
&lt;p&gt;这样，不论你的copybook是PLI的还是COBOL的，FileManager都能自动检测出来。
&lt;img alt="1" src="./../images/IBMfilemanager-copybook-view_001.jpg" /&gt;&lt;br /&gt;
&lt;img alt="1" src="./../images/IBMfilemanager-copybook-view_002.jpg" /&gt;    &lt;/p&gt;
&lt;h4&gt;2.设置好之后，进入&lt;code&gt;3；13 (Utility-&amp;amp;gt;Copybook)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/IBMfilemanager-copybook-view_003.jpg" /&gt;  &lt;/p&gt;
&lt;h6&gt;这里填写copybook的路径和member名，member栏也可以不写:&lt;/h6&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/IBMfilemanager-copybook-view_004.jpg" /&gt;  &lt;/p&gt;
&lt;h6&gt;接着就能查看copybook内容了，特别是查看某个字段起始位置的时候特别有用。&lt;/h6&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/IBMfilemanager-copybook-view_005.jpg" /&gt;  &lt;/p&gt;
&lt;h6&gt;上面的&lt;code&gt;MYPLICPY&lt;/code&gt;是PLI的copybook，COBOL的这里就不上图了，上图很累的。&lt;/h6&gt;</summary><category term="File Manager"></category><category term="Copybook"></category></entry><entry><title>Changeman的Stage和Checkout</title><link href="http://mainframer.github.io/articles/Changeman%E7%9A%84Stage%E5%92%8CCheckout.html" rel="alternate"></link><updated>2011-11-13T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-11-13:articles/Changeman的Stage和Checkout.html</id><summary type="html">&lt;p&gt;把一个component(比如程序PRGM001)弄到package里面去有两种方法：一是&lt;code&gt;stage&lt;/code&gt;，二是&lt;code&gt;checkout&lt;/code&gt;。&lt;/p&gt;
&lt;h3&gt;Stage&lt;/h3&gt;
&lt;p&gt;所谓的stage就是当生产环境上面没有的，而你要将一个新的component弄到生产上面去的时候用stage。比如生产环境上面没有PRGM001这个程序，如果你最终想把这个程序通过Changeman安装到生产环境，那你就得现在自己的PDS下面建一个名为PRGM001的程序： &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;TESTUID&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PRGMLIB&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;PRGM001&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后stage到changeman里面去，具体做法是在ISPF输入:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;输入你的Package ID,回车 
在Package前面输入命令：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="no"&gt;S1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="1" src="./../images/changeman-01.jpg" /&gt;    &lt;/p&gt;
&lt;h3&gt;Checkout&lt;/h3&gt;
&lt;p&gt;和stage不同，checkout是针对那些已经存在于生产环境里面的components。它们是有版本之分的，比如你要Checkout一个现在已经存在于生产环境的PRGM002,在Package前面输入命令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="no"&gt;C1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="1" src="./../images/changeman-02.jpg" /&gt; &lt;br /&gt;
这里注意一下&lt;strong&gt;SOURCE LIBRARY. &lt;/strong&gt;
&lt;code&gt;SOURCE LIBRARY=0&lt;/code&gt; 说明checkout的是当前生产环境baseline里面的最新版本。
&lt;code&gt;SOURCE LIBRARY=-1&lt;/code&gt;说明checkout的是比当前生产环境baseline旧的一个版本。
以此类推...&lt;br /&gt;
最后，在Package ID前面输入命令&lt;code&gt;S2&lt;/code&gt;，查看package里面所有的components(PRGM001和PRGM002)&lt;/p&gt;</summary><category term="z/OS"></category><category term="Changeman"></category></entry><entry><title>IBM大型机12月16日起支持Windows系统[转载]</title><link href="http://mainframer.github.io/articles/IBM%E5%A4%A7%E5%9E%8B%E6%9C%BA12%E6%9C%8816%E6%97%A5%E8%B5%B7%E6%94%AF%E6%8C%81Windows%E7%B3%BB%E7%BB%9F[%E8%BD%AC%E8%BD%BD].html" rel="alternate"></link><updated>2011-11-08T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-11-08:articles/IBM大型机12月16日起支持Windows系统[转载].html</id><summary type="html">&lt;p&gt;本文来源——http://www.sina.com.cn 2011年11月07日 15:58 新浪科技微博
新浪科技讯 北京时间11月7日下午消息，据美国IT网站ComputerWorld报道，IBM大型机将从今年12月中旬开始支持Windows系统。&lt;/p&gt;
&lt;p&gt;IBM此前就有意在zEnterprise 196大型机中采用Windows系统。根据IBM发布的最新消息，该公司大型机将从今年12月16日起支持Windows管理功能。用户一直希望数据中心有新的功能。当前，有许多基于Windows的应用可支持大型机获取数据，其中就包括IBM制造的许多应用。但此类应用现在必须单独管理。
IBM表示，支持Windows系统将有助于提高大型机企业环境的安全性和速度，同时让用户可以在私人网络上连接系统，避免其他网络问题，实现一体化管理。IBM System z部门业务主管格雷格·洛特科(Greg Lotko)说：“之所以增加对Windows系统的支持，是因为IBM真正认识到这个世界的复杂性。”&lt;/p&gt;
&lt;p&gt;洛特科补充说，从今往后，&lt;code&gt;IBM System z&lt;/code&gt;平台可以支持&lt;code&gt;z /OS&lt;/code&gt;、&lt;code&gt;Linux&lt;/code&gt;、&lt;code&gt;Unix&lt;/code&gt; 和&lt;code&gt;Windows&lt;/code&gt;等多套系统。市场研究机构Clabby Analytics分析师乔·克拉比(Joe Clabby)认为，IBM此举对用户而言是个好消息。&lt;/p&gt;
&lt;p&gt;System z以其处理数据传输和批处理工作负载的能力闻名，而Linux则善于支持Java工作负载。System z还有一项功能，可以将其管理范围扩展至zBX系统，“令其更易于整合和处理相关数据。”&lt;/p&gt;
&lt;p&gt;据克拉比介绍，整合后的管理能力将减少运行多个操作系统的大型机环境所需的工时。他说：“如果你能将其作为单一架构进行管理，这也省钱。”&lt;/p&gt;
&lt;p&gt;市场研究机构IDC分析师让·波兹曼(Jean Bozman)表示，支持Windows系统将使得Windows 应用和大型机之间的连接速度非常快。她说：“如此一来，大型机的运行速度和端到端管理速度将更快。”&lt;/p&gt;
&lt;p&gt;波兹曼最后指出，IBM决定向大型机提供Windows支持，此举证明了IBM所持的一种观点，即分布式和大型机世界距离人们越来越近。(作者：轩辰)&lt;/p&gt;</summary><category term="大型机"></category><category term="windows"></category></entry><entry><title>COBOL编码规则</title><link href="http://mainframer.github.io/articles/COBOL%E7%BC%96%E7%A0%81%E8%A7%84%E5%88%99.html" rel="alternate"></link><updated>2011-10-03T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-10-03:articles/COBOL编码规则.html</id><summary type="html">&lt;p&gt;苦逼的COBOL们一定知道和JCL一样，在写COBOL程序的时候对源码的区域也有一定的制约的，具体如下表所示：&lt;br /&gt;
&lt;img alt="1" src="./../images/COBOL-coding-convention.jpg" /&gt;      &lt;/p&gt;
&lt;h4&gt;第7列用来说明程序所在行的用途:&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;连接符(-)&lt;/code&gt;: 表示本行是上一行的续行；&lt;br /&gt;
&lt;code&gt;('D')&lt;/code&gt;:    表示查错；
&lt;code&gt;星号('*')&lt;/code&gt;: 表示注解；  &lt;/p&gt;
&lt;h4&gt;下面的COBOL程序元素必须从A区域开始：&lt;/h4&gt;
&lt;p&gt;部(DIVISION)和节(SECTION)的标题 &lt;br /&gt;
段名 
程序结尾(End Program)标题 &lt;br /&gt;
级别标示符如FD或者SD等，级别号如01级和77级  &lt;/p&gt;
&lt;h4&gt;下面这些COBOL元素必须从B区域开始：&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;语句&lt;/code&gt;、&lt;code&gt;句子&lt;/code&gt;和&lt;code&gt;短语继续行&lt;/code&gt;  &lt;/p&gt;
&lt;h5&gt;[注：本文内容源自：《IBM主机技术一本通》]&lt;/h5&gt;</summary><category term="COBOL规则"></category></entry><entry><title>COBOL程序典型结构</title><link href="http://mainframer.github.io/articles/COBOL%E7%A8%8B%E5%BA%8F%E5%85%B8%E5%9E%8B%E7%BB%93%E6%9E%84.html" rel="alternate"></link><updated>2011-10-02T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-10-02:articles/COBOL程序典型结构.html</id><summary type="html">&lt;p&gt;一个典型的COBOL程序结构是：程序由许多‘部’组成，每个‘部’可以包含多个‘节’  &lt;/p&gt;
&lt;h4&gt;COBOL PROGRAM (程序)&lt;/h4&gt;
&lt;h4&gt;DIVISION(部)&lt;/h4&gt;
&lt;h4&gt;SECTION(节)&lt;/h4&gt;
&lt;h4&gt;PARAGRAPH(段)&lt;/h4&gt;
&lt;h4&gt;SENTENCE(句子)&lt;/h4&gt;
&lt;h4&gt;STATEMENT(语句)&lt;/h4&gt;
&lt;p&gt;整个COBOL程序由4个'部'(DIVISION)组成：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Identification Division  标识部
Environment Division 环境部 
Data Division 数据部
Procedure Division 过程部 &lt;/p&gt;
&lt;p&gt;用一句话介绍这四个部：标志部提供作者和编译器信息；环境部提供程序运行的环境；数据部描述程序处理的绝大部分数据；过程部描述对数据部描述的数据的操作算法:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;Identification Division(标识部)--主要是程序和作者名&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;IDENTIFICATION&lt;/span&gt; &lt;span class="no"&gt;DIVISION&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="no"&gt;PROGRAM&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;ID&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;xxxxxxx&lt;/span&gt;
&lt;span class="no"&gt;AUTHOR&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;xxxxxx&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Environment Division(环境部)--主要是配置节和IO节&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;ENVIRONMENT&lt;/span&gt; &lt;span class="no"&gt;DIVISION&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="no"&gt;CONFIGURATION&lt;/span&gt; &lt;span class="no"&gt;SECTION&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="no"&gt;SOURCE&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;COMPUTER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="no"&gt;IBM&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;390&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="no"&gt;OBJECT&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;COMPUTER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="no"&gt;IBM&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;390&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="no"&gt;SPECIAL&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="no"&gt;NAMES&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="no"&gt;INPUT&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;OUTPUT&lt;/span&gt; &lt;span class="no"&gt;SECTION&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="no"&gt;FILE&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;CONTROL&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;O&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;CONTROL&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Data Division(数据部)--主要是文件节、工作存储节、连接节&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;FILE&lt;/span&gt; &lt;span class="no"&gt;SECTION&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="no"&gt;WORKING&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;STORAGE&lt;/span&gt; &lt;span class="no"&gt;SECTION&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="no"&gt;LINKAGE&lt;/span&gt; &lt;span class="no"&gt;SECTION&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="c1"&gt;####Procedure Division(过程部)--程序员描述程序算法的地方&lt;/span&gt;
&lt;span class="no"&gt;XXXXX&lt;/span&gt; &lt;span class="no"&gt;SECTION&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="no"&gt;XXXXX&lt;/span&gt; &lt;span class="no"&gt;PARAGRAPH&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;过程部自上而下节&lt;code&gt;(SECTION)&lt;/code&gt;、段&lt;code&gt;(PARAGRAPH)&lt;/code&gt;、句子&lt;code&gt;(SENTENCE)&lt;/code&gt;和语句&lt;code&gt;(STATEMENT)&lt;/code&gt;。只有节&lt;code&gt;(SECTION)&lt;/code&gt;不是必须的，在过程部中至少要有一个段，一个句子和一个语句。段名和节名由程序员自定。&lt;/p&gt;</summary><category term="COBOL结构"></category></entry><entry><title>提交JCL的4种方式</title><link href="http://mainframer.github.io/articles/%E6%8F%90%E4%BA%A4JCL%E7%9A%844%E7%A7%8D%E6%96%B9%E5%BC%8F.html" rel="alternate"></link><updated>2011-10-01T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-10-01:articles/提交JCL的4种方式.html</id><summary type="html">&lt;p&gt;总结了下在主机上面提交JCL的四种方式：&lt;/p&gt;
&lt;h4&gt;1.用VIEW或者EDIT打开JOB,在命令行上输入&lt;code&gt;SUBMIT&lt;/code&gt;或者&lt;code&gt;SUB&lt;/code&gt;:&lt;/h4&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/JCL-SUBMIT-01.jpg" /&gt;          &lt;/p&gt;
&lt;h4&gt;2.直接在JOB前面输入&lt;code&gt;SUBMIT&lt;/code&gt;或者&lt;code&gt;SUB&lt;/code&gt;，不用打开:&lt;/h4&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/JCL-SUBMIT-02.jpg" /&gt;          &lt;/p&gt;
&lt;h4&gt;3.命令行模式下输入命令:&lt;/h4&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/JCL-SUBMIT-03.jpg" /&gt;          &lt;/p&gt;
&lt;h4&gt;4.&lt;code&gt;Q;ST&lt;/code&gt;进入SDSF，找到你最近run过的JOB，在它前面输入&lt;code&gt;SJ&lt;/code&gt;，回车，输入&lt;code&gt;SUB&lt;/code&gt;,提交job。&lt;/h4&gt;</summary><category term="提交JCL"></category></entry><entry><title>utility判断dataset是否为空的方法</title><link href="http://mainframer.github.io/articles/utility%E5%88%A4%E6%96%ADdataset%E6%98%AF%E5%90%A6%E4%B8%BA%E7%A9%BA%E7%9A%84%E6%96%B9%E6%B3%95.html" rel="alternate"></link><updated>2011-09-28T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-09-28:articles/utility判断dataset是否为空的方法.html</id><summary type="html">&lt;p&gt;下面介绍四种利用Utility的返回码来判断一个dataset或者member是否为空文件的方法： &lt;/p&gt;
&lt;h4&gt;1.利用&lt;code&gt;IDCAMS&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/IDCAMS-CHECK-EMPTY.jpg" /&gt;          &lt;/p&gt;
&lt;h4&gt;2.利用SORT(DFSORT/SYNCSORT)&lt;/h4&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/SORT-CHECK-EMPTY.jpg" /&gt;          &lt;/p&gt;
&lt;h4&gt;3.利用&lt;code&gt;ICETOOL(SYNCTOOL)&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/ICETOOL-CHECK-EMPTY.jpg" /&gt;          &lt;/p&gt;
&lt;h4&gt;4.利用&lt;code&gt;ISRSUPC&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/ISRSUPC-CHECK-EMPTY.jpg" /&gt;          &lt;br /&gt;
方法不止以上四种，还有利用&lt;code&gt;REXX&lt;/code&gt;脚本也可以判断，只是不属于本文讨论的范围。&lt;/p&gt;</summary><category term="z/OS"></category><category term="dataset"></category></entry><entry><title>IBM Debug Tool使用</title><link href="http://mainframer.github.io/articles/IBM%20Debug%20Tool%E4%BD%BF%E7%94%A8.html" rel="alternate"></link><updated>2011-09-05T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-09-05:articles/IBM Debug Tool使用.html</id><summary type="html">&lt;p&gt;关于&lt;code&gt;IBM DebugTool&lt;/code&gt;的一些介绍，请参照我的另一篇博文：&amp;lt;&lt;Debug Tool for z/OS&gt;&amp;gt;，这里呢，我是想说说一般我们用&lt;code&gt;IBM Debug Tool&lt;/code&gt;来调试&lt;code&gt;PL/I&lt;/code&gt;或者&lt;code&gt;COBOL&lt;/code&gt;程序的时候都有哪些命令或者说按键可以用，比如说设置断点，运行至断点处，监视变量值啊什么的这种一般不管什么程序的调试都会用到的知识。当然，这本身很简单，写在这里只是为了让新人更快的学会使用，基本上10分钟搞定的那种，这样就节省了大家的时间了。
先上个&lt;code&gt;IBM DebugTool&lt;/code&gt;的截图：
&lt;img alt="1" src="./../images/Debug-tool-screenshot1.jpg" /&gt;  &lt;br /&gt;
可以看到，最上面一行显示了当前debug的程序名字PRGM002以及所用的语言&lt;code&gt;PL/I&lt;/code&gt;,接着是命令行COMMAND,所有的调试命令都在这一行输入。然后是变量监视区域&lt;code&gt;(MONITOR)&lt;/code&gt;，源程序区&lt;code&gt;(SOURCE)&lt;/code&gt;以及调试日志&lt;code&gt;(LOG)&lt;/code&gt;区域。&lt;code&gt;Debug Tool&lt;/code&gt;遵循“七上八下”原则，也就是F7向上翻页，F8向下翻页。&lt;/p&gt;
&lt;h4&gt;执行下一条语句&lt;/h4&gt;
&lt;p&gt;按&lt;code&gt;F2&lt;/code&gt;  &lt;/p&gt;
&lt;h4&gt;查找关键字&lt;/h4&gt;
&lt;p&gt;命令为：
&lt;code&gt;F 关键字&lt;/code&gt;  &lt;br /&gt;
按F5循环查找  &lt;/p&gt;
&lt;h4&gt;设置/取消断点&lt;/h4&gt;
&lt;p&gt;将光标置于你要设置的代码处，按&lt;code&gt;F6&lt;/code&gt;设置断点，再按&lt;code&gt;F6&lt;/code&gt;取消断点设置。  &lt;/p&gt;
&lt;h4&gt;运行到断点&lt;/h4&gt;
&lt;p&gt;按F9即可，中间若有程序段会引起Abend，那么会自动停留在abend处。&lt;/p&gt;
&lt;h4&gt;监视变量&lt;/h4&gt;
&lt;p&gt;命令&lt;code&gt;L(List) 变量名&lt;/code&gt; 为临时监视，只会在Log区域列出变量值。&lt;br /&gt;
命令&lt;code&gt;M List 变量名&lt;/code&gt;为永久监视，会在Monitor区域监视变量值的变化情况。 &lt;br /&gt;
命令&lt;code&gt;SET AUTO ON&lt;/code&gt;会自动列出当前执行到的代码中所有的变量的值。   &lt;/p&gt;
&lt;h4&gt;清除MONITOR区域不想监视的变量&lt;/h4&gt;
&lt;p&gt;在该变量前面的行区域输入命令&lt;code&gt;C&lt;/code&gt; 回车即可。&lt;br /&gt;
在MONITOR区域以十六进制(HEX)/十进制(DECIMAL)形式显示变量。&lt;br /&gt;
在该变量前面的行号区域输入命令&lt;code&gt;H&lt;/code&gt; 或者&lt;code&gt;D&lt;/code&gt;可以在十六进制和十进制之间切换。  &lt;/p&gt;
&lt;h4&gt;放大/缩小 MONITOR或者SOURCE区域&lt;/h4&gt;
&lt;p&gt;将光标置于MONITOR或者SOURCE区域，按&lt;code&gt;F10&lt;/code&gt;。 &lt;/p&gt;
&lt;h4&gt;放大/缩小 LOG区域&lt;/h4&gt;
&lt;p&gt;按&lt;code&gt;F11&lt;/code&gt;  &lt;/p&gt;
&lt;h4&gt;左移 右移&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;LEFT&lt;/code&gt; &lt;br /&gt;
&lt;code&gt;RIGHT&lt;/code&gt;  &lt;/p&gt;
&lt;h4&gt;向上(下)50行&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;UP 50&lt;/code&gt; 
&lt;code&gt;DOWN 50&lt;/code&gt;&lt;/p&gt;</summary><category term="Debug Tool"></category></entry><entry><title>IBM File Manager for z/os 续(一)</title><link href="http://mainframer.github.io/articles/IBM%20File%20Manager%20for%20zos%20%E7%BB%AD(%E4%B8%80).html" rel="alternate"></link><updated>2011-09-04T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-09-04:articles/IBM File Manager for zos 续(一).html</id><summary type="html">&lt;p&gt;上一次我简单介绍了下大机平台上的一个强大的文件查看/编辑工具，这里我要介绍几个在用&lt;code&gt;FileManager&lt;/code&gt;查看/编辑 QSAM顺序文件的时候的小技巧。
&lt;img alt="1" src="./../images/ibm-file-manager-qsam.jpg" /&gt;  上图显示的是employee的信息文件，比较小，只有几条记录。但是一般在生产环境上，数据都有好几百万条，如果你很傻的直接FIND 关键字来查找，那么抛开CPU耗费不说，你自己也将耗费很长的一段时间来等待搜索结果出来，所以，看看这篇文章，学会几个&lt;code&gt;*File Manager*&lt;/code&gt;的使用技巧还是有必要的(如果你没功夫去看IBM红宝书的话)。&lt;/p&gt;
&lt;h3&gt;1、只查找指定字段(Field)&lt;/h3&gt;
&lt;h5&gt;例：只在ACCT字段查找关键字“IT”&lt;/h5&gt;
&lt;p&gt;命令： &lt;code&gt;F IT #6&lt;/code&gt;     (可以把#6看成ACCT的别名)&lt;/p&gt;
&lt;h5&gt;例：只在ACCT字段和EP_NAME字段查找关键字"IT"&lt;/h5&gt;
&lt;p&gt;命令： &lt;code&gt;F IT #6 #8&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;2、只查找指定几列 (Column)&lt;/h3&gt;
&lt;h5&gt;例：只在第8至20列查找关键字"AN"&lt;/h5&gt;
&lt;p&gt;命令: &lt;code&gt;F AN 8 20&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;3、只查找指定字符串开头的关键字&lt;/h3&gt;
&lt;h5&gt;例：查找以LI开头的关键字&lt;/h5&gt;
&lt;p&gt;命令： &lt;code&gt;F LI Pre&lt;/code&gt;    (注意跟F LI的区别)&lt;/p&gt;
&lt;h3&gt;4、只查找指定字符串结尾的关键字&lt;/h3&gt;
&lt;p&gt;例：查找以LI结尾的关键字
命令： &lt;code&gt;F LI SUF&lt;/code&gt;    (注意跟F LI的区别)&lt;/p&gt;
&lt;h3&gt;5、只查找单词&lt;/h3&gt;
&lt;p&gt;例:查找单词ANAN
命令: &lt;code&gt;F ANAN WORD&lt;/code&gt;  (限定了只查找是单词的，就是两边都是空格隔开的字符串)&lt;/p&gt;</summary><category term="File Manager"></category></entry><entry><title>Debug Tool for z/OS</title><link href="http://mainframer.github.io/articles/Debug%20Tool%20for%20zOS.html" rel="alternate"></link><updated>2011-09-03T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-09-03:articles/Debug Tool for zOS.html</id><summary type="html">&lt;p&gt;作为一个PL/I、COBOL程序猿，调试程序是必须的一项技能。这里我来说说大机上面的调试工具IBM的DebugTool，它支持的环境包括BATCH, TSO, CICS, DB2, DB2存储过程以及UNIX等等。&lt;/p&gt;
&lt;h4&gt;这篇我来说说如何设置让程序可以被Debug&lt;/h4&gt;
&lt;p&gt;首先，你必须在编译程序的时候需要选择以Debug模式编译，这个在changeman里面直接在编译的时候选个&lt;code&gt;IBM Debug Tool="Y"&lt;/code&gt;就可以了。   &lt;/p&gt;
&lt;p&gt;接着，如果是BATCH的，就需要在JCL的PARM中指定TEST运行时的参数，通过VTAM接口来初始化debug模式，VTAM%后面跟着的是userid，就像这样：
&lt;img alt="1" src="./../images/debugtool.jpg" /&gt;    &lt;/p&gt;
&lt;p&gt;是BATCH的话，你还要有一个Debug的session，这个可以参照我的另外一篇博文：&amp;lt;&amp;lt;登陆大型机——Aviva的介绍&amp;gt;&amp;gt;，只需注意在建debug session的时候destination的IP一般和普通大机的物理ip是不一样。填上正确的ip,然后用你的id登陆,这里我的id是IBMUSER，须跟上面设置的一样。&lt;br /&gt;
回到JCL这边，submit，那恭喜你，你就可以看到Debugtool的画面了:
&lt;img alt="1" src="./../images/Debug-tool-screenshot1.jpg" /&gt;     &lt;/p&gt;
&lt;p&gt;但是，如果程序是ONLINE的话，一般我们用CICS上面的DTCN这个工具来debug的。这里我假设你已经在上面“首先”里面正确编译了一个ONLINE的程序PRGM002 (带debug编译选项的)。然后，你登陆CICS，输入DTCN进入DTCN的设置界面:
&lt;img alt="1" src="./../images/Debug-tool-CICS-Control.jpg" /&gt;  &lt;/p&gt;
&lt;p&gt;参照上面，假如一个transaction叫&lt;em&gt;BTAX&lt;/em&gt;  ，调用了你要debug的程序PRGM002，你就按照上图那样正确设置好，然后F4保存，F5激活设置，F3退出回到CICS界面，输入&lt;span style="color: #ff00ff;"&gt;&lt;strong&gt;BTAX&lt;/strong&gt;&lt;/span&gt;，那也恭喜你，你就进入了debugtool的画面了。&lt;/p&gt;</summary><category term="z/OS"></category><category term="Debug Tool"></category></entry><entry><title>IBM File Manager for z/os</title><link href="http://mainframer.github.io/articles/IBM%20File%20Manager%20for%20zos.html" rel="alternate"></link><updated>2011-08-28T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-28:articles/IBM File Manager for zos.html</id><summary type="html">&lt;p&gt;IBM的&lt;code&gt;File Manger&lt;/code&gt; 在大机平台上是非常强大的文件查看/编辑器，是一个强大的ISPF应用程序。这里先贴上一张IBM2011年最新的关于File Manger的结构图，我认为这张图很好地诠释了File Manager 的强大之处：
&lt;img alt="1" src="./../images/IBM_File_Manager-for-zOS.jpg" /&gt;&lt;br /&gt;
&lt;em&gt;[图片来源于IBM官方网站，仅供学习交流之用]&lt;/em&gt;   &lt;/p&gt;
&lt;p&gt;参照上图，我这里要讲的是当中的第二块内容——&lt;code&gt;File Manager for Z/OS&lt;/code&gt;，关于其它部分如&lt;code&gt;File Manager for DB2&lt;/code&gt;,&lt;code&gt;File Manager for IMS&lt;/code&gt;和&lt;code&gt;File Manager for CICS&lt;/code&gt;，以后再说。(其实更主要是因为平常工作做我用for z/os用的多，db2和cics的用得少，不敢在这瞎说。)。基本的操作原理就不说了，我就说说我在平常工作当中的几个有用的小技巧好了。 以查看/编辑&lt;code&gt;QSAM&lt;/code&gt; (sequential)的dataset为例，选项1是查看(View),选项2是编辑(Edit),我们View进去看到如下图：
&lt;img alt="1" src="./../images/File_Manager_For_zos_01.jpg" /&gt;  &lt;br /&gt;
这里&lt;code&gt;DBAID01.TEST.FILE&lt;/code&gt;是你的ID(DBAID01)开头的一个你要查看的File，不过它只是一个纯的无格式的数据文件，你所做的就是要给它指定一个模板(COPYBOOK)，COPYBOOK规定它该按照什么样的方式显示。&lt;code&gt;DBAID01.TEST.COPY(COPY01)&lt;/code&gt;就是&lt;code&gt;DBAID01.TEST.FILE&lt;/code&gt;的COPYBOOK,它当中规定了&lt;code&gt;DBAID01.TEST.FILE&lt;/code&gt;该如何显示。&lt;/p&gt;</summary><category term="z/OS"></category><category term="File Manager"></category></entry><entry><title>mainframe访问磁带(Tape)</title><link href="http://mainframer.github.io/articles/mainframe%E8%AE%BF%E9%97%AE%E7%A3%81%E5%B8%A6(Tape).html" rel="alternate"></link><updated>2011-08-27T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-27:articles/mainframe访问磁带(Tape).html</id><summary type="html">&lt;p&gt;大机上磁带(tape)一般用来存储大容量的数据的，可以降低成本。我们要访问tape中的数据的时候，一般的做法是用JCL将tape中的记录转存到直接存储访问设备(DASD)中再查看。 下图中，我们通过utility &lt;code&gt;ICEMAN&lt;/code&gt;将&lt;code&gt;IBMUSER.DNS.TAPE&lt;/code&gt;这个tape中的所有记录都转存到&lt;code&gt;IBMUSER.TAPE.TO.DASD&lt;/code&gt;中，这样就能查看了。
&lt;img alt="1" src="./../images/ICEMAN-access-tape.jpg" /&gt;      &lt;/p&gt;
&lt;p&gt;不过，需要注意的是，tape里面的数据量一般都很大，所以更多时候我们再用的时候会指定读取的record的数目，比如这里我们指定读取100条：
&lt;img alt="1" src="./../images/ICEMAN-access-tape-stopaft1.jpg" /&gt;    &lt;/p&gt;
&lt;p&gt;甚至，你还可以用SORT中的语法筛选出你想要的条件。比如&lt;code&gt;(1，4，EQ,'AAAA')&lt;/code&gt;这样子。 &lt;/p&gt;</summary><category term="z/OS"></category><category term="访问tape"></category><category term="ICEMAN"></category></entry><entry><title>用ISRSUPC在PDS所有member中搜索指定字符串</title><link href="http://mainframer.github.io/articles/%E7%94%A8ISRSUPC%E5%9C%A8PDS%E6%89%80%E6%9C%89member%E4%B8%AD%E6%90%9C%E7%B4%A2%E6%8C%87%E5%AE%9A%E5%AD%97%E7%AC%A6%E4%B8%B2.html" rel="alternate"></link><updated>2011-08-27T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-27:articles/用ISRSUPC在PDS所有member中搜索指定字符串.html</id><summary type="html">&lt;p&gt;在一个PDS中搜索名字叫做“snailgo”的member，可以在command line上输入命令&lt;code&gt;mem snailgo&lt;/code&gt;即可。但是，如果想搜索整个PDS下所有的成员(Member)中指定字符串，有没有办法呢？答案是肯定的，我们可以用一个比较的utility &lt;code&gt;ISRSUPC&lt;/code&gt;来实现，同样的，只需submit一个JCL。
&lt;img alt="1" src="./../images/isrsupc-compare.jpg" /&gt;      &lt;/p&gt;
&lt;p&gt;这里，我们在PDS &lt;strong&gt;&lt;code&gt;“IBMUSER.TEST.LIB.JCL”&lt;/code&gt;&lt;/strong&gt;和&lt;strong&gt;&lt;code&gt;“IBMUSER.TEST.LIB.PROC”&lt;/code&gt;&lt;/strong&gt;下的所有member中搜索字符串”SNAILGO”。参数为：&lt;code&gt;PARM=(SRCHCMP,ANYC)&lt;/code&gt;，其中&lt;code&gt;SRCHCMP&lt;/code&gt;指定要搜索的字符串，&lt;code&gt;ANYC&lt;/code&gt;表示ANY Case，即搜索任何符合的情况，要了解更详细的PARM的用法，可以参考IBM红宝书&lt;strong&gt;IBM manual ISPF/PDF Guide and Reference for MVS (SC34-4258&lt;/strong&gt;，这里我只介绍最基本的用法。 当然，您也可以一次搜索多个不同的字符串： 
&lt;img alt="1" src="./../images/isrsupc-multi-compare.jpg" /&gt;    &lt;/p&gt;
&lt;p&gt;最后，在JOB的输出Log里面有个OUTDD，里面就是详细的搜索报告了~&lt;/p&gt;</summary><category term="z/OS"></category><category term="ISRSUPC"></category></entry><entry><title>新建空的GDG generation</title><link href="http://mainframer.github.io/articles/%E6%96%B0%E5%BB%BA%E7%A9%BA%E7%9A%84GDG%20generation.html" rel="alternate"></link><updated>2011-08-26T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-26:articles/新建空的GDG generation.html</id><summary type="html">&lt;p&gt;有时候你不希望GDG的当前generation里面有数据，但GDG又不能没有generation,否则JCL会提示找不到dataset。这时候你可以用IBM的&lt;code&gt;IEFBR14&lt;/code&gt;utility来生成一个空的generation。&lt;code&gt;IEFBR14&lt;/code&gt;它实际上什么也不做的空程序，常常被我们用来生成空的FILE。不只是gdg，普通的dataset也可以生成。  &lt;/p&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/gdg-new-empty-generation.jpg" /&gt;    &lt;br /&gt;
submit，查看，空的generation G0001V00 就生成了:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/gdg-base-generation.jpg" /&gt;  &lt;/p&gt;</summary><category term="z/OS"></category><category term="GDG"></category></entry><entry><title>更改GDG世代数参数</title><link href="http://mainframer.github.io/articles/%E6%9B%B4%E6%94%B9GDG%E4%B8%96%E4%BB%A3%E6%95%B0%E5%8F%82%E6%95%B0.html" rel="alternate"></link><updated>2011-08-26T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-26:articles/更改GDG世代数参数.html</id><summary type="html">&lt;p&gt;建完GDG base后更改GDG的generation。用下面的JCL提交即可。这里我将上次建的GDG base &lt;strong&gt;&lt;code&gt;“IBMUSER.TEST.LIB.GDGBASE”&lt;/code&gt;&lt;/strong&gt; 的世代数更改为5:&lt;br /&gt;
&lt;img alt="1" src="./../images/gdg-update.jpg" /&gt;      &lt;/p&gt;
&lt;p&gt;submit即可。 最后，你可以在GDG base前面用命令&lt;code&gt;“LISTC GDG ENT(/) ALL”&lt;/code&gt;来检查看看是不是参数已经从10改成5了。  &lt;/p&gt;</summary><category term="z/OS"></category><category term="GDG"></category></entry><entry><title>新建GDG世代数据集</title><link href="http://mainframer.github.io/articles/%E6%96%B0%E5%BB%BAGDG%E4%B8%96%E4%BB%A3%E6%95%B0%E6%8D%AE%E9%9B%86.html" rel="alternate"></link><updated>2011-08-25T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-25:articles/新建GDG世代数据集.html</id><summary type="html">&lt;p&gt;如何新建一个GDG base? 一种方法是用IDCAMS utility来建,只需提交一个JCL即可。看图：&lt;br /&gt;
&lt;img alt="1" src="./../images/create-gdg-base.jpg" /&gt;       &lt;/p&gt;
&lt;p&gt;其中，LIMIT(10)指定了生成GDG 的世代数(generation number)，简单吧！&lt;/p&gt;</summary><category term="z/OS"></category><category term="GDG"></category></entry><entry><title>IBM主机技术一本通笔记</title><link href="http://mainframer.github.io/articles/IBM%E4%B8%BB%E6%9C%BA%E6%8A%80%E6%9C%AF%E4%B8%80%E6%9C%AC%E9%80%9A%E7%AC%94%E8%AE%B0.html" rel="alternate"></link><updated>2011-08-21T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-21:articles/IBM主机技术一本通笔记.html</id><summary type="html">&lt;p&gt;这一系列文章将会是从《IBM主机技术一本通》里面选取我个人认为对我有用的部分来记录和阐述。&lt;/p&gt;
&lt;h5&gt;1、LRECL和BLKSIZE&lt;/h5&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/LRECL-BLKSIZE.jpg" /&gt;           &lt;br /&gt;
&lt;strong&gt;LRECL&lt;/strong&gt;:逻辑记录是程序想要处理的一个数据单元，通常由许多连接在一起的区域构成。  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;BLKSIZE：物理单元(又称块)   描述了在一次输入输出操作中需要传送的数据量，如上图所示，你一定发现了BLKSIZE必须是LRECL的整数倍，显然这是因为BLKSIZE是多个LRECL嘛！ 
任何时候发生输入输出时传送的是整个块而不是单个逻辑记录，这样做的好处显而易见，有效地使用空间，提高传送率。&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5&gt;2、I——PDS(分区数据集)信息分析&lt;/h5&gt;
&lt;p&gt;一直对这个知识点一知半解的，今天看了一本通之后，算是明白了。照着图说： &lt;br /&gt;
&lt;img alt="1" src="./../images/PDS-Infor1.jpg" /&gt;   &lt;/p&gt;
&lt;p&gt;呃... 存储介质：标准磁盘；卷名：PRIM03；设备：3390；组织结构：PO(分区数据集)，固定记录长度，记录长度80字节，块大小27920字节，首次分配1 track，用完后每次可扩展分配195个tracks，当前已经分配了2个track，一共分配了1次，最多可以有10个目录块，即最多可以有10x4=40个member，当前已经使用了2个tracks，当前已经分配了1次，已经有6个member，使用了2个目录块(4和2)&lt;/p&gt;
&lt;h5&gt;3、L member&lt;/h5&gt;
&lt;p&gt;将这个命令列在这里不是不会用，恰恰是天天用经常用。只是羞于我一直以为这里L是List的缩写，原来人家吕老师说了，这是Locate的缩写，目的是每次都将PDS下面的你要找的member定位在第一个位置。   &lt;/p&gt;
&lt;h4&gt;4、查看VTOC信息&lt;/h4&gt;
&lt;p&gt;VTOC是系统中的一个顺序数据集，存放在磁盘的0柱面0磁道之后，65535磁道之前。用于记录存储设备上所有数据集的属性，每个磁盘均有一个VTOC。 &lt;br /&gt;
例如，我要查看磁盘卷PRIM02的信息。&lt;br /&gt;
&lt;code&gt;ruby3.4;V&lt;/code&gt;
在Volume Serial上填：   &lt;code&gt;PRIM02&lt;/code&gt;
&lt;img alt="1" src="./../images/MVS-VTOC-Info.jpg" /&gt;    &lt;/p&gt;
&lt;p&gt;PRIM02卷总共有50085 tracks，已经用了51%,1个cyls等于15个tracks，VTOC数据集本身分配了45个tracks,已用的占26%，还有1677个可用的DSCBS(数据集控制块)，PRIM02卷上一共还有24430tracks(即1590个Cyls)未使用，未使用的空间中最大的一块有3600tracks(即240个Cyls)。&lt;/p&gt;</summary><category term="z/OS"></category><category term="主机一本通"></category></entry><entry><title>IBM主机技术一本通笔记续</title><link href="http://mainframer.github.io/articles/IBM%E4%B8%BB%E6%9C%BA%E6%8A%80%E6%9C%AF%E4%B8%80%E6%9C%AC%E9%80%9A%E7%AC%94%E8%AE%B0%E7%BB%AD.html" rel="alternate"></link><updated>2011-08-21T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-21:articles/IBM主机技术一本通笔记续.html</id><summary type="html">&lt;h5&gt;1、JCL每行80列&lt;/h5&gt;
&lt;p&gt;原来这是因为在1960年那个年代，程序员使用的是穿孔卡片来将JCL作业控制语句一个一个的输入系统，构成了批量作业，而当时穿孔卡片只有80列。&lt;/p&gt;
&lt;h5&gt;2、JOB语句的关键字参数&lt;/h5&gt;
&lt;p&gt;ADDRSPC 
&lt;span style="color: #ff00ff;"&gt;REGION&lt;/span&gt; &lt;br /&gt;
&lt;span style="color: #ff00ff;"&gt;MSGCLASS&lt;/span&gt; &lt;br /&gt;
SECLABEL &lt;br /&gt;
&lt;span style="color: #ff00ff;"&gt;PASSWORD&lt;/span&gt;&lt;br /&gt;
BYTES   &lt;br /&gt;
&lt;span style="color: #ff00ff;"&gt;CLASS&lt;/span&gt; &lt;br /&gt;
RD MSGLEVEL &lt;br /&gt;
&lt;span style="color: #ff00ff;"&gt;TIME&lt;/span&gt; &lt;br /&gt;
PERFORM PAGES &lt;br /&gt;
&lt;span style="color: #ff00ff;"&gt;COND&lt;/span&gt; &lt;br /&gt;
LINES &lt;br /&gt;
CARDS &lt;br /&gt;
TYPRUN &lt;br /&gt;
PRTY &lt;br /&gt;
SCHENV &lt;br /&gt;
GROUP &lt;br /&gt;
&lt;span style="color: #ff00ff;"&gt;RESTART&lt;/span&gt; &lt;br /&gt;
&lt;span style="color: #ff00ff;"&gt;NOTIFY&lt;/span&gt; &lt;br /&gt;
&lt;span style="color: #ff00ff;"&gt;USER&lt;/span&gt; CCSID&lt;br /&gt;
标有颜色的几个是我自己比较常用到的。&lt;br /&gt;
上张包含了这9个常用JCL关键字参数的图(当然，平常工作当中一般不可能在单个JCL当中都包含了所有的这9个关键字，我这里只是为了更好的说明才把它们罗列在一个JCL里面的，这点要明白)
&lt;a href="./../images/JCL-keyword1.jpg"&gt;!&lt;/a&gt;  &lt;br /&gt;
&lt;strong&gt;&lt;code&gt;CLASS&lt;/code&gt;&lt;/strong&gt; : 是作业运行队列的优先级，MSGCLASS是作业输出信息的级别，它规定了作业输出信息送往哪里显示。CLASS和MSGCLASS都是公司规定好了的，肯定有文档可以查看具体信息的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;NOTIFY&lt;/code&gt;&lt;/strong&gt;:  是指最终作业运行的结果通知给谁，可以写详细的ID，比如IBMUSER，也可以写通用的参数，比如&lt;code&gt;&amp;amp;SYSUID&lt;/code&gt;，这样的话，谁运行它就显示给谁看。 &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;REGION&lt;/code&gt;&lt;/strong&gt;:  规定作业所需的实存或虚存的大小，在JOB level定义的话就运用到整个JOB的所有STEP，当然，可以每个STEP单独定义REGION的大小。      &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;TIME&lt;/code&gt;&lt;/strong&gt; :   用来限制作业占用CPU的最长时间，当TIME参数达到指定的时间时，作业就会异常终止，用来避免死循环等低级错误。图中我们规定CPU时间为1分30秒。TIME参数还可这么写： &lt;br /&gt;
&lt;code&gt;TIME=l440&lt;/code&gt;               ----1440 mins    &lt;br /&gt;
&lt;code&gt;TIME=NOLIMIT&lt;/code&gt;            ---- nolimit    &lt;br /&gt;
&lt;code&gt;TIME=MAXIMUM&lt;/code&gt;            ----357912 mins          &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;USER&lt;/code&gt;和&lt;code&gt;PASSWORD&lt;/code&gt;&lt;/strong&gt; :一起用，比如你自己的权限比较低，你申请了一个临时的权限比较高地ID来submit作业的时候，你就可以这么指定，系统会认为这个JOB是那个有较高权限的人提交的，而不是你提交的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;RESTART&lt;/code&gt;&lt;/strong&gt;: 用来指定JOB从哪一个STEP开始执行，不然默认就是从第一个STEP开始执行。      &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;COND&lt;/code&gt;&lt;/strong&gt;:    指定了单个STEP执行的前提条件，用法很灵活，这里不展开。    &lt;/p&gt;
&lt;h5&gt;3、PARM参数有100个字符限制&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;PARM&lt;/code&gt;参数用来在JCL的具体STEP中给程序传递变量参数，它用引号括起来，不能超过100个字符。 &lt;/p&gt;
&lt;h5&gt;4、Dummy 哑数据集&lt;/h5&gt;
&lt;p&gt;每个程序需要访问的数据集在作业流中都必须有一个ddname与其对应。如果你在程序里面定义了文件而在JCL中没有定义对应的DD语句，就会ABEND。当有时候输入数据集对程序来说是可选的或者程序要输出地数据集不是必需的时候，我们就用Dummy数据集来跳过它所有的I/O操作。   &lt;/p&gt;
&lt;h5&gt;5、DATASET串联(Concatenation)&lt;/h5&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/dataset-concatenation.jpg" /&gt;&lt;br /&gt;
使用这个特性是很方便的，特别是在一些SORT的场合，把几个DATASET同置于一个SORTIN下面。只是要注意的是这些DATASET的属性要完全一致，就是它们所有的DCB子参数必须一致。包括&lt;strong&gt;RECFM，LRECL，BLKSIZE&lt;/strong&gt;。&lt;/p&gt;</summary><category term="z/OS"></category><category term="主机一本通"></category></entry><entry><title>CICS应用编程接口</title><link href="http://mainframer.github.io/articles/CICS%E5%BA%94%E7%94%A8%E7%BC%96%E7%A8%8B%E6%8E%A5%E5%8F%A3.html" rel="alternate"></link><updated>2011-08-12T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-12:articles/CICS应用编程接口.html</id><summary type="html">&lt;h3&gt;开发语言&lt;/h3&gt;
&lt;p&gt;可以用COBOL,C,C++,Assembler,PL/I等来编写CICS应用程序的主要的大部分逻辑处理功能，而只有少数的一部分功能需要用到CICS命令。&lt;/p&gt;
&lt;h5&gt;CICS命令格式&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;EXEC CICS SEND FROM (MSG-AREA) LENGTH(5) END-EXEC&lt;/code&gt;                                         ——向终端发送长度为5的MSG-AREA信息       &lt;br /&gt;
&lt;code&gt;EXEC CICS READ FILE('FILEA') INTO (CUSTOMER-REC) RIDFLD(CUSTOMER-NUM)&lt;/code&gt;                     ——读和修改VSAM文件       &lt;br /&gt;
&lt;code&gt;EXEC SQL SELECT colum_names INTO program_variables From Table_name WHERE ... END-EXEC&lt;/code&gt;     ——读和修改关系型数据库&lt;br /&gt;
&lt;code&gt;EXEC CICS READ ... RESP(RESPONSE-FIELD)&lt;/code&gt;  或  &lt;code&gt;EXEC CICS HANDLE CONDITION&lt;/code&gt;                 ——处理异常条件   &lt;/p&gt;
&lt;h5&gt;CICS API主要服务&lt;/h5&gt;
&lt;p&gt;CICS API主要服务：访问和修改文件；访问和修改关系、层次性数据库；终端的输入和输出；用户定义的数据队列；在一个事务中的多程序间的控制操纵；启动另一个事务;&lt;/p&gt;
&lt;h5&gt;CICS程序控制的3种方式&lt;/h5&gt;
&lt;p&gt;&lt;strong&gt;RETURN&lt;/strong&gt;:  释放控制于上一高层程序。    &lt;br /&gt;
&lt;strong&gt;LINK&lt;/strong&gt;:    链接出去执行后返回，就像执行一个子程序。  &lt;br /&gt;
&lt;strong&gt;XCTL&lt;/strong&gt;:    传递控制于制定程序，但不再返回程序，而返回本层。  &lt;/p&gt;
&lt;h5&gt;CICS程序的安装&lt;/h5&gt;
&lt;p&gt;&lt;strong&gt;1、&lt;/strong&gt; 预编译，即翻译，将&lt;code&gt;EXEC CICS&lt;/code&gt;语句翻译成编程语言的源语句。当然，如果源程序中还是用了&lt;code&gt;EXEC SQL&lt;/code&gt;嵌套数据库功能，那么在此之前必须先进行关系数据库的预编译。
&lt;strong&gt;2、&lt;/strong&gt; 编译源程序，生成二进制代码。
&lt;strong&gt;3、&lt;/strong&gt; 链接，将链接生成的结果放到装载库(load lib)当中。
我用word简单画了个图，丑了点。&lt;br /&gt;
&lt;img alt="1" src="./../images/CICS-Compile.jpg" /&gt;    &lt;/p&gt;</summary><category term="z/OS"></category><category term="CICS接口"></category></entry><entry><title>ISPF中通配符%和*的使用</title><link href="http://mainframer.github.io/articles/ISPF%E4%B8%AD%E9%80%9A%E9%85%8D%E7%AC%A6%%E5%92%8C*%E7%9A%84%E4%BD%BF%E7%94%A8.html" rel="alternate"></link><updated>2011-08-08T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-08:articles/ISPF中通配符%和*的使用.html</id><summary type="html">&lt;p&gt;在日常的操作过程中，发现通配符__%&lt;strong&gt;和_&lt;strong&gt;&lt;em&gt;_使用的场合还是很多的，而且重要的是，如果使用好的话，真的是会很大程度上提高工作效率的。
和其他系统的通配符没什么区别，在大机上也是这么定义的：  &lt;br /&gt;
&lt;/em&gt;_%&lt;/strong&gt;：任意一位字符  &lt;br /&gt;
&lt;/strong&gt;*__：任意一至多位字符  &lt;br /&gt;
下面举两个例子： &lt;br /&gt;
输入：&lt;code&gt;IBMUSER.TEST.LIB%&lt;/code&gt;&lt;br /&gt;
&lt;img alt="1" src="./../images/wild_character01.jpg" /&gt;    &lt;/p&gt;
&lt;p&gt;输入：&lt;code&gt;IBMUSER.*.LIB&lt;/code&gt;  &lt;br /&gt;
&lt;img alt="1" src="./../images/wild_character02.jpg" /&gt;       &lt;/p&gt;
&lt;p&gt;当然，两者可以根据你的需要任意组合使用，这个是没问题的。就像：&lt;code&gt;IBMUSER.*.LIB%&lt;/code&gt;这样。&lt;/p&gt;</summary><category term="ISPF通配符"></category></entry><entry><title>OLTP和CICS</title><link href="http://mainframer.github.io/articles/OLTP%E5%92%8CCICS.html" rel="alternate"></link><updated>2011-08-07T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-07:articles/OLTP和CICS.html</id><summary type="html">&lt;h3&gt;OLTP:联机事务处理&lt;/h3&gt;
&lt;p&gt;事务的ACID属性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原子性(Atomicity) &lt;/li&gt;
&lt;li&gt;一致性(Consistency) &lt;/li&gt;
&lt;li&gt;孤立性(Isolation) &lt;/li&gt;
&lt;li&gt;持久性(Durability)
关于OLTP的完整性和可恢复机制,这里举两种情况: 
&lt;strong&gt;&lt;em&gt;a)、&lt;/em&gt;&lt;/strong&gt; 某人从ATM取200块钱，ATM向银行的主机递交请求(主机存储着客户的账户信息)，主机批准且从该人账户上扣去200元，此时ATM发生故障不工作了，此人没拿到钱。&lt;br /&gt;
&lt;strong&gt;&lt;em&gt;b)、&lt;/em&gt;&lt;/strong&gt; 某人从ATM取200块钱，ATM向主机递交请求，主机批准并且从客户帐上减去200元，ATM付200元给此人，此时主机保存取款记录的磁盘坏了，取款信息丢失。&lt;br /&gt;
此类问题层出不穷，增加了程序员代码逻辑处理的难度。我们需要一个环境，它能自动处理事务处理中所有可能的失败，使应用开发人员可以集中于商务的应用开发，而不必编写失败处理程序，不必关心通信和硬件等引起的问题。再来看一个问题： &lt;br /&gt;
&lt;strong&gt;&lt;em&gt;c)、&lt;/em&gt;&lt;/strong&gt; 航班订票，如果有两个客户在先后时间都要预定某一航班的同一座位，如何避免同一座位被售两次？
通过锁住记录的方法，使得第二个请求必须等待第一个请求完成，而此时，该座位已经变成已预订状态，自然不会被再次预定。
各大公司相应地采用事务管理器，如IBM公司的CICS和IMS,EBA Systems的TUXEDO，DEC的ACMS，Transara的Encina灯来实现这些功能，解放应用开发人员以集中处理商务逻辑。我们可以认为事务管理器是对应用程序提供服务的，将应用程序于复杂系统软硬件分离开来的一层软件，亦称&lt;code&gt;中间件&lt;/code&gt;。自下而上的顺序为：&lt;code&gt;硬件——操作系统——中间件——应用程序&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;CICS:客户信息管理系统&lt;/h3&gt;
&lt;p&gt;CICS是IBM最流行的事务管理系统，从1968年到现在，成为事务处理环境中的佼佼者。CICS现在有从桌面到主机环境各种不同平台和操作系统的产品。如CICS/VSE,CICS/MVS,CICS/400（for AS/400),CICS/6000(for Rs/6000),CICS for OS2,CICS for Windows/NT等等。各种CICS产品通过提供以下服务而提高了生产力：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;向上提供一致性的应用程序编程接口API;&lt;/li&gt;
&lt;li&gt;向下提供透明访问操作系统的功能；  &lt;/li&gt;
&lt;li&gt;系统管理的辅助工具；&lt;br /&gt;
&lt;code&gt;CICS/ESA&lt;/code&gt;用来处理大型机OS/390上的巨量事务，近期版本增加了许多特性：建立了再OLTP下的标准，增加了子系统存储的保护，分布式程序连接，前端编程接口(FEPI)。&lt;/li&gt;
&lt;/ul&gt;</summary><category term="z/OS"></category><category term="OLTP"></category><category term="CICS"></category></entry><entry><title>QW命令——MVS/QuickRef帮助文档</title><link href="http://mainframer.github.io/articles/QW%E5%91%BD%E4%BB%A4%E2%80%94%E2%80%94MVSQuickRef%E5%B8%AE%E5%8A%A9%E6%96%87%E6%A1%A3.html" rel="alternate"></link><updated>2011-08-05T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-08-05:articles/QW命令——MVSQuickRef帮助文档.html</id><summary type="html">&lt;p&gt;大机平台上有一个很了不起的帮助文档系统，名字叫做MVS/QuickRef，是一款强大的在线查询系统。用过微软的MSDN的童鞋都知道MSDN的强大。大机上面的MVS/QuickRef几乎可以查到所有你想查的资料，因为这款查询工具号称超过5k万行，以简单易懂著称。最主要的是查询特别方便，使用ISPF直接调用命令QW即可查询内容。&lt;br /&gt;
MVS/QuickRef现在最新的版本是2011年4月份新出的MVS/QuickRef 7.4 ，我们公司还在用的是7.0的版本。这款强大的查询工具是由一家名叫Chicago-Soft的公司生产的，主页在:&lt;a href="http://quickref.com"&gt;MVS/QuickRef主页&lt;/a&gt;，可以去看看。&lt;br /&gt;
在大机上，MVS/QuickRef能查询许多方面的。这是官网上关于MVS/QuickRef强大的一段文字描述：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"MVS/QuickRef's simple, easy to understand information helps you resolve 97% of the problems affecting z/OS, CICS, DB/2, IDMS, ADABAS, JCL, JES, COBOL. It has the answers to MVS abend codes, z/OS error messages plus 1,260 software products from IBM, CA, BMC and 72 other independent software vendors."
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;好了，我举几个例子说明QW能用来做什么：&lt;/p&gt;
&lt;h5&gt;想知道JOB log里面的输出信息IEF404I是什么意思？&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;QW IEF404I
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/MVS_QuickRef_01.jpg" /&gt;           &lt;/p&gt;
&lt;h4&gt;在编译/Bind DB2程序的时候返回-805不知道什么意思？&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;QW -805
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/MVS_QuickRef_02.jpg" /&gt;            &lt;/p&gt;
&lt;h4&gt;在提交job的时候abend，返回&lt;code&gt;S04C&lt;/code&gt;系统错误码不知道什么原因？&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;QW S04C
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/MVS_QuickRef_03.jpg" /&gt;           &lt;br /&gt;
这里只是举几个例子抛砖引玉，实际工作中当然会遇到各种各样的返回码什么的，这时候就是体现QW命令的价值的时候了。&lt;/p&gt;</summary><category term="z/OS"></category><category term="QW命令"></category></entry><entry><title>继续介绍世代数据集GDG</title><link href="http://mainframer.github.io/articles/%E7%BB%A7%E7%BB%AD%E4%BB%8B%E7%BB%8D%E4%B8%96%E4%BB%A3%E6%95%B0%E6%8D%AE%E9%9B%86GDG.html" rel="alternate"></link><updated>2011-07-15T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-07-15:articles/继续介绍世代数据集GDG.html</id><summary type="html">&lt;p&gt;上篇文章我简单介绍了下大机平台上用到的一种叫做世代数据集(GDG)的文件，在这一篇里，我来比较详细地说明下GDG的用法和注意事项。&lt;/p&gt;
&lt;h4&gt;1、新建GDG base&lt;/h4&gt;
&lt;p&gt;一般我们可以用Job来新建一个GDG base，下面，我利用utility IDCAMS来生成一个名为IBMUSER.MYGDG.BASE并且可以有10个generation的GDG base。只要提交这个job马上就生成了GDG base了。 &lt;br /&gt;
&lt;img alt="1" src="./../images/GDG01.jpg" /&gt;      &lt;/p&gt;
&lt;h4&gt;2、新建GDG generation&lt;/h4&gt;
&lt;p&gt;那么GDG base生成以后，如何生成一个generation呢，要怎么规定生成的generation的文件属性呢？这些都在你的Job里面做的，比如下面的JCL语句：  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;EXTRACT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MYGDG&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BASE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="sr"&gt;//&lt;/span&gt; &lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;NEW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;CATLG&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DELETE&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="sr"&gt;//&lt;/span&gt; &lt;span class="no"&gt;UNIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SYSDA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="sr"&gt;//&lt;/span&gt; &lt;span class="no"&gt;SPACE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;CYL&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
&lt;span class="sr"&gt;//&lt;/span&gt; &lt;span class="no"&gt;DCB&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SYS1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MODEL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;RECFM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;FB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;LRECL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;125&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DSORG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;PS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样，就生成了一个IBMUSER.MYGDG.BASE.G0001V001的generation了。&lt;/p&gt;
&lt;h4&gt;3、引用已存在的GDG generation&lt;/h4&gt;
&lt;p&gt;这个要怎么引用呢，首先你要明白，括号()里面的数字是有意义的，如下：  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;XXXXX&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MYGDG&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BAS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt;  &lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="err"&gt;使用当前最新的&lt;/span&gt;&lt;span class="n"&gt;generation&lt;/span&gt;&lt;span class="o"&gt;*//&lt;/span&gt;
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;XXXXX&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MYGDG&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BAS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt; &lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="err"&gt;使用当前次新的&lt;/span&gt;&lt;span class="n"&gt;generation&lt;/span&gt;&lt;span class="o"&gt;*//&lt;/span&gt;
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;XXXXX&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IBMUSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MYGDG&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BAS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SHR&lt;/span&gt; &lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="err"&gt;使用当前第三新&lt;/span&gt;&lt;span class="n"&gt;generation&lt;/span&gt;&lt;span class="o"&gt;*//&lt;/span&gt;
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以此类推  &lt;/p&gt;
&lt;h4&gt;4、查看GDG的属性&lt;/h4&gt;
&lt;p&gt;要查看GDG的属性，可以在GDG base的左边用命令 &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;LISTC&lt;/span&gt; &lt;span class="no"&gt;GDG&lt;/span&gt; &lt;span class="no"&gt;ENT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/) ALL &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;回车，就会返回GDG的属性信息。比如什么时候建的，比如一共支持多少个generationden等。另一种方法是在ISPF；6 命令行里面输入:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;LISTC&lt;/span&gt; &lt;span class="no"&gt;GDG&lt;/span&gt; &lt;span class="no"&gt;ENT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;IBMUSER.MYGDG.BASE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;ALL&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;来查询IBMUSER.MYGDG.BASE的属性信息。  &lt;/p&gt;
&lt;h5&gt;5、删除GDG&lt;/h5&gt;
&lt;p&gt;对于一般的Dataset，我们在它前面打一个"D"就删掉了。但是GDG比较特殊，你必须至少输DEL才可以删掉。而且一定要记住顺序：先删除所有的generation，才可以允许你删除GDG base，否则会提示错误。&lt;/p&gt;
&lt;h5&gt;6、修改GDG属性&lt;/h5&gt;
&lt;p&gt;同样，要修改GDG的属性(如generation数目)，你仍然可以使用系统utiliti IDCAMS来修改，下图中，我用IDCAMS将IBMUSER.MYGDG.BASE的generation数量从原来的10个改到20个，只需提交job即可。
&lt;img alt="1" src="./../images/GDG02.jpg" /&gt;   &lt;/p&gt;
&lt;h5&gt;7、注意事项&lt;/h5&gt;
&lt;p&gt;这里，说一点特别需要注意的地方。GDG是在一个JOB执行完毕之后才被CATALOG的。假如你需要在一个JOB当中有两次需要生成新的GDG generation，那么你必须一次用(+1)，一次用(+2)，不能两次都用(+1)，因为在你Job执行完之前，系统不知道你前面已经生成了一个新的generation的。&lt;br /&gt;
还有，比如在同一个job里面，你前面一个step用(+1)生成了一个新的generation，名字叫IBMUSER.TEST.GDG，后面某个step紧接着要使用这个新生成的generation，你觉得这时候你是使用&lt;span style="color: #ff00ff;"&gt;DSN=IBMUSER.TEST.GDG(0),DISP=SHR&lt;/span&gt;呢还是使用&lt;span style="color: #ff00ff;"&gt;DSN=IBMUSER.TEST.GDG(+1),DISP=SHR&lt;/span&gt;呢？ 告诉你，这种情况下你必须用后者，因为在这个Job执行完之前，系统并不知道你在前面的step已经生成了这个generation。也就是说，gdg的catalog是在job层面上的，不是在step层面上的。好了，关于GDG就介绍到这里。&lt;/p&gt;</summary><category term="z/OS"></category><category term="GDG"></category></entry><entry><title>世代数据集—GDG介绍</title><link href="http://mainframer.github.io/articles/%E4%B8%96%E4%BB%A3%E6%95%B0%E6%8D%AE%E9%9B%86%E2%80%94GDG%E4%BB%8B%E7%BB%8D.html" rel="alternate"></link><updated>2011-06-25T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-06-25:articles/世代数据集—GDG介绍.html</id><summary type="html">&lt;p&gt;跟大机打交道，一定对大机上面的一种特殊文件gdg不会陌生。gdg又称世代数据集，在大机上面是用来组织彼此相关联的文件。比如你需要一年12个月每个月的报表数据，则可以定义一个有12个generation（世代）的GDG，每个generation存一个月的数据，这样就保证了彼此关联的信息能被更方便地管理和维护。它会保证任何时候都只保留最新的12个月的数据。&lt;br /&gt;
要使用GDG，你必须先有一个GDG base，有了GDG base才可以不断地产生generation。GDG文件是用GDG base名字+generation number来唯一区别的。比如你新建了一个GDG base的名字叫做:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PROD.CLIENT.ACCOUNT.NUMBER
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;则一般你以此产生的第一个generation的名字就叫做:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PROD.CLIENT.ACCOUNT.NUMBER.G0001V00
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以此类推，第二个就叫做：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PROD.CLIENT.ACCOUNT.NUMBER.G0002V00
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;直到&lt;code&gt;G9992V00&lt;/code&gt;为止。G000,G001等等叫做世代编号，V00叫做版本号，据我所知，平常用到的基本都是V00，可以这么说，除非极特殊的情况，否则你这辈子不会用到V01，所以，记住V00就可以了。 &lt;br /&gt;
关于要怎么建立GDG，如何查看GDG属性，如何更改GDG属性，在使用GDG过程中需要注意什么，我在以后的文章中会慢慢讲到，今天先说到这里。&lt;/p&gt;</summary><category term="z/OS"></category><category term="GDG"></category></entry><entry><title>介绍几个比较有用的ISPF命令(续一)</title><link href="http://mainframer.github.io/articles/%E4%BB%8B%E7%BB%8D%E5%87%A0%E4%B8%AA%E6%AF%94%E8%BE%83%E6%9C%89%E7%94%A8%E7%9A%84ISPF%E5%91%BD%E4%BB%A4(%E7%BB%AD%E4%B8%80).html" rel="alternate"></link><updated>2011-06-14T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-06-14:articles/介绍几个比较有用的ISPF命令(续一).html</id><summary type="html">&lt;p&gt;接上次讲的，这里继续介绍几个常用的有用的命令。&lt;/p&gt;
&lt;h5&gt;COMP&lt;/h5&gt;
&lt;p&gt;这是比较文件的命令，功能类似于&lt;code&gt;ISPF 3.13&lt;/code&gt;选项。如果你正打开自己PDS下面的&lt;code&gt;DMSID01.TESTLIB.PRGM(MYPGM01)&lt;/code&gt;编辑，你想跟你同事(DMSID02)PDS下面的一个MYPGM02比较看看有什么不同的话，你可以直接在Command栏上输入命令：
&lt;code&gt;COMP 'DMSID02.TESTLIB.PRGM(MYPGM02)'&lt;/code&gt;&lt;/p&gt;
&lt;h5&gt;COMP EXC&lt;/h5&gt;
&lt;p&gt;这是&lt;code&gt;COMP&lt;/code&gt;的高级选项，再后面加上EXC让比较结果中只显示不同的行。当然，为了不失关联性和便于理解，它还额外保留了不同处的前后各5行，显得特别人性化。可以简化成&lt;code&gt;'COMP X'&lt;/code&gt;  &lt;/p&gt;
&lt;h5&gt;F1 twice&lt;/h5&gt;
&lt;p&gt;很经常会有你想编辑某个DATASET或者Member的时候提示&lt;code&gt;"Member in use"&lt;/code&gt;,这时候你可以连续按两次F1，就能知道谁当前正在使用这个DATASET或者Member了。&lt;/p&gt;
&lt;h5&gt;HEX ON/OFF&lt;/h5&gt;
&lt;p&gt;文件中经常有些字符在普通的&lt;code&gt;View/Browse/Edit&lt;/code&gt;下要么不显示要么显示"乱码"，通常是为了节约存储空间和方便计算，数据类型经常定义成Fixed类型的，比如日期啊数值啊什么的，这时候你可以用命令&lt;code&gt;HEX ON&lt;/code&gt;来查看显示16进制内容，不用的时候用HEX OFF取消。当然，想更方便地查看的话用FileManager或File Aid吧。&lt;/p&gt;
&lt;h5&gt;RES&lt;/h5&gt;
&lt;p&gt;这个也经常用到，你新打开一个Dataset，经常默认的会显示些提示信息在文件的顶端，显得很烦，你可以打个&lt;code&gt;RES&lt;/code&gt;去掉这些提示信息。还有就是，在用&lt;code&gt;JEM/JSCAN&lt;/code&gt;检查完JCL语法的时候，也用RES消去所有的展开信息。在你用&lt;code&gt;XX&lt;/code&gt;隐藏无关的代码之后如何恢复显示呢，也是用&lt;code&gt;RES&lt;/code&gt;。  &lt;/p&gt;
&lt;h5&gt;REC ON——&amp;gt;UNDO&lt;/h5&gt;
&lt;p&gt;大机上可没有&lt;code&gt;"Cntl+Z"&lt;/code&gt;的，要想撤销最新一步的修改，你必须打上&lt;code&gt;UNDO&lt;/code&gt;的命令，当然前提是&lt;code&gt;REC ON&lt;/code&gt;的情况下才行，默认情况下是&lt;code&gt;REC OFF&lt;/code&gt;的，所以你要先&lt;code&gt;REC ON&lt;/code&gt;,然后才可以正常用&lt;code&gt;UNDO&lt;/code&gt;。&lt;/p&gt;</summary><category term="ISPF"></category></entry><entry><title>3390 volume,cylinder,track</title><link href="http://mainframer.github.io/articles/3390%20volume,cylinder,track.html" rel="alternate"></link><updated>2011-05-03T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-05-03:articles/3390 volume,cylinder,track.html</id><summary type="html">&lt;p&gt;通常我们用的是3390盘卷(Volume)，一个Volume有多大呢？可以这么计算：&lt;br /&gt;
一个3390盘卷有3339+1=3340个柱面(Cylinder);&lt;br /&gt;
一个柱面(Cylinder)有15个磁道(track);&lt;br /&gt;
一个磁道(track)大概可以保存56KB数据;&lt;br /&gt;
一个G=1024M;&lt;br /&gt;
综上可以得到：一个3390判卷(Volume)=3340x15x56=2805600KB，约等于&lt;strong&gt;2.6756G&lt;/strong&gt;
因为在大机上处理的数据基本都是文本，所以这样的量还是够用的，以至于我到现在也很少遇到需要跨卷的情况。&lt;/p&gt;</summary><category term="cylinder"></category><category term="track"></category></entry><entry><title>介绍几个有用的ISPF命令(续二)</title><link href="http://mainframer.github.io/articles/%E4%BB%8B%E7%BB%8D%E5%87%A0%E4%B8%AA%E6%9C%89%E7%94%A8%E7%9A%84ISPF%E5%91%BD%E4%BB%A4(%E7%BB%AD%E4%BA%8C).html" rel="alternate"></link><updated>2011-04-24T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-04-24:articles/介绍几个有用的ISPF命令(续二).html</id><summary type="html">&lt;h4&gt;M+F7 和 M+F8&lt;/h4&gt;
&lt;p&gt;命令行上输&lt;code&gt;M&lt;/code&gt;,接着按&lt;code&gt;F7&lt;/code&gt;, 表示回到文件最顶端&lt;br /&gt;
命令行上输&lt;code&gt;M&lt;/code&gt;,接着按&lt;code&gt;F8&lt;/code&gt;, 表示回到文件最低端  &lt;/p&gt;
&lt;h4&gt;COL&lt;/h4&gt;
&lt;p&gt;显示列号，这个命令特别是在对齐的时候很有用。因为在JCl语法中，很多关键字必须规定从第几列开始写，不然会出错的，比如JCLLIB ORDER一定要从第四列开始写，所以用&lt;code&gt;COL&lt;/code&gt;命令显示行号是很有必要的。&lt;/p&gt;
&lt;h4&gt;HI&lt;/h4&gt;
&lt;p&gt;语法高亮用HI，比如可以用&lt;code&gt;HI PLI&lt;/code&gt;来高亮PL/I代码，用&lt;code&gt;HI COBOl&lt;/code&gt;高亮COBOl代码，用&lt;code&gt;HI JCL&lt;/code&gt;来高亮JCL语法，用&lt;code&gt;HI REXX&lt;/code&gt;来高亮REXX语法，用HI ASM来高亮汇编代码，一共支持18种语言。可以&lt;code&gt;HI&lt;/code&gt;直接回车来查看和选择支持高亮的语言种类。当然，很多时候，我们直接用&lt;code&gt;HI ON&lt;/code&gt;或者&lt;code&gt;HI AUTO&lt;/code&gt;来让系统自动选择语法高亮的语言。&lt;/p&gt;
&lt;h4&gt;RETP&lt;/h4&gt;
&lt;p&gt;在3.4里输入命令&lt;code&gt;RETP&lt;/code&gt;就能查询得到你最近使用的十多个命令。&lt;/p&gt;
&lt;h4&gt;REFLIST&lt;/h4&gt;
&lt;p&gt;在3.4的菜单栏上有个&lt;code&gt;REFLIST&lt;/code&gt;的选项，里面可以列出你最近访问的30个DATASET&lt;/p&gt;
&lt;h4&gt;SORT&lt;/h4&gt;
&lt;p&gt;在PDS里面，可以用&lt;code&gt;SORT&lt;/code&gt;来对所有的MEMBER排序。可以配合参数来满足你的要求，比如：&lt;br /&gt;
&lt;code&gt;SORT CHANGED A&lt;/code&gt;: 按修改时间升序排列&lt;br /&gt;
&lt;code&gt;SORT ID A&lt;/code&gt;:      按ID升序排列 &lt;br /&gt;
&lt;code&gt;SORT SIZE D&lt;/code&gt;:    按SIZE降序排列 &lt;br /&gt;
&lt;code&gt;SORT CREATE A&lt;/code&gt;:  按创建时间升序排列   &lt;/p&gt;
&lt;h4&gt;PROFILE&lt;/h4&gt;
&lt;p&gt;在你编辑某个DATASET的时候用命令&lt;code&gt;PROFILE&lt;/code&gt;可以显示出所有当前的设置参数，然后你可以自行根据需要针对性的修改。如下图所示：
&lt;img alt="1" src="./../images/profile.jpg" /&gt;       &lt;/p&gt;
&lt;h4&gt;CO和S *&lt;/h4&gt;
&lt;p&gt;用来一次性拷贝PDS下面所有的member。在你要拷贝的PDS面前输入&lt;code&gt;CO&lt;/code&gt;，回车。这里，我们要拷贝&lt;code&gt;IBMUSER.TEST.LIB.COPY&lt;/code&gt;下面所有的member
&lt;img alt="1" src="./../images/PDS-COPY-ALL.jpg" /&gt;         &lt;/p&gt;
&lt;p&gt;接着输入&lt;code&gt;S *&lt;/code&gt;回车即可让你拷贝该PDS下面所有的member，当然，你也可以不拷贝所有的，而是有选择的拷贝。 &lt;br /&gt;
&lt;img alt="1" src="./../images/PDS-COPY-ALL02.jpg" /&gt;      &lt;/p&gt;
&lt;p&gt;好了，命令就介绍到这里，以后再补充。  &lt;/p&gt;</summary><category term="ISPF"></category></entry><entry><title>常见的TSO ISPF命令</title><link href="http://mainframer.github.io/articles/%E5%B8%B8%E8%A7%81%E7%9A%84TSO%20ISPF%E5%91%BD%E4%BB%A4.html" rel="alternate"></link><updated>2011-04-21T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-04-21:articles/常见的TSO ISPF命令.html</id><summary type="html">&lt;h3&gt;几个概念&lt;/h3&gt;
&lt;h4&gt;&lt;code&gt;TSO&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;TSO(Time Sharing Option)，时分操作，可以同时让多个用户登录到大机上。一般我们认为的TSO是命令行模式，像一些LOGON，LOGOFF，之类的命令与大机交互。&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;ISPF&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;ISPF(Interactive System Programming Facility)，它提供了一个menu菜单系统来与大机交互，可以说就是一个简单的menu system。&lt;br /&gt;
好了，言归正传。下面是必须知道的ISPF命令:  &lt;/p&gt;
&lt;h5&gt;ISPF功能键&lt;/h5&gt;
&lt;p&gt;PF1： HELP帮助键&lt;br /&gt;
PF2： SPLIT键，改变分屏位置&lt;br /&gt;
PF3： END键，结束并退回上级菜单&lt;br /&gt;
PF4： RETURN键，结束并退回主菜单&lt;br /&gt;
PF5： REFIND键，重复最近一次FIND命令&lt;br /&gt;
PF6： RECHANGE键，重复最近一次CHANGE命令&lt;br /&gt;
PF7： UP键，向上滚屏&lt;br /&gt;
PF8： DOWN键，向下滚屏&lt;br /&gt;
PF9： SWAP键，在分屏间切换&lt;br /&gt;
PF10： LEFT键，屏幕左滚&lt;br /&gt;
PF11： RIGHT键，屏幕右滚&lt;br /&gt;
PF12： RETRIVE键，显示上次输入的命令或CANCEL键，取消操作  &lt;/p&gt;
&lt;h5&gt;ISPF数据集列表操作命令（P.3.4)&lt;/h5&gt;
&lt;p&gt;Cat：Catalog编目数据集&lt;br /&gt;
C：  COpy拷贝数据集&lt;br /&gt;
D:   Delete删除数据集 
E:   Edit编辑数据集&lt;br /&gt;
I：  Information显示数据集详细信息&lt;br /&gt;
MO： MOve移动数据集&lt;br /&gt;
P：  Print打印数据集&lt;br /&gt;
R：  Rename更名数据集&lt;br /&gt;
S：  Select显示数据集基本信息&lt;br /&gt;
U：  Uncatalog撤销编目&lt;br /&gt;
V/B：View/Browse浏览数据集&lt;br /&gt;
Z：  Zip压缩数据集&lt;br /&gt;
=：  重复上一命令&lt;br /&gt;
/：  显示命令菜单  &lt;/p&gt;
&lt;h5&gt;ISPF数据集列表命令行命令&lt;/h5&gt;
&lt;p&gt;CONFIRM ON/OFF： 删除数据集是是否需要确认&lt;br /&gt;
EXCLUDE：  不显示名称中含有指定字符串的数据集
FIND：     查找名称中有指定字符串的数据集&lt;br /&gt;
LOCATE：   定位名称中有指定字符串的数据集&lt;br /&gt;
REFRESH：  刷新显示&lt;br /&gt;
RESET：    重设显示（清除命令行，重显隐藏数据集）
SORT：     按要求对数据集排序显示&lt;br /&gt;
VA： 列表中显示数据集属性  &lt;br /&gt;
VS： 列表中显示数据集空间使用情况&lt;br /&gt;
VT： 列表中显示数据集详细属性  &lt;br /&gt;
VV： 列表中显示数据集所在卷的信息&lt;/p&gt;
&lt;h5&gt;ISPF编辑命令行命令&lt;/h5&gt;
&lt;p&gt;CANCEL： 取消所做编辑并退出编辑环境&lt;br /&gt;
CAPS ON/OFF： 开启/关闭自动大写转换&lt;br /&gt;
CHANGE： 替换指定字符串，如“CHANGE OLD NEW ALL”把文件中所有“OLD”字符串替换为“NEW”串，(命令为 C A B ALL)&lt;br /&gt;
COPY： 从其它数据集拷贝文档到指定位置，该命令要与屏幕编辑命令结合使用，使用屏幕编辑命令指定插入位置。&lt;br /&gt;
CREATE： 创建一个新的成员。该命令要与屏幕编辑命令结合使用，先用屏幕编辑命令拷贝一个区域，然后使用CREATE命令把拷贝区域保存到一个新的成员数据集里去。
FIND： 查找指定字符串，按PF5重复查找。&lt;br /&gt;
RECOVERY ON/OFF：设置编辑方式，ON表示可以用UNDO命令取消上一次操作。
RESET： 重置编辑器，刷新屏幕，清除不必要的信息。
SAVE： 保存当前做的修改，继续编辑。&lt;br /&gt;
SORT： 文档按字典顺序排序。&lt;br /&gt;
SUBMIT： 提交作业&lt;br /&gt;
UNDO： 取消最近一次编辑  &lt;/p&gt;
&lt;h5&gt;ISPF编辑屏幕命令&lt;/h5&gt;
&lt;p&gt;A： 定位于当前行之后。&lt;br /&gt;
B： 定位于当前行之前。&lt;br /&gt;
C： 拷贝一行进内存拷贝区。&lt;br /&gt;
CC： 把两个CC间部分内容拷贝进内存拷贝区。&lt;br /&gt;
Cxx： xx是一个数字，该命令把当前行及一下一共xx行拷贝入拷贝区。&lt;br /&gt;
I： 在当前行下面插入一个新行&lt;br /&gt;
Ixx： 在当前行下面插入xx个新行&lt;br /&gt;
D： 删除当前行&lt;br /&gt;
DD： 删除用一对DD标记过的中间的行&lt;br /&gt;
Dxx： 删除xx行&lt;br /&gt;
R： 复制当前行&lt;br /&gt;
RR： 复制两个RR之间的行&lt;br /&gt;
Rxx： 复制xx行&lt;br /&gt;
X: 隐藏当前行不显示&lt;br /&gt;
XX: 隐藏两个XX之间的所有行不显示&lt;br /&gt;
Xxx: xx是一个数字，隐藏当前开始的xx行不显示&lt;br /&gt;
UC： 当前行转换成大写
UCxx： xx行转换成大写
LC： 当前行转换成小写
LCxx： xx行转换成小写
TS： 一行文本切分成两行
TF： 多行文本合并成一行  &lt;/p&gt;
&lt;p&gt;需要注意的是，这些命令并不是隔离开来的，很多时候必须彼此互相关联着使用才能达到效果，当然，这要靠熟能生巧来保证了，祝君好运!&lt;/p&gt;</summary><category term="TSO"></category><category term="ISPF"></category></entry><entry><title>介绍几个比较有用的ISPF命令</title><link href="http://mainframer.github.io/articles/%E4%BB%8B%E7%BB%8D%E5%87%A0%E4%B8%AA%E6%AF%94%E8%BE%83%E6%9C%89%E7%94%A8%E7%9A%84ISPF%E5%91%BD%E4%BB%A4.html" rel="alternate"></link><updated>2011-03-02T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-03-02:articles/介绍几个比较有用的ISPF命令.html</id><summary type="html">&lt;p&gt;上一篇讲的是常见的TSO/ISPF命令，这篇来讲讲我收集到的日常比较有用的ISPF命令。&lt;/p&gt;
&lt;h4&gt;HRECALL&lt;/h4&gt;
&lt;p&gt;大机上的Dataset比较久了没有被访问的话会自动被迁移(migrate)到tape中保存的，根据时间的长短，Dataset会被migrate到不同的level，比如MIGRAT1,MIGRAT2等等。这时，如果你想把这个Dataset 召(Recall)回来的话，平常我们都在这个Dataset前面打个&lt;code&gt;Call&lt;/code&gt;命令。这样做有个不好的地方，就是如果这个Dataset需要很长时间才能被RECALL回来的话(比如30分钟)，那这30分钟之内你只能看着屏幕发呆而啥都干不了了。所以这种情况下你可以试试后台Call的命令&lt;code&gt;HRECALL&lt;/code&gt;，它在后台操作，结束后会有提示，完全不影响你做其他事情&lt;/p&gt;
&lt;h4&gt;NUM OFF&lt;/h4&gt;
&lt;p&gt;有时你在编辑一个Dataset的行末尾的时候，每次保存都会提示:&lt;code&gt;Some input data&lt;/code&gt;ignored。这时因为默认情况下末尾的行号显示是开着占了8位，这8位是不可修改的，这时你可以试试在命令行上打个&lt;code&gt;NUM OFF&lt;/code&gt;把行号显示关了。&lt;/p&gt;
&lt;h4&gt;XDC&lt;/h4&gt;
&lt;p&gt;这是一个SDSF(&lt;em&gt;系统显示与查询工具&lt;/em&gt; 的命令，如果你想把一个JOB的输出Log保存到某个地方，比如自己的PDS，那么你可以在SDSF里面在这个JOB的Log前面打上XDC，然后写上你要保存的地方即可。(在ISPF面板输入&lt;code&gt;Q;ST&lt;/code&gt;查看JOBs运行信息，输&lt;code&gt;‘?’&lt;/code&gt;具体查看)&lt;/p&gt;
&lt;h4&gt;JEM/JSCAN&lt;/h4&gt;
&lt;p&gt;这两个命令都是用来检查JCL语法的，具体两个什么区别？最大的区别就是JEM之后所有被它展开的信息都只能看，不能被&lt;code&gt;FIND&lt;/code&gt;命令找到，&lt;code&gt;JSCAN&lt;/code&gt;就可以的，但&lt;code&gt;JSCAN&lt;/code&gt;的缺点是检查结果的提示信息不如JEM来的丰富和友好。只能说各有千秋，如果能合并到一起就好了。&lt;/p&gt;
&lt;h4&gt;MEM&lt;/h4&gt;
&lt;p&gt;是不是经常忘记自己的某个member在哪个PDS里面了？尝试下命令MEM吧，比如在命令行上打上MEM MYMEMBER 就能知道MYMEMBER在哪个PDS了。&lt;/p&gt;</summary><category term="z/OS"></category><category term="ISPF"></category></entry><entry><title>Dataset View和Browse的区别</title><link href="http://mainframer.github.io/articles/Dataset%20View%E5%92%8CBrowse%E7%9A%84%E5%8C%BA%E5%88%AB.html" rel="alternate"></link><updated>2011-01-13T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2011-01-13:articles/Dataset View和Browse的区别.html</id><summary type="html">&lt;p&gt;在大机上，View和Browse都能查看dataset/member，它们有什么区别呢？下面是我在平常的工作当中找到的三点区别，欢迎补充！ &lt;/p&gt;
&lt;h4&gt;1、Browse默认显示80列，而View默认显示72列，当然两者都可以用PF11向右翻页。&lt;/h4&gt;
&lt;h4&gt;2、Browse不允许修改，尝试修改会马上锁屏，而View可以修改，但不能保存成当前同名的，就是说有"另存为"的功能。&lt;/h4&gt;
&lt;h4&gt;3、Browse下许多命令不能用，比如语法高亮HI ON,比如JCL语法检查JEM，而View下都可以用。&lt;/h4&gt;
&lt;p&gt;你在view一个Member，若尝试做任何更改，会跳出这样的一段提示的话:
&lt;img alt="1" src="./../images/browse_view_01.jpg" /&gt;  &lt;br /&gt;
当你在View一个member的时候，可以在左边列用两个&lt;code&gt;CC&lt;/code&gt;选择你要另存为的范围，然后在command栏上输入&lt;code&gt;CREATE&lt;/code&gt;，回车即可另存为了:
&lt;img alt="1" src="./../images/browse_view_02.jpg" /&gt; &lt;/p&gt;
&lt;p&gt;个人认为View最有用的就是可以提交别人的JCL。下图中，假设你的ID是&lt;code&gt;USERID02&lt;/code&gt;,而&lt;code&gt;USERID01&lt;/code&gt;是你同事的ID，你自然是没有权限去sub他/他的JCL，这时，你要么可以把这个JCL拷到你自己的LIB下面改成你的ID再sub，要么直接View进去，改成你的ID，sub完之后无需保存即可。对于这种别人的JCL又不想麻烦地copy到自己lib时，是不是方便多了呢？
&lt;img alt="1" src="./../images/browse_view_03.jpg" /&gt;  &lt;/p&gt;</summary><category term="z/OS"></category><category term="Dataset"></category></entry><entry><title>DATACOM数据库介绍</title><link href="http://mainframer.github.io/articles/DATACOM%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BB%8B%E7%BB%8D.html" rel="alternate"></link><updated>2010-11-29T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2010-11-29:articles/DATACOM数据库介绍.html</id><summary type="html">&lt;p&gt;CA Datacom听过么？它是CA(Computer Associates)公司的企业级数据库。以能承受高负荷和较强的容错性著称，在mainframe平台上有比较广泛地应用，不过最近几年Datacom公司貌似不怎么行了，大家都换上了IBM的DB2数据库了。&lt;br /&gt;
Datacom不是关系型数据库，它是通过KEY来访问记录的，可以说是具备了基本的文件系统特征。通常KEY是某个或某几个字段的组合，一个table可以有多个KEY。在PL/I或COBOL程序中访问Datacom是通过调用接口DBNTRY来实现的(&lt;span style="color: #ff00ff;"&gt;XXX&lt;/span&gt;是table名字)。 在COBOL中是这样call的(&lt;span style="color: #ff00ff;"&gt;XXX&lt;/span&gt;是table名字)：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;CALL&lt;/span&gt; &lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="no"&gt;DBNTRY&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt; &lt;span class="no"&gt;USING&lt;/span&gt; &lt;span class="no"&gt;USER&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;ID&lt;/span&gt;
      &lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;REQ&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;AREA&lt;/span&gt;
      &lt;span class="no"&gt;XXXF0&lt;/span&gt;
      &lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;ELEMENT&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;LIST&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;而在这之前，要先声明：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="mo"&gt;01&lt;/span&gt; &lt;span class="no"&gt;USER&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;ID&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;PROGRAM&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;NAME&lt;/span&gt; &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;VALUE&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;MYPGM00 &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;FILLER&lt;/span&gt; &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;VALUE&lt;/span&gt; &lt;span class="no"&gt;SPACES&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="mo"&gt;01&lt;/span&gt; &lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;REQ&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;AREA&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;REQ&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;COMMAND&lt;/span&gt; &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mo"&gt;05&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;VALUE&lt;/span&gt; &lt;span class="no"&gt;SPACES&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;REQ&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;FILENAME&lt;/span&gt; &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mo"&gt;03&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;VALUE&lt;/span&gt; &lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;REQ&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;KEYNAME&lt;/span&gt; &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mo"&gt;05&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;VALUE&lt;/span&gt; &lt;span class="no"&gt;SPACES&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;REQ&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;RETURNCD&lt;/span&gt; &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mo"&gt;02&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;VALUE&lt;/span&gt; &lt;span class="no"&gt;SPACES&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;REQ&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;DBID&lt;/span&gt; &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mo"&gt;02&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;VALUE&lt;/span&gt; &lt;span class="no"&gt;SPACES&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;REQ&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;REC&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;ID&lt;/span&gt; &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mo"&gt;07&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;REQ&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;KEY&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;VALUE&lt;/span&gt; &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="mo"&gt;01&lt;/span&gt; &lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;WORK&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;AREA&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;WORK&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;AREA&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;274&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;WORK&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;AREA&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="mo"&gt;01&lt;/span&gt; &lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;ELEMENT&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;LIST&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;ELM&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mo"&gt;05&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;VALUE&lt;/span&gt; &lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="no"&gt;XXXA0&lt;/span&gt;&lt;span class="err"&gt;′&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;FILLER&lt;/span&gt; &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mo"&gt;01&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;ELM&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mo"&gt;05&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;VALUE&lt;/span&gt; &lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="no"&gt;XXXA6&lt;/span&gt;&lt;span class="err"&gt;′&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;FILLER&lt;/span&gt; &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mo"&gt;01&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="mo"&gt;05&lt;/span&gt; &lt;span class="no"&gt;FILLER&lt;/span&gt; &lt;span class="no"&gt;PIC&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mo"&gt;05&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="no"&gt;VALUE&lt;/span&gt; &lt;span class="no"&gt;SPACES&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;接着在程序中要分别对进行必要的赋值：  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;REQ&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;AREA&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;&lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;WORK&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;AREA&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="no"&gt;XXX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;ELEMENT&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;LIST&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;赋完值后就能执行 &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;CALL&lt;/span&gt; &lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="no"&gt;DBNTRY&lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;来对Datacom数据库表进行操作了。&lt;/p&gt;</summary><category term="z/OS"></category><category term="DATACOM"></category></entry><entry><title>大机平台的版本控制工具Changeman</title><link href="http://mainframer.github.io/articles/%E5%A4%A7%E6%9C%BA%E5%B9%B3%E5%8F%B0%E7%9A%84%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E5%B7%A5%E5%85%B7Changeman.html" rel="alternate"></link><updated>2010-10-30T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2010-10-30:articles/大机平台的版本控制工具Changeman.html</id><summary type="html">&lt;p&gt;在主机上面有好几个比较常见的版本控制工具，比如changeman和Endevor。我介绍下changeman。 &lt;/p&gt;
&lt;h4&gt;ISPF面板上输入C;1&lt;/h4&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/changeman-1.jpg" /&gt;      &lt;/p&gt;
&lt;h5&gt;changeman的界面，这里装的版本是5.6.2c，&lt;/h5&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/changeman-21.jpg" /&gt;      &lt;/p&gt;
&lt;h4&gt;我介绍下各个常用选项&lt;/h4&gt;
&lt;h5&gt;1.&lt;/h5&gt;
&lt;p&gt;用来新建，更新一个package的，你需要新建一个package来放置你的PL/I，COBOL程序和JCL等等&lt;/p&gt;
&lt;h5&gt;2.&lt;/h5&gt;
&lt;p&gt;将package freeze或unfreeze，在你觉得package里面的所有东西都测试得差不多了，可以准备上线安装之前，你要先freeze冻结掉这个package，然后等待相关项目管理人的approve，这样这个package才能被合法地安装。当然，如果你冻结了package之后，发现还有程序需要被修改什么的，这时候你可以反冻结(unfreeze)它，最好在package还没被approve之前。&lt;/p&gt;
&lt;h5&gt;3.&lt;/h5&gt;
&lt;p&gt;promote 或 demote。promote就是把你修改的程序版本提升到更高的level去。举个例子，一般PL/I或COBOL等写的程序在进入生产环境之前都会经过开发(Dev)——&amp;gt;系统集成测试(Sys)——&amp;gt;用户接收测试(UAT)——&amp;gt;生产环境(Prod)，promote就是可以把你的程序从较低的level提升到较高的level，慢慢接近prod，而demote反之就可以了。&lt;/p&gt;
&lt;h5&gt;4.&lt;/h5&gt;
&lt;p&gt;给项目管理人员用的，用来批准或拒绝你已经冻结(freeze)掉的package&lt;/p&gt;
&lt;h5&gt;5.&lt;/h5&gt;
&lt;p&gt;列出package，这个比较常用。比如你建了个package,在这个package里面改程序，下次登录的时候你只要把你的package ID在list里面输入就可以了。&lt;/p&gt;
&lt;h5&gt;Q.&lt;/h5&gt;
&lt;p&gt;很实用的一个功能。可以查到package,components，最重要的是它可以查到所有的components之间的依赖关系。比如你要查某个component的编译信息，你要查程序A都被那些Proc调用到，你要查Proc A都被哪些JCL调用到。&lt;/p&gt;
&lt;h6&gt;Query的菜单&lt;/h6&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/changeman-31.jpg" /&gt; &lt;br /&gt;
先介绍到这里好了，给个印象.&lt;/p&gt;</summary><category term="z/OS"></category><category term="Changeman"></category></entry><entry><title>登陆大型机——Aviva的介绍</title><link href="http://mainframer.github.io/articles/%E7%99%BB%E9%99%86%E5%A4%A7%E5%9E%8B%E6%9C%BA%E2%80%94%E2%80%94Aviva%E7%9A%84%E4%BB%8B%E7%BB%8D.html" rel="alternate"></link><updated>2010-10-28T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2010-10-28:articles/登陆大型机——Aviva的介绍.html</id><summary type="html">&lt;p&gt;一般我们日常用PC机工作拿什么软件来跟大型机(以下简称大机)交互呢? 理论上说几乎所有的终端登陆软件都可以的。而且一般每种终端登陆软件都支持多种协议连接到大机上，比如最常见的&lt;code&gt;TCP/IP，FTP,TELNET,SSL&lt;/code&gt;等等。这些软件有很多，外面比较常用的是&lt;code&gt;PCOMM，putty，SecCRT&lt;/code&gt;等等，我只用过PCOMM，稍微配置下IP啥的就可以连大机了。这个百度下就出来一堆。 
我们公司比较另类，用的终端软件叫Aviva，一般我们读作"鹅vi哇"，希伯来词，意为“美丽的春天”, 产自美国美国(Eicon)公司。谷歌能下载到，不过只有试用版的貌似。 
下面我说下Aviva的一些基本概念和使用。  &lt;/p&gt;
&lt;h3&gt;Destination和Session的配置:&lt;/h3&gt;
&lt;p&gt;所谓Destination 就是大型机的物理IP，你要连接到大型机上，就必须得配置下大型机的IP。装好aviva后，开始——&amp;gt;程序——&amp;gt;Eicon Aviva——&amp;gt;Create New Destination
这里destination的名字就取：My Destination&lt;br /&gt;
Connection type:TN3270   &lt;br /&gt;
&lt;img alt="1" src="./../images/aviva-1.jpg" /&gt; &lt;/p&gt;
&lt;p&gt;大型机的物理IP:&lt;br /&gt;
&lt;img alt="1" src="./../images/aviva-2.jpg" /&gt;      &lt;br /&gt;
&lt;img alt="1" src="./../images/aviva-3.jpg" /&gt;    &lt;br /&gt;
&lt;img alt="1" src="./../images/aviva-4.jpg" /&gt;    &lt;br /&gt;
这样，Destination就配置好了！ 
下面是Sesstion的配置。Session就是用来连到Destination交互的，你可以建很多个不同名字的Session，都指向同一个Destination 
因为平常的工作当中，经常需要建好几个session，比如可以一个用来登陆ONLINE CICS的，一个用来BATCH操作的，这个随便你建几个。这里，我建一个session名字就叫:My First Session &lt;br /&gt;
&lt;img alt="1" src="./../images/aviva-5.jpg" /&gt;   &lt;/p&gt;
&lt;p&gt;这里可以是默认的 &lt;br /&gt;
&lt;img alt="1" src="./../images/aviva-6.jpg" /&gt;      &lt;br /&gt;
有时候公司会有两台大型机(两个IP)，这时候可以选择一个Destination用做Primary,另一个用作backup的。因为我们前面只建了一个Destination,所以这里就选Single Destination only好了：  &lt;/p&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/aviva-7.jpg" /&gt;     &lt;br /&gt;
选中我们上面建的Destination:My Destination    &lt;/p&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/aviva-8.jpg" /&gt;      &lt;br /&gt;
&lt;img alt="1" src="./../images/aviva-9.jpg" /&gt;    &lt;br /&gt;
这样，运行这个session，点击连接，你就能看到那大机那熟悉的黑屏画面了！
(一般公司都会将大机的默认登陆画面改成包含公司logo的画面，所以不截图了)&lt;/p&gt;</summary><category term="z/OS"></category><category term="Aviva"></category></entry><entry><title>Hercules搭建z/OS虚拟机遇到的问题及解决办法</title><link href="http://mainframer.github.io/articles/Hercules%E6%90%AD%E5%BB%BAzOS%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95.html" rel="alternate"></link><updated>2010-08-14T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2010-08-14:articles/Hercules搭建zOS虚拟机遇到的问题及解决办法.html</id><summary type="html">&lt;p&gt;初学，在windows上搭建z/OS虚拟机，遇到不少问题，找到解决方法，记在这里。  &lt;/p&gt;
&lt;h5&gt;PCOMM每次都提示打印，怎么去掉这个烦人的窗口？&lt;/h5&gt;
&lt;h5&gt;解决办法：&lt;/h5&gt;
&lt;p&gt;PCOMM去掉每次连接提示打印的烦人窗口的方法：在&lt;code&gt;D:\SOFTWARE\IBMPCOMM\private\*.ws&lt;/code&gt;文件里面添加：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="no"&gt;LT&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="no"&gt;IgnoreWCCStartPrint&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;
&lt;span class="no"&gt;UndefinedCode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;
&lt;span class="no"&gt;UndefinedDBCSChar&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;如何为每一个磁盘建立shadow？&lt;/h5&gt;
&lt;h5&gt;解决办法：&lt;/h5&gt;
&lt;p&gt;比如：&lt;code&gt;sf+0A80&lt;/code&gt;:  为设备号为0A80的设备建立shadow (设备号只是个临时的概念)&lt;/p&gt;
&lt;h5&gt;IEE038E AMOUNT OF EXPANDED STORAGE EXCEEDS 0G MAXIMUM&lt;/h5&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/zosmoni_1.png" /&gt;      &lt;/p&gt;
&lt;h5&gt;解决办法：&lt;/h5&gt;
&lt;p&gt;在zOS1.9.cnf配置文件中删掉下面一行即可：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;XPNDSIZE  6
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;&lt;code&gt;HHCLC042E Port 00: Read error: Bad file descriptor&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;HerculesGUI界面一直提示 &lt;code&gt;HHCLC042E Port 00: Read error: Bad file descriptor&lt;/code&gt; 并且MVS主控台端有几行大红字：&lt;br /&gt;
&lt;img alt="1" src="./../images/zosmoni_2.png" /&gt;      &lt;/p&gt;
&lt;h5&gt;解决办法：&lt;/h5&gt;
&lt;p&gt;一直提示是老版本CTCI的bug，不用管。或者下载最新版的CTCI。&lt;/p&gt;
&lt;h5&gt;MVS主控台端出现大红字&lt;/h5&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/zosmoni_3.png" /&gt;      &lt;/p&gt;
&lt;h5&gt;解决办法：&lt;/h5&gt;
&lt;p&gt;等待，取决你机器速度。
 + 绿色信息代表正常
 + 红色的表示有错误或者警告
 + 白色的信息如果有一个编号&lt;/p&gt;
&lt;h5&gt;错误&lt;code&gt;IRA200E AUXILIARY STORAGE SHORTAGE&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/zosmoni_4.png" /&gt;      &lt;/p&gt;
&lt;h5&gt;解决办法：&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;OS/390&lt;/code&gt;自动记录硬件 (和某些软件) 的错误数据和一些统计数据于PDS &lt;code&gt;SYS1.LOGREC&lt;/code&gt;中，最终此数据集会被装满数据，系统会在 &lt;em&gt;CONSOLE&lt;/em&gt; 上发一条信息。
使用下述作业会打印 LOGREC 中的简要信息，同时会清空 &lt;code&gt;SYS1.LOGREC&lt;/code&gt; 数据集：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;STEP1&lt;/span&gt;   &lt;span class="no"&gt;EXEC&lt;/span&gt; &lt;span class="no"&gt;PGM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;IFCEREP1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;PARM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;CARD&amp;#39;&lt;/span&gt;
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SERLOG&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;SYS1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOGREC&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="no"&gt;DISP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;OLD&lt;/span&gt;
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;ACCDEV&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;DUMMY&lt;/span&gt;
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;EREPPT&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;TOURIST&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="no"&gt;SYSOUT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;
&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="no"&gt;SYSIN&lt;/span&gt; &lt;span class="no"&gt;DD&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="no"&gt;SYSUM&lt;/span&gt;
&lt;span class="no"&gt;ACC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;
&lt;span class="no"&gt;ZERO&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;
&lt;span class="sr"&gt;/*&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;参照原链接：&lt;a href="http://blog.sina.com.cn/s/blog_6c45bc400100x1uf.html"&gt;http://blog.sina.com.cn/s/blog_6c45bc400100x1uf.html&lt;/a&gt;  &lt;/p&gt;
&lt;h5&gt;如何规范地正常关闭大机虚拟机？&lt;/h5&gt;
&lt;h5&gt;解决办法：&lt;/h5&gt;
&lt;p&gt;完整的停机，在停止VTAM之前, 要先停掉DB2，CICS等作业：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="n"&gt;CICSA&lt;/span&gt; 
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;DB8G&lt;/span&gt; &lt;span class="n"&gt;STOP&lt;/span&gt; &lt;span class="n"&gt;DB2&lt;/span&gt; 
&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;CSQ1&lt;/span&gt; &lt;span class="n"&gt;STOP&lt;/span&gt; &lt;span class="n"&gt;QMGR&lt;/span&gt; 
&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="n"&gt;DLF&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;MODE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;DRAIN&lt;/span&gt; 
&lt;span class="n"&gt;P&lt;/span&gt; &lt;span class="n"&gt;DLF&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;先使用下面的命令停掉一般的任务：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;S&lt;/span&gt; &lt;span class="n"&gt;SHUTDOWN&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;使用&lt;code&gt;D A,L&lt;/code&gt;确认仍然在运行的任务，不记得是不是VTAM是否会自动停掉，如果没有，使用下面的命令：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Z&lt;/span&gt; &lt;span class="n"&gt;NET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;QUICK&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;最后使用下面的命令停掉JES2：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;P&lt;/span&gt; &lt;span class="n"&gt;JES2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;TERM&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;之后在&lt;code&gt;Hercules&lt;/code&gt;上输入&lt;code&gt;STOP&lt;/code&gt;停止模拟机。 
之后,可以使用下面的几个命令： &lt;br /&gt;
&lt;em&gt;1、&lt;/em&gt; 输入&lt;code&gt;EXIT&lt;/code&gt;退出Hercules, 可能要等一会儿。 &lt;br /&gt;
&lt;em&gt;2、&lt;/em&gt; 输入&lt;code&gt;LOADPARM&lt;/code&gt;来改变IPL 参数，以便以不同的配置重新起动系统。 &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;LOADPARM 0A82ACM1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;3、&lt;/em&gt; 使用命令&lt;code&gt;IPL A80&lt;/code&gt;来重新启动系统。  &lt;br /&gt;
你的3270仿真软件(MVS Console)应该不需要重新连接。 &lt;/p&gt;
&lt;h5&gt;输入命令&lt;code&gt;L CICS&lt;/code&gt;欲登陆CICS出现错误:&lt;code&gt;LCL701 UNABLE TO ESTABLISH SESSION - INIT SELF FAILED WITH SENSE 08570002&lt;/code&gt;&lt;/h5&gt;
&lt;h5&gt;解决办法：&lt;/h5&gt;
&lt;p&gt;要正常登录，三个软件必须正常运行：&lt;code&gt;JES2&lt;/code&gt;,&lt;code&gt;VTAM&lt;/code&gt;和&lt;code&gt;TSO&lt;/code&gt;,多半原因是因为&lt;code&gt;VTAM&lt;/code&gt;还没正常启动好。只需等待一会儿问题解决。(&lt;code&gt;LCL701&lt;/code&gt;为&lt;code&gt;VTAM&lt;/code&gt;终端编号)&lt;/p&gt;
&lt;h5&gt;TSO默认USER/PASS&lt;/h5&gt;
&lt;p&gt;（0A82CSM1登陆TSO可以，CICS不行；0A82ACM1反之)&lt;/p&gt;
&lt;h5&gt;默认用户　　　   密码　　　        权限&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;ADCDMST -         SYS1 or ADCDMST  - (RACF special authority)    &lt;/li&gt;
&lt;li&gt;IBMUSER  -        SYS1 or IBMUSER  - (RACF special authority)&lt;/li&gt;
&lt;li&gt;SYSADM   -        SYS1 or SYSADM   - (DB2 and RACF special auth)     &lt;/li&gt;
&lt;li&gt;SYSOPR   -        SYS1 or SYSOPR   - (DB2 and RACF special auth)     &lt;/li&gt;
&lt;li&gt;ADCDA ~ ADCDZ -    TEST&lt;/li&gt;
&lt;li&gt;WEBADM        -   WEBADM&lt;/li&gt;
&lt;li&gt;OPEN1 - OPEN3 -    SYS1&lt;br /&gt;
&lt;img alt="1" src="./../images/zosmoni_5.png" /&gt;   &lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;code&gt;Master console&lt;/code&gt; 不显示&lt;/h5&gt;
&lt;h5&gt;解决办法：&lt;/h5&gt;
&lt;p&gt;Master console 的窗口要在IPL 之前就打开 否则无法显示内容&lt;/p&gt;
&lt;h5&gt;&lt;code&gt;Master console&lt;/code&gt;显示：&lt;code&gt;*IRA200E AUXILIARY STORAGE SHORTAGE&lt;/code&gt;, 并且登陆‘L TSO’显示：&lt;code&gt;IKT00203I ADDRESS SPACE CREATION FAILED&lt;/code&gt;&lt;/h5&gt;
&lt;h5&gt;解决办法：&lt;/h5&gt;
&lt;p&gt;原因是Page Dataset空间不够，可试试增大hercules.cnf中的MAINSIZE&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;D ASM                
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;查看page dataset使用情况  （Local Page Dataset 在70%以下才可以登录TSO.&lt;br /&gt;
为系统增加page。
PAGE DATASET在IPL的PARMLIB下SYS1.PARMLIB(IEASYS00)，Z/os1.9的是在ADCD.Z19.PARMLIB。&lt;br /&gt;
参照链接：&lt;a href="http://blog.sina.com.cn/s/blog_6c45bc400100x1uf.html 
http://fandezhi.efglobe.com/modules.php?name=Forums&amp;amp;file=viewtopic&amp;amp;t=1489&amp;amp;highlight=SYS1.LOCAL&amp;amp;sid=1af7e969c97a9531533932f689ac7b5c"&gt;RA200E AUXILIARY STORAGE SHORTAGE解决办法&lt;/a&gt; &lt;/p&gt;</summary><category term="z/OS"></category><category term="Hercules"></category></entry><entry><title>z/OS虚拟机各Volume的解释</title><link href="http://mainframer.github.io/articles/zOS%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%90%84Volume%E7%9A%84%E8%A7%A3%E9%87%8A.html" rel="alternate"></link><updated>2010-06-28T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2010-06-28:articles/zOS虚拟机各Volume的解释.html</id><summary type="html">&lt;h3&gt;Volume的内容 (z/OS 1.6)&lt;/h3&gt;
&lt;h5&gt;VOLUME         UCB           Contents&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;Z6RES1&lt;/code&gt;  - A80 - Res Volume 1 - Required for IPL&lt;br /&gt;
&lt;code&gt;Z6RES2&lt;/code&gt;  - A81 - Res Volume 2 - Required for IPL&lt;br /&gt;
&lt;code&gt;Z6SYS1&lt;/code&gt;  - A82 - IPLPARM, JES2 Spool, Public Work Volume, Mastercat required for IPL&lt;br /&gt;
&lt;code&gt;Z6USS1&lt;/code&gt;  - A83 - USS Root and accompanying HFS files - required for IPL&lt;br /&gt;
&lt;code&gt;Z6USS2&lt;/code&gt;  - A84 - Supplemental HFS files - required for IPL&lt;br /&gt;
&lt;code&gt;Z6DIS1&lt;/code&gt;  - A85 - Distribution Lib volume 1&lt;br /&gt;
&lt;code&gt;Z6DIS2&lt;/code&gt;  - A86 - Distribution Lib volume 2&lt;br /&gt;
&lt;code&gt;Z6DIS3&lt;/code&gt;  - A87 - Distribution Lib volume 3&lt;br /&gt;
&lt;code&gt;Z6DIS4&lt;/code&gt;  - A88 - Distribution Lib volume 4&lt;br /&gt;
&lt;code&gt;Z6DIS5&lt;/code&gt;  - A89 - Distribution Lib volume 5&lt;br /&gt;
&lt;code&gt;Z6WAS1&lt;/code&gt;  - A8A - Websphere Application Server Distribution Libs&lt;br /&gt;
&lt;code&gt;Z6WAS2&lt;/code&gt;  - A8B - Websphere Application Server Target Libs&lt;br /&gt;
&lt;code&gt;Z6DB81&lt;/code&gt;  - A8C - DB2 V8.1 Target Libs&lt;br /&gt;
&lt;code&gt;Z6DB82&lt;/code&gt;  - A8D - DB2 V8.1 Distribution Libs&lt;br /&gt;
&lt;code&gt;Z6CIC1&lt;/code&gt;  - A8E - CICS TS 2.3 Target and Dlibs&lt;br /&gt;
&lt;code&gt;Z6IMS1&lt;/code&gt;  - A8F - IMS 8.1 Target and Dlibs&lt;br /&gt;
&lt;code&gt;SARES1&lt;/code&gt;  - A90 - Stand Alone IPL volume   &lt;/p&gt;</summary><category term="z/OS"></category><category term="Volume"></category></entry><entry><title>搭建z/OS虚拟机常用的LoadParm</title><link href="http://mainframer.github.io/articles/%E6%90%AD%E5%BB%BAzOS%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%B8%B8%E7%94%A8%E7%9A%84LoadParm.html" rel="alternate"></link><updated>2010-06-04T00:00:00+08:00</updated><author><name>mainframer</name></author><id>tag:mainframer.github.io,2010-06-04:articles/搭建zOS虚拟机常用的LoadParm.html</id><summary type="html">&lt;h3&gt;LOADPARM  Description(z/OS 1.6)&lt;/h3&gt;
&lt;p&gt;在启动z/OS虚拟机的时候选择的LoadParm不同，意味着大机将启动不同的服务，说明如下：&lt;br /&gt;
&lt;code&gt;CS&lt;/code&gt;         CLPA and cold start of JES2. Base z/OS system functions i.e. no CICS, DB2, IMS, WAS, etc. &lt;br /&gt;
&lt;code&gt;00&lt;/code&gt;         Warm start of JES2. Base z/OS system functions i.e. no CICS, DB2, IMS, WAS, etc. &lt;br /&gt;
&lt;code&gt;WS&lt;/code&gt;         Warm start of JES2. Base z/OS system functions i.e. no CICS, DB2, IMS, WAS, etc. &lt;br /&gt;
&lt;code&gt;DC&lt;/code&gt;         CLPA, brings in CICS LPA modules, cold start of JES2, starts up DB2 and CICS. &lt;br /&gt;
&lt;code&gt;DB&lt;/code&gt;         Warmstart of JES2 and starts the DB2 and CICS. &lt;br /&gt;
&lt;code&gt;DI&lt;/code&gt;         CLPA and cold start of JES2 and loads the IMS Libraries. IMS must be manually started. &lt;br /&gt;
&lt;code&gt;CC&lt;/code&gt;         CLPA and cold start of JES2, loads the CICS Libraries, starts up CICS, no DB2. &lt;br /&gt;
&lt;code&gt;CW&lt;/code&gt;         Warm start of JES2, and starts up CICS. &lt;br /&gt;
&lt;code&gt;7C&lt;/code&gt;         CLPA, cold start of JES2, starts up DB2 V7, no CICS. &lt;br /&gt;
&lt;code&gt;7W&lt;/code&gt;         Warm start of JES2, starts up DB2 V7, no CICS. &lt;br /&gt;
&lt;code&gt;8C&lt;/code&gt;         CLPA, cold start of JES2, starts up DB2 v8, no CICS. &lt;br /&gt;
&lt;code&gt;8W&lt;/code&gt;         Warm start of JES2, starts up DB2 v8, no CICS. &lt;br /&gt;
&lt;code&gt;IC&lt;/code&gt;         CLPA and cold start of JES2 and load the IMS Libraries, start IMS, no DB2 or CICS. &lt;br /&gt;
&lt;code&gt;IW&lt;/code&gt;         Warm start of JES2 start IMS, no DB2 or CICS. &lt;br /&gt;
&lt;code&gt;AC&lt;/code&gt;         CLPA and cold start of JES2 load IMS and CICS libraries, start IMS, DB/2, and CICS. &lt;br /&gt;
&lt;code&gt;AW&lt;/code&gt;         Warmstart of JES2. start IMS, DB/2, and CICS. &lt;br /&gt;
&lt;code&gt;BC&lt;/code&gt;         CLPA and cold start of JES2, load WAS libraries, WAS is manually started &lt;br /&gt;
&lt;code&gt;BW&lt;/code&gt;         Warmstart of JES2. WAS is manually started. &lt;br /&gt;
&lt;code&gt;99&lt;/code&gt;         Points to IODF99 for IPL on MP3000. Reply 00,SYSP=xx were xx is any of the above options i.e. for cics only xx=cc or cw.   &lt;/p&gt;
&lt;h5&gt;Device number: &lt;strong&gt;0A80&lt;/strong&gt; 　Load Parm: &lt;strong&gt;0A82CSM1&lt;/strong&gt;&lt;/h5&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/zosmoni_loadparm_1.png" /&gt;     &lt;/p&gt;
&lt;h5&gt;Device number: &lt;strong&gt;0A80&lt;/strong&gt; 　Load Parm: &lt;strong&gt;0A82DBM1&lt;/strong&gt;&lt;/h5&gt;
&lt;p&gt;&lt;img alt="1" src="./../images/zosmoni_loadparm_2.png" /&gt;     &lt;/p&gt;</summary><category term="z/OS"></category><category term="LoadParm"></category></entry></feed>